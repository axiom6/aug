{
  "version": 3,
  "file": "Jitt.js",
  "sourceRoot": "../../../src/jitt/appl",
  "sources": [
    "Jitt.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport { tester } from  '../../../lib/pub/test/Tester.js'\nimport Access     from '../../../lib/pub/util/Access.js'\nimport Stream     from '../../../lib/pub/util/Stream.js'\nimport Touch      from '../../../lib/pub/navi/Touch.js'\n#mport Cache      from '../../../lib/pub/util/Cache.js'\nimport Mix        from '../../../lib/pub/navi/Mix.js'\nimport Nav        from '../../../lib/pub/navi/Nav.js'\n\nimport { createApp } from 'vue'    #\nimport { createRouter, createWebHistory } from 'vue-router'\n\nimport ChoiceJson from '../../../data/jitter/Choice.json'\nimport JitterJson from '../../../data/jitter/Jitter.json'\nimport FlavorJson from '../../../data/jitter/Flavor.json'\n\nimport Home    from '../../../vue/jitt/appl/Jitt.vue'\nimport Flavor  from '../../../vue/jitt/main/Flavor.vue'\nimport Roast   from '../../../vue/jitt/main/Roast.vue'\nimport Brew    from '../../../vue/jitt/main/Brew.vue'\nimport Drink   from '../../../vue/jitt/main/Drink.vue'\nimport Body    from '../../../vue/jitt/main/Body.vue'\nimport Done    from '../../../vue/jitt/main/Done.vue'\n#mport World   from '../../../vue/jitt/main/World.vue'\n#mport Region  from '../../../vue/jitt/main/Region.vue'\n\nclass Jitter\n\n  Jitter.appName = 'Jitter'\n\n  # Initialization is accomplished in 3 steps:\n  # 1. Read in all the JSON config files in Jitter.Batch. Call Jitter.init() when complete.\n  # 2. Jitter.init() initializes publish, subscribe and navigation with Stream and refines Practices with Build and merge.\n  # 3. Jitter.vue() launches Vue with Home page and a Toc for Prin Info Know and Wise practices\n\n  # Called by muse.html to kick things off\n  # 1. Read in all the JSON config files in Jitter.Batch. Call Jitter.init() when complete.\n  Jitter.start = () ->\n    Jitter.addToHead()\n    for key, val of Jitter.Batch when val.refine? and val.refine\n      val.data = Access.refine(val.data)\n    Jitter.init( Jitter.Batch )\n    return\n\n  # Add these <link> tags to <head> because vite build makes a mess of them\n  Jitter.addToHead = () ->\n    # manifest = \"\"\"<link href=\"manifest.json\"  rel=\"manifest\" crossorigin=\"use-credentials\">\"\"\"\n    # siteLink = \"\"\"<link href=\"https://vit-muse.web.app/\" rel=\"canonical\">\"\"\"\n    maniElem                = document.createElement('link')\n    maniElem.href           = \"manifest.json\"\n    maniElem.rel            = \"manifest\"\n    maniElem['crossorigin'] = \"use-credentials\"\n    siteElem      = document.createElement('link')\n    siteElem.href = window.location.href\n    siteElem.rel  = \"canonical\"\n    head          = document.getElementsByTagName(\"head\")[0]\n    head.appendChild(maniElem)\n    head.appendChild(siteElem)\n    return\n\n  Jitter.Batch = {\n    Choice: { url:'jitter/Choice.json', data:ChoiceJson, type:'none', plane:'none', refine:true }\n    Jitter: { url:'jitter/Jitter.json', data:JitterJson, type:'none', plane:'none', refine:true }\n    Flavor: { url:'jitter/Flavor.json', data:FlavorJson, type:'none', plane:'none', refine:true } }\n\n  # Vue Router Routes\n  Jitter.routes = [\n    { path: '/',       name:'Home',   components:{ Home:   Home    } }\n    { path: '/Flavor', name:'Flavor', components:{ Flavor: Flavor  } }\n    { path: '/Roast',  name:'Roast',  components:{ Roast:  Roast   } }\n    { path: '/Brew',   name:'Brew',   components:{ Brew:   Brew    } }\n    { path: '/Drink',  name:'Drink',  components:{ Brew:   Drink   } }\n    { path: '/Body',   name:'Body',   components:{ Body:   Body    } }\n    { path: '/Done',   name:'Done',   components:{ Done:   Done    } } ]\n\n  # Toc.vue components and route Nav() directions\n  Jitter.komps = {\n    Home:{   name:'Home',   route:'Home',   icon:\"fas fa-draw-polygon\",\n    west:\"Flavor\", north:\"Flavor\",  east:\"Flavor\", south:\"Flavor\",  next:\"Home\", prev:\"Home\" }\n    Flavor:{ name:'Flavor', route:'Flavor', icon:\"fas fa-bezier-curve\",\n    west:\"Roast\",  north:\"Roast\",   east:\"Roast\",  south:\"Roast\",   next:\"Home\", prev:\"Home\" }\n    Roast:{  name:'Roast',  route:'Roast',  icon:\"fas fa-bezier-curve\",\n    west:\"Brew\",   north:\"Brew\",  east:\"Brew\",   south:\"Brew\",   next:\"Home\", prev:\"Home\" }\n    Brew:{   name:'Brew',   route:'Brew',   icon:\"fas fa-bezier-curve\",\n    west:\"Drink\",   north:\"Drink\",   east:\"Drink\",  south:\"Drink\", next:\"Home\", prev:\"Home\" }\n    Drink:{  name:'Drink',  route:'Drink',  icon:\"fas fa-bezier-curve\" ,\n    west:\"Body\", north:\"Body\",   east:\"Body\",   south:\"Body\",  next:\"Home\", prev:\"Home\" }\n    Body:{   name:'Body',   route:'Body',   icon:\"fas fa-bezier-curve\",\n    west:\"Flavor\",  north:\"Flavor\", east:\"Flavor\",   south:\"Flavor\",   next:\"Home\", prev:\"Home\" }\n    Done:{   name:'Done',   route:'Done',   icon:\"fas fa-bezier-curve\",\n    west:\"Home\",  north:\"Home\", east:\"Home\",   south:\"Home\",   next:\"Home\", prev:\"Home\" } }\n\n\n  Jitter.routeNames = Jitter.createRouteNames( Jitter.routes )\n\n  # 2. Initializes publish, subscribe and navigation with Stream and refines Practices with Build and merge.\n  Jitter.init =   () ->\n    Jitter.app     = 'Jitter'\n    subjects       = [\"Dir\",\"Nav\"]\n    streamLog      = { subscribe:false, publish:false, subjects:subjects }\n    Jitter.stream  = new Stream( subjects, streamLog )\n    Jitter.mix     = new Mix(   Jitter, Jitter.routeNames )\n    Jitter.nav     = new Nav(   Jitter, Jitter.stream, Jitter.komps, {}, true )\n    Jitter.touch   = new Touch( Jitter.stream, Jitter.nav )\n    #itter.cache   = new Cache( Jitter.stream )\n    tester.setOptions( { testing:true, archive:true, verbose:false, debug:false } )\n    Jitter.vue()\n    return\n\n  # 3. Launches Vue with Home page and a Toc for Prin Info Know and Wise practices\n  Jitter.vue = () ->\n    Jitter.app = createApp( Home.Dash   )\n    Jitter.app.provide('app',    Jitter.app )\n    Jitter.app.provide('mix',    Jitter.mix )\n    Jitter.app.provide('nav',    Jitter.nav )\n    Jitter.app.provide('tester', tester     )\n    router = Jitter.router( Jitter.routes )\n    Jitter.app.use(        router )\n    Jitter.nav.router    = router\n    Jitter.app.mount('j-jitter')\n    Jitter.nav.doRoute( { compKey:'Home' } )\n    return\n\n  # Lazy loader with dynamic import()\n  Jitter.lazy = (name) -> () ->\n    path = \"../../#{name}.js\"\n    if path is false then {}\n    return `import( /* @vite-ignore */ path )`\n\n  # Vue Router Routes\n  Jitter.router = ( routes ) ->\n    createRouter( { routes:routes, history:createWebHistory() } )\n\n  Jitter.createRouteNames = ( routes ) ->\n    routeNames = []\n    for route in routes\n      routeNames.push( route.name )\n    routeNames\n\nexport default Jitter\n"
  ]
}