{
  "version": 3,
  "file": "Lights.js",
  "sourceRoot": "../../../src/vizu/main",
  "sources": [
    "Lights.coffee"
  ],
  "names": [],
  "mappings": "AACA,IAAA;;AAAA,OAAA;EAAS,YAAT;EAAuB,gBAAvB;EAAyC,sBAAzC;EACE,SADF;EACa,eADb;EAC8B,QAD9B;CAAA,MAAA;;AAGM,SAAN,MAAA,OAAA;EAEE,WAAY,KAAA,CAAA;IAAE,IAAC,CAAA;IACb,IAAC,CAAA,KAAD,GAAgB,IAAC,CAAA,WAAW,CAAC;IAC7B,IAAC,CAAA,IAAD,GAAgB,IAAC,CAAA,IAAI,CAAC,IAAI,CAAC;IAC3B,IAAC,CAAA,EAAD,GAAgB,IAAC,CAAA,IAAI,CAAC;IACtB,IAAC,CAAA,YAAD,GAAgB,GAHpB;IAII,IAAC,CAAA,MAAD,GAAgB,IAAC,CAAA,WAAD,CAAc,IAAC,CAAA,IAAf,EAAqB,IAAC,CAAA,EAAtB,EAJpB;IAKI,IAAC,CAAA,IAAI,CAAC,GAAN,CAAW,IAAC,CAAA,KAAD,GAAO,IAAlB,EAAwB,IAAxB;EANU;;EAQZ,WAAY,CAAE,IAAF,EAAQ,EAAR,CAAA;IACV,IAA+B,cAAJ,IAAkB,oBAA7C;AAAA,aAAO,IAAC,CAAA,OAAD,CAAU,IAAV,EAAP;;AACA,YAAO,IAAI,CAAC,KAAZ;AAAA,WACO,SADP;eAC2B,IAAC,CAAA,OAAD,CAAe,IAAf;AAD3B,WAEO,WAFP;eAE2B,IAAC,CAAA,SAAD,CAAe,IAAf;AAF3B,WAGO,aAHP;eAG2B,IAAC,CAAA,WAAD,CAAe,IAAf,EAAqB,EAArB;AAH3B,WAIO,MAJP;eAI2B,IAAC,CAAA,IAAD,CAAe,IAAf;AAJ3B,WAKO,cALP;eAK2B,IAAC,CAAA,YAAD,CAAe,IAAf,EAAqB,EAArB;AAL3B;QAOI,OAAO,CAAC,GAAR,CAAa,oCAAb,EAAmD,IAAI,CAAC,KAAxD;eACA,IAAC,CAAA,OAAD,CAAU,IAAV;AARJ;EAFU;;EAYZ,OAAQ,CAAE,IAAF,CAAA;AACV,QAAA,KAAA,EAAA,SAAA,EAAA;IAAI,KAAA,GAAe,kBAAH,GAAoB,kBAApB,GAA6C;IACzD,SAAA,GAAe,sBAAH,GAAwB,sBAAxB,GAA6C;IACzD,KAAA,GAAY,IAAI,YAAJ,CAAkB,KAAlB,EAAyB,SAAzB;IACZ,KAAK,CAAC,QAAQ,CAAC,GAAf,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAA6B,CAAC,SAA9B,CAAA;IACA,IAAC,CAAA,IAAI,CAAC,UAAN,CAAiB,KAAjB;WACA,CAAC,KAAD;EANM;;EAQR,SAAU,CAAE,IAAF,CAAA;AACZ,QAAA,KAAA,EAAA,MAAA,EAAA,SAAA,EAAA;IAAI,KAAA,GAAe,kBAAH,GAAwB,kBAAxB,GAA6C;IACzD,SAAA,GAAe,sBAAH,GAAwB,sBAAxB,GAA6C;IACzD,KAAA,GAAmB,IAAI,SAAJ,CAAe,KAAf,EAAsB,SAAtB;IACnB,KAAK,CAAC,UAAN,GAAmB;IACnB,KAAK,CAAC,KAAN,GAAmB;IACnB,KAAK,CAAC,QAAN,GAAmB;IACnB,KAAK,CAAC,KAAN,GAAmB;IACnB,KAAK,CAAC,QAAN,GAAmB;IACnB,IAAC,CAAA,IAAI,CAAC,UAAN,CAAiB,KAAjB;IACA,IAAG,qBAAA,IAAiB,IAAI,CAAC,MAAzB;MACE,MAAA,GAAS,IAAI,eAAJ,CAAqB,KAArB;MACT,IAAC,CAAA,IAAI,CAAC,UAAN,CAAkB,MAAlB,EAFF;;WAGA,CAAC,KAAD;EAbQ;;EAgBV,IAAK,CAAE,IAAF,CAAA;AAEP,QAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;IAAI,IAAG,IAAH;MAAa,MAAb;;IAEA,SAAA,GAAa,IAAI,gBAAJ,CAAsB,OAAtB,EAA+B,IAA/B;IACb,SAAS,CAAC,QAAQ,CAAC,GAAnB,CAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B;IACA,SAAS,CAAC,IAAV,GAAiB;IACjB,IAAC,CAAA,IAAI,CAAC,UAAN,CAAkB,SAAlB;IAEA,SAAA,GAAY,IAAI,gBAAJ,CAAsB,OAAtB,EAA+B,IAA/B;IACZ,SAAS,CAAC,QAAQ,CAAC,GAAnB,CAAuB,CAAC,CAAxB,EAA2B,CAAC,CAA5B,EAA+B,CAA/B;IACA,SAAS,CAAC,IAAV,GAAmB;IACnB,IAAC,CAAA,IAAI,CAAC,UAAN,CAAkB,SAAlB;IAEA,SAAA,GAAY,IAAI,gBAAJ,CAAsB,OAAtB,EAA+B,IAA/B;IACZ,SAAS,CAAC,QAAQ,CAAC,GAAnB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;IACA,SAAS,CAAC,IAAV,GAAiB;IACjB,IAAC,CAAA,IAAI,CAAC,UAAN,CAAkB,SAAlB;IAEA,SAAA,GAAY,IAAI,SAAJ,CAAe,QAAf;IACZ,SAAS,CAAC,QAAQ,CAAC,GAAnB,CAAwB,CAAxB,EAA2B,EAA3B,EAA+B,CAA/B;IACA,SAAS,CAAC,UAAV,GAAuB;IACvB,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KAAzB,GAAkC;IAClC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAzB,GAAkC;IAClC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAxB,GAAkC;IAClC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAxB,GAAkC;IAClC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAxB,GAAkC;IAClC,IAAC,CAAA,IAAI,CAAC,UAAN,CAAkB,SAAlB;WACA,CAAE,SAAF,EAAa,SAAb,EAAwB,SAAxB,EAAmC,SAAnC;EA5BG;;EA8BL,YAAa,CAAE,IAAF,EAAQ,EAAR,CAAA;AACf,QAAA,YAAA,EAAA,WAAA,EAAA;IAAI,WAAA,GAAc,IAAI,SAAJ,CAAe,QAAf,EAAyB,CAAzB;IACd,WAAW,CAAC,UAAZ,GAAyB;IACzB,QAAA,GAAc,IAAI,QAAJ,CAAA;IACd,WAAW,CAAC,QAAQ,CAAC,GAArB,CAA0B,EAAE,CAAC,EAA7B,EAAiC,EAAE,CAAC,EAApC,EAAwC,EAAE,CAAC,EAAH,GAAM,GAA9C;IACA,QAAQ,CAAC,QAAQ,CAAC,GAAlB,CAA0B,EAAE,CAAC,EAA7B,EAAiC,EAAE,CAAC,EAApC,EAAwC,EAAE,CAAC,IAA3C;IACA,WAAW,CAAC,KAAZ,GAAqB;IACrB,WAAW,CAAC,MAAZ,GAAqB;IACrB,OAAO,CAAC,GAAR,CAAa,6BAAb,EAA4C,WAAW,CAAC,QAAxD,EAAkE,QAAQ,CAAC,QAA3E;IACA,YAAA,GAAgB,IAAI,eAAJ,CAAqB,WAArB;IAChB,IAAC,CAAA,YAAY,CAAC,IAAd,CAAoB,YAApB,EATJ;IAUI,IAAC,CAAA,IAAI,CAAC,UAAN,CAAoB,WAApB,EAAiC,WAAW,CAAC,MAA7C,EAAqD,YAArD;WACA,CAAE,WAAF;EAZW;;EAcb,WAAY,CAAE,IAAF,EAAQ,EAAR,CAAA;AACd,QAAA,EAAA,EAAA,EAAA,EAAA;IAAI,EAAA,GAAK,IAAC,CAAA,WAAD,CAAc,IAAd,EAAoB,EAApB,EAAwB,IAAxB;IACL,EAAA,GAAK,IAAC,CAAA,WAAD,CAAc,IAAd,EAAoB,EAApB,EAAwB,IAAxB;IACL,EAAA,GAAK,IAAC,CAAA,WAAD,CAAc,IAAd,EAAoB,EAApB,EAAwB,IAAxB;WACL,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV;EAJU;;EAMZ,WAAY,CAAE,IAAF,EAAQ,EAAR,EAAY,KAAZ,CAAA;AACd,QAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA;IAAI,MAAA,GAAS,IAAI,gBAAJ,CAAsB,EAAE,CAAC,GAAH,CAAO,KAAP,CAAtB,EAAqC,CAArC,EAAb;IACI,MAAA,GAAS,IAAI,QAAJ,CAAA;IACT,IAAA;AAAO,cAAO,KAAP;AAAA,aACA,IADA;UAEH,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAqB,EAAE,CAAC,EAAxB,EAA4B,EAAE,CAAC,EAA/B,EAAmC,EAAE,CAAC,EAAH,GAAM,GAAzC;UACA,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAqB,EAAE,CAAC,EAAxB,EAA4B,EAAE,CAAC,EAA/B,EAAmC,EAAE,CAAC,IAAtC;iBACA,EAAE,CAAC;AAJA,aAKA,IALA;UAMH,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAqB,EAAE,CAAC,EAAxB,EAA4B,EAAE,CAAC,EAAH,GAAM,GAAlC,EAAuC,EAAE,CAAC,EAA1C;UACA,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAqB,EAAE,CAAC,EAAxB,EAA4B,EAAE,CAAC,IAA/B,EAAuC,EAAE,CAAC,EAA1C;iBACA,EAAE,CAAC;AARA,aASA,IATA;UAUH,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAqB,EAAE,CAAC,EAAH,GAAM,GAA3B,EAAgC,EAAE,CAAC,EAAnC,EAAuC,EAAE,CAAC,EAA1C;UACA,MAAM,CAAC,QAAQ,CAAC,GAAhB,CAAqB,EAAE,CAAC,IAAxB,EAAgC,EAAE,CAAC,EAAnC,EAAuC,EAAE,CAAC,EAA1C;iBACA,EAAE,CAAC;AAZA;;IAaP,MAAM,CAAC,UAAP,GAA+B;IAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAArB,GAA+B,CAAC,IAAD,GAAQ,EAAE,CAAC;IAC1C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAArB,GAAgC,IAAA,GAAO,EAAE,CAAC;IAC1C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAArB,GAA+B,CAAC;IAChC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAArB,GAAgC;IAChC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAArB,GAA+B,CAAC,IAAD,GAAQ;IACvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAArB,GAAgC,IAAA,GAAO;IACvC,MAAM,CAAC,MAAP,GAAgB;IAChB,MAAA,GAAgB,IAAI,sBAAJ,CAA4B,MAA5B;IAChB,IAAC,CAAA,YAAY,CAAC,IAAd,CAAoB,MAApB,EAxBJ;IAyBI,IAAC,CAAA,IAAI,CAAC,UAAN,CAAoB,MAApB,EAA4B,MAAM,CAAC,MAAnC,EAA2C,MAA3C;WACA,CAAE,MAAF;EA3BU;;AAhGd;;AA6HA,OAAA,QAAe;;AAhIf",
  "sourcesContent": [
    "\nimport { AmbientLight, DirectionalLight, DirectionalLightHelper,\n  SpotLight, SpotLightHelper, Object3D } from 'three'\n\nclass Lights\n\n  constructor:( @main ) ->\n    @klass        = @constructor.name\n    @opts         = @main.opts.lights\n    @cc           = @main.cartesian\n    @lightHelpers = [] # Light Helpers are pushed into this array for animate updates\n    @lights       = @selectLight( @opts, @cc ) # An array\n    @main.log( @klass+'()', @ )\n\n  selectLight:( opts, cc ) ->\n    return @ambient( opts ) if not opts? and not opts.light?\n    switch opts.light\n      when 'Ambient'      then @ambient(      opts )\n      when 'SpotLight'    then @spotLight(    opts )\n      when 'Directional'  then @directional(  opts, cc )\n      when 'Muse'         then @muse(         opts )\n      when 'Orthographic' then @orthographic( opts, cc )\n      else\n        console.log( 'Lights.selectLight() unknown light', opts.light )\n        @ambient( opts )\n\n  ambient:( opts ) ->\n    color     = if opts.color? then opts.color?         else 0xFFFFFF\n    intensity = if opts.intensity? then opts.intensity? else 1.0\n    light     = new AmbientLight( color, intensity )\n    light.position.set( 1, 1, 1 ).normalize()\n    @main.addToScene(light)\n    [light]\n\n  spotlight:( opts ) ->\n    color     = if opts.color?     then opts.color?     else 0xFFFFFF\n    intensity = if opts.intensity? then opts.intensity? else 1.0\n    light            = new SpotLight( color, intensity )\n    light.castShadow = true\n    light.angle      = 0.3\n    light.penumbra   = 0.2\n    light.decay      = 2\n    light.distance   = 50\n    @main.addToScene(light)\n    if opts.helper? and opts.helper\n      helper = new SpotLightHelper( light )\n      @main.addToScene( helper )\n    [light]\n\n\n  muse:( opts ) ->\n\n    if opts then false\n\n    backLight  = new DirectionalLight( 'white', 0.15 )\n    backLight.position.set(6,3,9)\n    backLight.name = 'Back light'\n    @main.addToScene( backLight )\n\n    keydLight = new DirectionalLight( 'white', 0.35 );\n    keydLight.position.set(-6, -3, 0)\n    keydLight.name   = 'Key light'\n    @main.addToScene( keydLight )\n\n    fillLight = new DirectionalLight( 'white', 0.55 )\n    fillLight.position.set(9, 9, 6)\n    fillLight.name = 'Fill light'\n    @main.addToScene( fillLight )\n\n    spotLight = new SpotLight( 0xffffff )\n    spotLight.position.set( 3, 30, 3 )\n    spotLight.castShadow = true\n    spotLight.shadow.mapSize.width  = 2048\n    spotLight.shadow.mapSize.height = 2048\n    spotLight.shadow.camera.near    = 1\n    spotLight.shadow.camera.far     = 4000\n    spotLight.shadow.camera.fov     = 45\n    @main.addToScene( spotLight )\n    [ backLight, keydLight, fillLight, spotLight ]\n\n  orthographic:( opts, cc ) ->\n    spotLightXY = new SpotLight( 0xFF7F00, 2 )\n    spotLightXY.castShadow = true\n    targetXY    = new Object3D()\n    spotLightXY.position.set( cc.xc, cc.yc, cc.zd*2.0 )\n    targetXY.position.set(    cc.xc, cc.yc, cc.zmin   )\n    spotLightXY.angle  = 0.36\n    spotLightXY.target = targetXY\n    console.log( \"Lights.spotLightXY.position\", spotLightXY.position, targetXY.position )\n    spotHelperXY  = new SpotLightHelper( spotLightXY )\n    @lightHelpers.push( spotHelperXY )  # We do this for updates in @animate\n    @main.addToScene(   spotLightXY, spotLightXY.target, spotHelperXY  )\n    [ spotLightXY ]\n\n  directional:( opts, cc ) ->\n    xy = @directPlane( opts, cc, 'XY' )\n    xz = @directPlane( opts, cc, 'XZ' )\n    yz = @directPlane( opts, cc, 'YZ' )\n    [ xy, xz, yz ]\n\n  directPlane:( opts, cc, plane ) ->\n    direct = new DirectionalLight( cc.hex(plane), 2 )  # [60,90,90] 0xFF7F00\n    target = new Object3D()\n    dist = switch plane\n      when 'XY'\n        direct.position.set( cc.xc, cc.yc, cc.zd*2.0 )\n        target.position.set( cc.xc, cc.yc, cc.zmin   )\n        cc.zd\n      when 'XZ'\n        direct.position.set( cc.xc, cc.yd*2.0, cc.zc )\n        target.position.set( cc.xc, cc.ymin,   cc.zc )\n        cc.yd\n      when 'YZ'\n        direct.position.set( cc.xd*2.0, cc.yc, cc.zc )\n        target.position.set( cc.xmin,   cc.yc, cc.zc )\n        cc.xd\n    direct.castShadow            = true\n    direct.shadow.camera.left    = -dist * cc.aspect\n    direct.shadow.camera.right   =  dist * cc.aspect\n    direct.shadow.camera.top     = -dist\n    direct.shadow.camera.bottom  =  dist\n    direct.shadow.camera.near    = -dist * 5.0\n    direct.shadow.camera.far     =  dist * 5.0\n    direct.target = target\n    helper        = new DirectionalLightHelper( direct )\n    @lightHelpers.push( helper )  # We do this for updates in @animate\n    @main.addToScene(   direct, direct.target, helper )\n    [ direct ]\n\nexport default Lights\n\n###\n      left     = if opts.left?      then opts.left      else -dist * aspect\n    right    = if opts.right?     then opts.right     else  dist * aspect\n    top      = if opts.top?       then opts.top       else  dist\n    bottom   = if opts.bottom?    then opts.bottom    else -dist\n    near     = if opts.near?      then opts.near      else -dist * 5.0\n    far      = if opts.far?       then opts.far       else  dist * 5.0\n\n    #irectionalXY.shadow.mapSize.width  = 256\n    #irectionalXY.shadow.mapSize.height = 256\n    #irectionalXY.shadow.camera.near    = cc.zmax\n    #irectionalXY.shadow.camera.far     = cc.zmin\n\n    targetXY     = content.createPoint( { x:cc.xc, y:cc.yc, z:cc.zmin }, 0xFF0000, cc.xr*0.1 )\n    targetXZ     = content.createPoint( { x:cc.xc, y:cc.yc, z:cc.zmin }, 0x00FF00, cc.yr*0.1 )\n    targetYZ     = content.createPoint( { x:cc.xc, y:cc.yc, z:cc.zmin }, 0x0000FF, cc.zr*0.1 )\n\n  createSpotlight:( color ) ->\n    newObj = new THREE.SpotLight( color, 2 )\n    newObj.castShadow = true\n    newObj.angle = 0.3\n    newObj.penumbra = 0.2\n    newObj.decay = 2\n    newObj.distance = 50\n    newObj\n\n  const spotLight = new THREE.SpotLight( 0xffffff );\n  spotLight.position.set( 100, 1000, 100 );\n\n  spotLight.castShadow = true;\n\n  spotLight.shadow.mapSize.width = 1024;\n  spotLight.shadow.mapSize.height = 1024;\n\n  spotLight.shadow.camera.near = 500;\n  spotLight.shadow.camera.far = 4000;\n  spotLight.shadow.camera.fov = 30;\n\n  distance - Maximum range of the light. Default is 0 (no limit).\n  angle - Maximum angle of light dispersion from its direction whose upper bound is Math.PI/2.\n  penumbra - Percent of the spotlight cone that is attenuated due to penumbra. Takes values between zero and 1. Default is zero.\n  decay - The amount the light dims along the distance of the light.   \n  \n  orthographic3:( opts, cc ) ->\n    content = @main.content # Content is instanciated before Lights\n    spotLightXY = new SpotLight( 0xFF7F00, 2 )\n    spotLightXZ = new SpotLight( 0x00FF7F, 2 )\n    spotLightYZ = new SpotLight( 0x7F00FF, 2 )\n    spotLightXY.position.set( cc.xc, cc.yc, cc.zd )\n    spotLightXZ.position.set( cc.xc, cc.yd, cc.zc )\n    spotLightYZ.position.set( cc.xd, cc.yc, cc.zc )\n    spotLightXY.castShadow = true\n    spotLightXZ.castShadow = true\n    spotLightYZ.castShadow = true\n\n  targetXY     = content.createPoint( [ cc.xc,   cc.yc,   cc.zmin ], 0xFF0000, cc.xd*0.1 )\n  targetXZ     = content.createPoint( [ cc.xc,   cc.ymin, cc.zc   ], 0x00FF00, cc.yd*0.1 )\n  targetYZ     = content.createPoint( [ cc.xmin, cc.yc,   cc.zc   ], 0x0000FF, cc.zd*0.1 )\n  \n  grids = content.grids\n  spotLightXY.target = grids.xyGrid.group\n  spotLightXZ.target = grids.xzGrid.group\n  spotLightYZ.target = grids.yzGrid.group\n  \n  spotHelperXY = new SpotLightHelper( spotLightXY )\n  spotHelperXZ = new SpotLightHelper( spotLightXZ )\n  spotHelperYZ = new SpotLightHelper( spotLightYZ )\n  @lightHelpers.push( spotHelperXY )  # We do this for updates in @animate\n  @lightHelpers.push( spotHelperXZ )\n  @lightHelpers.push( spotHelperYZ )\n  @main.addToScene(  spotLightXY,         spotLightXZ,        spotLightYZ )\n  @main.addToScene(  spotLightXY.target,  spotLightXZ.target, spotLightYZ.target )\n  @main.addToScene( spotHelperXY,        spotHelperXZ,       spotHelperYZ )\n  @main.addToScene(  spotHelperXY )\n  [ spotLightXY, spotLightXZ, spotLightYZ ]  \n###"
  ]
}