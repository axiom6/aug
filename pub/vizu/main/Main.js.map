{
  "version": 3,
  "file": "Main.js",
  "sourceRoot": "../../../src/vizu/main",
  "sources": [
    "Main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport { Scene, Color }   from 'three'\nimport Cartesian   from '../coords/Cartesian.js'\nimport Cylindrical from '../coords/Cylindrical.js'\nimport Spherical   from '../coords/Spherical.js'\nimport Render      from './Render.js'\nimport Lights      from './Lights.js'\nimport Cameras     from './Cameras.js'\nimport Content     from '../content/Content.js'\nimport Animate     from './Animate.js'\nimport Verify      from './Verify.js'\n\nclass Main\n\n  constructor:( @stream, @nav ) ->\n    @elem       = null\n    @opts       = {}\n    @compKey    = \"\"\n    @pageKey    = \"\"\n    @debug      = false\n    @verifyFlag = false\n\n  setup:() ->\n    @scene        = new Scene()\n    @scene.background = new Color('black')\n    @cartesian    = new Cartesian(   @ )\n    @cylindrical  = new Cylindrical( @ )\n    @spherical    = new Spherical(   @ )\n    @render       = new Render(      @ )\n    @cameras      = new Cameras(     @ )\n    @content      = new Content(     @ )  # Changed order so Lights can create points\n    @lights       = new Lights(      @ )\n    @animate      = new Animate(     @ )\n    @verify       = new Verify(      @ )\n\n    window.addEventListener( 'resize', @resizeScreen, false )\n\n  doApp:( elem, opts, compKey, pageKey ) =>\n    @elem       = elem\n    @opts       = opts\n    @compKey    = compKey\n    @pageKey    = pageKey\n    @opts.main  = if @opts.main? then @opts.main else {}\n    @debug      = @opts.main.debug?  and @opts.main.debug\n    @verifyFlag = @opts.main.verify? and @opts.main.verify\n    @log( \"Main.doApp()\", { opts:opts, debug:@debug, verify:@verifyFlag } )\n    @runApp( elem )\n    return\n\n  runApp:( elem ) ->\n    @screen( elem )\n    @setup()\n    @animate.animate()\n    return\n\n  screen:( elem ) ->\n    @elem         = elem\n    @screenWidth  = @elem['clientWidth']\n    @screenHeight = @elem['clientHeight']\n    @aspectRatio  = @screenWidth  / @screenHeight\n    @aspectLast   = @aspectRatio\n    obj = { screenWidth:@screenWidth, screenHeight:@screenHeight, aspectRatio:@aspectRatio }\n    @log( \"Main.screen()\", obj ) if @debug\n\n  # object3Ds must be args... not an array\n  addToScene:( object3Ds... ) ->\n    for object3D in object3Ds\n      @log( \"Main.addToScene(object3D)\", object3D ) if not @nav.inArray( object3D.type, ['Line','Points','Mesh'] )\n      @verify.verify( object3D ) if @verifyFlag\n      @scene.add(     object3D )\n    return\n\n  resizeScreen:() =>\n    @screenWidth  = @elem['clientWidth']\n    @screenHeight = @elem['clientHeight']\n    @aspectRatio  = @screenWidth  / @screenHeight\n    obj = { screenWidth:@screenWidth, screenHeight:@screenHeight, aspectRatio:@aspectRatio, aspectLast:@aspectLast }\n    @log( \"Main.resizeScreen\",  obj )\n    @stream.publish( 'Resize',  obj )\n    @aspectLast   = @aspectRatio\n    return\n\n  log:( klass, ptr ) ->\n    return if not @debug\n    logPtr = {}\n    hides  = ['main','klass','opts','__proto__']\n    filter = (key) => key isnt @nav.inArray(key,hides)\n    for own key, obj of ptr when filter(key)\n      logPtr[key] = obj\n    console.log( klass, logPtr )\n    return\n\n  dispose:() ->\n    # Third arg useCapture must match addEventLIstenter()\n    window.removeEventListener( 'resize', @resizeScreen, false )\n    @log( \"Main.dispose()\" ) if @debug\n    # @stream.publish( 'Dispose', {} ) # Hold off for now\n    return\n\nexport default Main\n"
  ]
}