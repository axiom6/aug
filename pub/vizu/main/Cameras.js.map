{
  "version": 3,
  "file": "Cameras.js",
  "sourceRoot": "../../../src/vizu/main",
  "sources": [
    "Cameras.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport { PerspectiveCamera, OrthographicCamera, CameraHelper } from 'three'\nimport { OrbitControls     } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js'\n\nclass Cameras\n\n  constructor:( @main ) ->\n    @klass    = @constructor.name\n    cc        = @main.cartesian\n    @optsCam  = @main.opts.cameras\n    @camera   = @selectCamera(   @optsCam, cc )\n    @controls = @selectControls( @optsCam, cc, @camera )\n    @main.stream.subscribe( 'Resize',  @klass, (obj) => @onResize( obj) )\n    @main.stream.subscribe( 'Dispose', @klass, (obj) => @onDispose(obj) )\n    @main.log( @klass+'()', @, @optsCam )\n\n  initDefs:( cc ) ->\n    defs = {}\n    defs.aspect   = @main.aspectRatio\n    defs.dist     = cc.dist\n    defs.scale    = 1.0\n    defs.position = { x:0, y:0, z:0 }\n    defs\n\n  processOpts:( optsCamera, cc, defs ) ->\n    opts          = Object.assign( {}, optsCamera )\n    opts.aspect   = @main.aspectRatio\n    opts.dist     = cc.dist\n    opts.scale    = if opts.scale?     then opts.scale     else defs.scale\n    opts.scaleXYZ = { x:opts.aspect/opts.scale, y:opts.aspect/opts.scale, z:opts.aspect/opts.scale }\n    opts.scenePos = @main.scene.position\n    opts.position = if opts.position?  then opts.position  else defs.position\n    opts.fov      = if opts.fov?       then opts.fov       else defs.fov\n    opts.left     = if opts.left?      then opts.left      else defs.left\n    opts.right    = if opts.right?     then opts.right     else defs.right\n    opts.top      = if opts.top?       then opts.top       else defs.top\n    opts.bottom   = if opts.bottom?    then opts.bottom    else defs.bottom\n    opts.near     = if opts.near?      then opts.near      else defs.near\n    opts.far      = if opts.far?       then opts.far       else defs.far\n    return opts\n\n  selectCamera:( optsCam, cc ) ->\n    return @orthographic( optsCam, cc ) if not optsCam? and not optsCam.camera?\n    switch optsCam.camera\n      when 'OrthoXYZ'     then @orthoXYZ(     optsCam, cc )\n      when 'OrthoISO'     then @orthoISO(     optsCam, cc )\n      when 'Orthographic' then @orthographic( optsCam, cc )\n      when 'Perspective'  then @perspective(  optsCam, cc )\n      when 'Muse'         then @muse(         optsCam, cc )\n      else\n        console.error( 'Cameras.selectCamera() unknown camera', optsCam )\n        @orthographic( optsCam, cc )\n\n  selectControls:( optsCam, cc, camera ) ->\n    console.log( \"Camera.selectControls()\", optsCam, cc )\n    return @orbit( optsCam, cc ) if not optsCam? and optsCam.controls?\n    switch optsCam.controls\n      when 'Orbit'     then @orbit(     camera, cc  )\n      when 'Trackball' then @trackball( camera, cc  )\n      else\n        console.error( 'Cameras.selectControls() unknown controls', optsCam.controls )\n        @orbit( optsCam, cc )\n\n  orthoXYZ:( camOpts, cc ) ->\n    defs        = @initDefs( cc )\n    defs.near   = -defs.dist * 5.0\n    defs.far    =  defs.dist * 5.0\n    defs.left   = -defs.dist * defs.aspect \n    defs.right  =  defs.dist * defs.aspect\n    defs.top    =  defs.dist\n    defs.bottom = -defs.dist\n    opts        = @processOpts( camOpts, cc, defs )\n    camera      = @ortho( opts )\n    @projectionMatrix( camera.projectionMatrix, opts )\n    camera\n\n  projectionMatrix:( matrix, opts ) ->\n    s     = opts.scaleXYZ\n    xAxis = { x:s.x, y:1,   z:1   }\n    yAxis = { x:1,   y:s.y, z:1   }\n    zAxis = { x:1,   y:1,   z:s.z }\n    matrix.makeBasis( xAxis, yAxis, zAxis )\n    return\n\n  orthoISO:( camOpts, cc ) ->\n    defs        = @initDefs( cc )\n    defs.fov    = 75\n    defs.near   = -defs.dist * 5.0\n    defs.far    =  defs.dist * 5.0\n    defs.left   = -defs.dist * defs.aspect   # Orthographic\n    defs.right  =  defs.dist * defs.aspect\n    defs.top    =  defs.dist\n    defs.bottom = -defs.dist\n    opts      = @processOpts( camOpts, cc, defs )\n    @ortho( opts )\n\n  orthographic:( camOpts, cc ) ->  # Uses world coordinates\n    defs        = @initDefs( cc )\n    defs.fov    = 75\n    defs.near   = -defs.dist * 5.0\n    defs.far    =  defs.dist * 5.0\n    defs.left   = -defs.dist * defs.aspect   # Orthographic\n    defs.right  =  defs.dist * defs.aspect\n    defs.top    =  defs.dist\n    defs.bottom = -defs.dist\n    opts        = @processOpts( camOpts, cc, defs )\n    @ortho( opts )\n\n  ortho:( opts ) ->  # Uses world coordinates\n    camera = new OrthographicCamera( opts.left, opts.right, opts.top, opts.bottom, opts.near, opts.far )\n    camera.scale.set(    opts.scaleXYZ.x, opts.scaleXYZ.y, opts.scaleXYZ.z )\n    camera.position.set( opts.position.x, opts.position.y, opts.position.z )\n    camera.lookAt(       opts.scenePos.x, opts.scenePos.y, opts.scenePos.z )\n\n    if opts.helper? and opts.helper\n      helper = new CameraHelper( camera )\n      @main.addToScene( helper )\n    camera\n\n  perspective:( camOpts, cc ) ->\n    defs      = @initDefs( cc )\n    defs.fov  = 75\n    defs.near = defs.dist * 0.01\n    defs.far  = defs.dist * 100\n    opts      = @processOpts( camOpts, cc, defs )\n    camera    = new PerspectiveCamera( opts.fov, @main.aspectRatio, opts.near, opts.far )\n    camera.scale.set(    opts.scaleXYZ.x, opts.scaleXYZ.y, opts.scaleXYZ.z )\n    camera.position.set( opts.position.x, opts.position.y, opts.position.z )\n    camera.lookAt(       opts.scenePos.x, opts.scenePos.y, opts.scenePos.z )\n\n    if opts.helper? and opts.helper\n      helper = new CameraHelper( camera )\n      @main.addToScene( helper )\n    camera\n\n  muse:( camOpts, cc ) ->\n    defs          = @initDefs( cc )\n    defs.fov      = 45\n    defs.near     = 1\n    defs.far      = 10000\n    defs.position = { \"x\":0, \"y\":6, \"z\":1600 }\n    opts          = @processOpts( camOpts, cc, defs )\n    @perspective( opts )\n\n  orbit:( camera, cc ) ->\n    if cc then false\n    controls = new OrbitControls( camera, @main.render.renderer.domElement )\n    scenePos = @main.scene.position\n    controls.target.set( scenePos.x, scenePos.y, scenePos.z )\n    controls.update()\n    controls\n\n  trackball:( camera, cc ) ->\n    if cc then false\n    controls = new TrackballControls( camera, @main.render.renderer.domElement )\n    scenePos = @main.scene.position\n    controls.target.set( scenePos.x, scenePos.y, scenePos.z )\n    controls.update()\n    controls\n\n  onResize:( obj ) =>\n    @main.log( @klass+'.onResize()', obj )\n    @camera.aspect = obj.aspectRatio\n    r              = obj.aspectRatio / obj.aspectLast\n    if @opts.camera is 'Orthographic'\n      cscale    = @camera.scale\n      nscale    = {  \"x\":cscale.x*r, \"y\":cscale.y*r, \"z\":cscale.y*r }\n      @camera.scale.set( nscale.x,       nscale.y,       nscale.z   )\n    @camera.updateProjectionMatrix()\n    return\n\n  onDispose:( obj ) =>\n    @main.log( @klass+'onDispose()', obj )\n    # @isometric.dispose()   if @isometric?\n    # @perspective.dispose() if @@perspective?\n\nexport default Cameras\n"
  ]
}