{
  "version": 3,
  "file": "Cameras.js",
  "sourceRoot": "../../../src/vizu/main",
  "sources": [
    "Cameras.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport { PerspectiveCamera, OrthographicCamera, CameraHelper } from 'three'\nimport { OrbitControls     } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js'\n\nclass Cameras\n\n  constructor:( @main ) ->\n    @klass    = @constructor.name\n    @opts     = @main.opts.cameras\n    cc        = @main.cartesian\n    @camera   = @selectCamera(   @opts, cc )\n    @controls = @selectControls( @opts, cc, @camera )\n    @main.stream.subscribe( 'Resize',  @klass, (obj) => @onResize( obj) )\n    @main.stream.subscribe( 'Dispose', @klass, (obj) => @onDispose(obj) )\n    @main.log( @klass+'()', @, @opts )\n\n  selectCamera:( opts, cc ) ->\n    return @orthographic( opts, cc ) if not opts? and not opts.camera?\n    switch opts.camera\n      when 'Orthographic' then @orthographic( opts, cc )\n      when 'Perspective'  then @perspective(  opts, cc )\n      when 'Muse'         then @muse(         opts, cc )\n      else\n        console.error( 'Cameras.selectCamera() unknown camera', opts.camera )\n        @orthographic( opts, cc )\n\n  selectControls:( opts, cc, camera ) ->\n    return @orbit( opts, cc ) if not opts? and opts.controls?\n    switch opts.controls\n      when 'Orbit'     then @orbit(     camera, cc  )\n      when 'Trackball' then @trackball( camera, cc  )\n      else\n        console.error( 'Cameras.selectControls() unknown controls', opts.controls )\n        @orbit( opts, cc )\n\n  orthographic:( opts, cc ) ->  # Uses world coordinates\n    aspect   = @main.aspectRatio\n    dist     = cc.dist\n    left     = if opts.left?      then opts.left      else -dist * aspect\n    right    = if opts.right?     then opts.right     else  dist * aspect\n    top      = if opts.top?       then opts.top       else  dist\n    bottom   = if opts.bottom?    then opts.bottom    else -dist\n    near     = if opts.near?      then opts.near      else -dist * 5.0\n    far      = if opts.far?       then opts.far       else  dist * 5.0\n    position = if opts.position?  then opts.position  else { \"x\":dist*0.2, \"y\":dist*0.2, \"z\":dist*0.2 }\n    s        = 1.25\n    scale    = { \"x\":s*aspect, \"y\":s*aspect, \"z\":s*aspect }\n    scenePos = @main.scene.position\n\n    camera = new OrthographicCamera( left, right, top, bottom, near, far )\n    camera.scale.set(    scale.x,    scale.y,    scale.z    )\n    camera.position.set( position.x, position.y, position.z )\n    camera.lookAt(       scenePos.x, scenePos.y, scenePos.z )\n\n    if opts.helper? and opts.helper\n      helper = new CameraHelper( camera )\n      @main.addToScene( helper )\n    camera\n\n  perspective:( opts, cc ) ->\n    dist     = cc.dist\n    fov      = if opts.fov?       then opts.fov       else  75\n    near     = if opts.near?      then opts.near      else   0.01 * dist\n    far      = if opts.far?       then opts.far       else 100    * dist\n    position = if opts.position?  then opts.position  else { \"x\":0, \"y\":0.6*dist, \"z\":16*dist }\n    scenePos = @main.scene.position\n    camera   = new PerspectiveCamera( fov, @main.aspectRatio, near, far )\n    camera.position.set( position.x, position.y, position.z )\n    camera.lookAt(       scenePos.x, scenePos.y, scenePos.z )\n    if opts.helper? and opts.helper\n      helper = new CameraHelper( camera )\n      @main.addToScene( helper )\n    camera\n\n  muse:( opts, cc ) ->\n    if cc then false\n    fov      = if opts.fov?       then opts.fov       else    45\n    near     = if opts.near?      then opts.near      else     1\n    far      = if opts.far?       then opts.far       else 10000\n    position = if opts.position?  then opts.position  else { \"x\":0, \"y\":6, \"z\":1600 }\n    scenePos = @main.scene.position\n    camera   = new PerspectiveCamera( fov, @main.aspectRatio, near, far )\n    camera.position.set( position.x, position.y, position.z )\n    camera.lookAt(       scenePos.x, scenePos.y, scenePos.z )\n    if opts.helper? and opts.helper\n      helper = new CameraHelper( camera )\n      @main.addToScene( helper )\n    camera\n\n  orbit:( camera, cc ) ->\n    if cc then false\n    controls = new OrbitControls( camera, @main.render.renderer.domElement )\n    scenePos = @main.scene.position\n    controls.target.set( scenePos.x, scenePos.y, scenePos.z )\n    controls.update()\n    controls\n\n  trackball:( camera, cc ) ->\n    if cc then false\n    controls = new TrackballControls( camera, @main.render.renderer.domElement )\n    scenePos = @main.scene.position\n    controls.target.set( scenePos.x, scenePos.y, scenePos.z )\n    controls.update()\n    controls\n\n  onResize:( obj ) =>\n    @main.log( @klass+'.onResize()', obj )\n    @camera.aspect = obj.aspectRatio\n    r              = obj.aspectRatio / obj.aspectLast\n    if @opts.camera is 'Orthographic'\n      cscale    = @camera.scale\n      nscale    = {  \"x\":cscale.x*r, \"y\":cscale.y*r, \"z\":cscale.y*r }\n      @camera.scale.set( nscale.x,       nscale.y,       nscale.z   )\n    @camera.updateProjectionMatrix()\n    return\n\n  onDispose:( obj ) =>\n    @main.log( @klass+'onDispose()', obj )\n    # @isometric.dispose()   if @isometric?\n    # @perspective.dispose() if @@perspective?\n\nexport default Cameras\n\n"
  ]
}