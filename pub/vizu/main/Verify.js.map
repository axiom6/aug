{
  "version": 3,
  "file": "Verify.js",
  "sourceRoot": "../../../src/vizu/main",
  "sources": [
    "Verify.coffee"
  ],
  "names": [],
  "mappings": "AACA,IAAA;;AAAM,SAAN,MAAA,OAAA;EAEE,WAAY,KAAA,CAAA;IAAE,IAAC,CAAA;IACb,IAAC,CAAA,KAAD,GAAS,IAAC,CAAA,WAAW,CAAC;IACtB,IAAC,CAAA,IAAD,GAAS,IAAC,CAAA,IAAI,CAAC;EAFL;;EAIZ,MAAO,CAAE,QAAF,CAAA;AACT,QAAA,CAAA,EAAA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA;IAAI,KAAA,GAAS,QAAQ,CAAC,WAAW,CAAC;IAC9B,KAAA,GAAS;MAAC,UAAD;MAAY,OAAZ;MAAoB,QAApB;;IACT,KAAA,GAAS,CAAC,UAAD,EAAY,GAAZ,EAAgB,IAAhB,EAAqB,GAArB,EAAyB,IAAzB,EAA8B,GAA9B,EAAkC,IAAlC,EAAuC,GAAvC,EAA2C,IAA3C;IACT,IAAC,CAAA,cAAD,CAAiB,KAAjB,EAAwB,QAAQ,CAAC,QAAjC;IACA,IAAC,CAAA,YAAD,CAAiB,KAAjB,EAAwB,QAAQ,CAAC,MAAjC,EAJJ;;;IAOI,KAAA,uCAAA;;MACE,GAAA,GAAM,QAAQ,CAAC,IAAD;MACd,KAAA,QAAA;;YAAoB,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAb,EAAe,KAAf;UAClB,IAAG,CAAE,CAAI,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAb,CAAJ,IAAwB,KAAA,CAAM,CAAN,CAA1B,CAAA,IAAwC,CAAE,CAAA,KAAK,UAAL,IAAoB,IAAC,CAAA,WAAD,CAAa,CAAb,CAAtB,CAA3C;YACE,OAAO,CAAC,GAAR,CAAa,oBAAb,EAAmC;cAAE,KAAA,EAAM,KAAR;cAAe,IAAA,EAAK,IAApB;cAA0B,IAAA,EAAK,GAA/B;cAAoC,CAAA,EAAE,CAAtC;cAAyC,CAAA,EAAE;YAA3C,CAAnC,EADF;;;MADF;IAFF;EARK;;EAeP,cAAe,CAAE,KAAF,EAAS,CAAT,CAAA;IACb,IAAG,KAAA,CAAM,CAAC,CAAC,CAAR,CAAA,IAAc,KAAA,CAAM,CAAC,CAAC,CAAR,CAAd,IAA4B,KAAA,CAAM,CAAC,CAAC,CAAR,CAA/B;MACE,OAAO,CAAC,GAAR,CAAc,4BAAd,EAA4C;QAAE,KAAA,EAAM,KAAR;QAAe,QAAA,EAAS;MAAxB,CAA5C,EADF;;EADa,CAnBjB;;;EAyBE,YAAa,CAAE,KAAF,EAAS,CAAT,CAAA;IACX,IAAG,CAAC,CAAC,QAAQ,CAAC,QAAX,CAAoB,GAApB,CAAH;MACE,OAAO,CAAC,GAAR,CAAc,0BAAd,EAA0C;QAAE,KAAA,EAAM,KAAR;QAAe,MAAA,EAAO;MAAtB,CAA1C,EADF;;EADW,CAzBf;;;EA+BE,WAAY,CAAE,KAAF,CAAA;AACd,QAAA,CAAA,EAAA,CAAA,EAAA;IAAI,IAAU,CAAI,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,KAAb,CAAd;AAAA,aAAA;;IACA,KAAA,uCAAA;;MACE,IAAe,KAAA,CAAM,CAAN,CAAf;AAAA,eAAO,KAAP;;IADF;WAEA;EAJU;;AAjCd;;AAuCA,OAAA,QAAe",
  "sourcesContent": [
    "\nclass Verify\n\n  constructor:( @main ) ->\n    @klass = @constructor.name\n    @opts  = @main.opts\n\n  verify:( object3D ) ->\n    klass  = object3D.constructor.name\n    props  = [\"rotation\",\"scale\",\"matrix\"]   # \"matrixWorld\",\"modelViewMatrix\",\"normalMatrix\",\"quaternion\"]\n    names  = [\"elements\",\"x\",\"_x\",\"y\",\"_y\",\"z\",\"_z\",\"w\",\"_w\"]\n    @verifyPosition( klass, object3D.position )\n    @verifyMatrix(   klass, object3D.matrix   )\n    # p = object3D.position\n    # console.log( 'Main.verify()', { class:klass, position:p, matrix:object3D.matrix, x:p.x, y:p.y, z:p.z } )\n    for prop in props\n      obj = object3D[prop]\n      for n,v of obj when @mix.inArray(n,names)\n        if ( not @mix.isArray(v) and isNaN(v) ) or ( n is 'elements' and @arrayHasNaN(v) )\n          console.log( 'Main.verify() NaN ', { class:klass, prop:prop, type:obj, n:n, v:v } )\n    return\n\n  verifyPosition:( klass, p ) ->\n    if isNaN(p.x) or isNaN(p.y) or isNaN(p.z)\n      console.log(  'Main.verifyPosition() NaN ', { class:klass, position:p } )\n    # p.set( p.x, p.y, p.z )\n    return\n\n  verifyMatrix:( klass, m ) ->\n    if m.elements.includes(NaN)\n      console.log(  'Main.verifyMatrix() NaN ', { class:klass, matrix:m } )\n    # midentity()\n    return\n\n  arrayHasNaN:( array ) ->\n    return if not @mix.isArray(array)\n    for e in array\n      return true if isNaN(e)\n    false\n\nexport default Verify"
  ]
}