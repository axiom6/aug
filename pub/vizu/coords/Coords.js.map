{
  "version": 3,
  "file": "Coords.js",
  "sourceRoot": "../../../src/vizu/coords",
  "sources": [
    "Coords.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport { BoxGeometry, Mesh, BufferGeometry, Material, AxesHelper, # MeshBasicMaterial,\n         Vector3, Line, LineBasicMaterial, Points, Color, Float32BufferAttribute,\n         PointsMaterial, Group, MeshStandardMaterial, DoubleSide } from 'three'\n\nimport XAxis  from './XAxis.js'\nimport YAxis  from './YAxis.js'\nimport ZAxis  from './ZAxis.js'\nimport Plane  from './Plane.js'\nimport XYGrid from './XYGrid.js'\nimport XZGrid from './XZGrid.js'\nimport YZGrid from './YZGrid.js'\nimport MuseTh from '../muse/MuseTh.js'\n\nclass Coords\n\n  constructor:( @main ) ->\n    @klass      = @constructor.name\n    if @main.opts.content?\n      @opts       = @main.opts.content\n      @plane      = @drawPlane()            if @opts.plane?         and @opts.plane\n      @grids      = @drawGrids()            if @opts.grids?         and @opts.grids\n      @axes       = @drawAxes()             if @opts.axes?          and @opts.axes\n      @axesHelper = @drawHelper()           if @opts['axeshelper']? and @opts['axeshelper']\n      @cube       = @drawCube( @opts.cube ) if @opts.cube?\n      @museTh     = @drawMuse()             if @opts.muse?          and @opts.muse\n      @drawRgbs()                           if @opts['rgbs']?       and @opts['rgbs']\n    else\n      @grids      = @drawGrids()\n      @axes       = @drawAxes()\n    console.log( @klass+'()', @ )\n\n  drawHelper:() ->\n    axesHelper = new AxesHelper( 250 );\n    @main.addToScene( axesHelper )\n    axesHelper\n\n  drawAxes:() ->\n    axes = {}\n    axes.xAxis = new XAxis( @main, @ )\n    axes.yAxis = new YAxis( @main, @ )\n    axes.zAxis = new ZAxis( @main, @ )\n    axes\n\n  drawGrids:() ->\n    grids = {}\n    grids.xyGrid = new XYGrid( @main, @ )\n    grids.xzGrid = new XZGrid( @main, @ )\n    grids.yzGrid = new YZGrid( @main, @ )\n    grids\n\n  drawPlane:() ->\n    new Plane( @main )\n\n  drawCube:( opts ) ->\n    boxGeometry = new BoxGeometry( opts.s, opts.s, opts.s )\n    boxMaterial = new MeshStandardMaterial( { color:0x0000FF, emissive:0x0a0a0a, side:DoubleSide } )  # 0xaffe00\n    boxCube     = new Mesh( boxGeometry, boxMaterial )\n    boxCube.position.set( opts.x, opts.y, opts.y )\n    boxCube.castShadow    = true\n    boxCube.receiveShadow = false\n    @main.addToScene( boxCube )\n    boxCube\n\n  drawRgbs:() ->\n    group     = new Group()\n    positions = []\n    colors    = []\n    color     = new Color()\n    radius    =   8\n    count     =   0\n    max       = 256\n    inc       =  16\n    for     r in [0..max] by inc\n      for   g in [0..max] by inc\n        for b in [0..max] by inc\n          #ositions.push( max-b, max-g, max-r )     # Axis switched\n          positions.push( b,     g,     r )     # Axis switched\n          color.setRGB(   r/255, g/255, b/255 )\n          colors.push( color.r, color.g, color.b )\n          @drawPoints( positions, colors, radius, group )\n          count++\n    @main.addToScene( group )\n    @main.log( 'Content.drawRgbs()', { count:count, positions:positions.length, colors:colors.length } )\n    return\n\n  drawMuse:() ->\n    museTh = new MuseTh( @main )\n    museTh\n\n  drawPoints:( positions, colors, radius, group ) ->\n    geometry = new BufferGeometry()\n    geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) )\n    geometry.setAttribute( 'color',    new Float32BufferAttribute( colors,    3 ) )\n    geometry.computeBoundingSphere()\n    material = new PointsMaterial( { size:radius, vertexColors:true } )\n    points   = new Points( geometry, material )\n    group.add( points )\n    return\n\n  createPoint:( position, color, radius ) ->\n    geometry  = new BufferGeometry()\n    positions = new Float32Array( position )\n    colors    = new Float32Array( color    )\n    geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) )\n    geometry.setAttribute( 'color',    new Float32BufferAttribute( colors,    3 ) )\n    geometry.computeBoundingSphere()\n    material = new PointsMaterial( { size:radius, vertexColors:true } )\n    point    = new Points( geometry, material )\n    @main.addToScene( point )\n    point\n\n  drawLine:( x1, y1, z1, x2, y2, z2, color, group ) ->\n    points = [];\n    points.push( new Vector3( x1, y1, z1 ) )\n    points.push( new Vector3( x2, y2, z2 ) )\n    geometry = new BufferGeometry().setFromPoints( points )\n    material = new LineBasicMaterial(    { color:color } )\n    #aterial = new MeshStandardMaterial( { color:color, emissive:0x0a0a0a, side:DoubleSide } )\n    line     = new Line( geometry, material )\n    line.receiveShadow = true\n    group.add( line )\n    return\n\n  dispose:() ->\n    BufferGeometry.dispose()\n    Material.dispose()\n\nexport default Coords\n"
  ]
}