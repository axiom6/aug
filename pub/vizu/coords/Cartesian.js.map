{
  "version": 3,
  "file": "Cartesian.js",
  "sourceRoot": "../../../src/vizu/coords",
  "sources": [
    "Cartesian.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport { Color } from 'three'\nimport {vis} from '../../../lib/pub/draw/Vis.js'\n\nclass Cartesian\n\n  constructor:( @main ) ->\n    @klass  = @constructor.name\n    @opts   = @main.opts\n    @aspect = @main.aspectRatio\n    @xmin   = if @opts.xmin?   then @opts.xmin?   else   0\n    @xmax   = if @opts.xmax?   then @opts.xmax?   else 100\n    @ymin   = if @opts.ymin?   then @opts.ymin?   else   0\n    @ymax   = if @opts.ymax?   then @opts.ymax?   else 100\n    @zmin   = if @opts.zmin?   then @opts.zmin?   else   0\n    @zmax   = if @opts.zmax?   then @opts.zmax?   else 100\n    @dist   = if @opts.dist?   then @opts.dist?   else 100\n    @xd     = @xmax-@xmin\n    @yd     = @ymax-@ymin\n    @zd     = @zmax-@zmin\n    @xc     = @xd * 0.5\n    @yc     = @yd * 0.5\n    @zc     = @zd * 0.5\n    @xtick1 = if @opts.xtick1? then @opts.xtick1? else @xd * 0.10\n    @xtick2 = if @opts.xtick2? then @opts.xtick2? else @xd * 0.01\n    @ytick1 = if @opts.ytick1? then @opts.ytick1? else @yd * 0.10\n    @ytick2 = if @opts.ytick2? then @opts.ytick2? else @yd * 0.01\n    @ztick1 = if @opts.ztick1? then @opts.ztick1? else @zd * 0.10\n    @ztick2 = if @opts.ztick2? then @opts.ztick2? else @zd * 0.01\n    @main.log( @klass+'()', @ )\n\n  hex:( orient ) ->\n    switch  orient\n      when 'XY' then new Color( 0x880F0F )\n      when 'XZ' then new Color( 0x0F880F )\n      when 'YZ' then new Color( 0x0F0F88 )\n      else           new Color( 0x888888 )\n\n  hex2:( orient ) ->\n    switch  orient\n      when 'XY' then vis.hex( [ 60,30,40] )\n      when 'XZ' then vis.hex( [150,90,90] )\n      when 'YZ' then vis.hex( [270,90,90] )\n      else           vis.hex( [330,90,90] )\n\n\n  rad:( deg ) ->\n    vis.rad(deg)\n\nexport default Cartesian\n\n# str = \"rgb(#{Math.round(rgb[0]*255)}, #{Math.round(rgb[1]*255)}, #{Math.round(rgb[2]*255)})\""
  ]
}