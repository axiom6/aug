{
  "version": 3,
  "file": "MuseTh.js",
  "sourceRoot": "../../../src/vizu/muse",
  "sources": [
    "MuseTh.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Util   from '../../../lib/pub/util/Util.js'\nimport Build  from '../../../lib/pub/util/Build.js'\nimport Cube3D from './Cube3D.js'\nimport Rect3D from './Rect3D.js'\nimport {  AxesHelper, Font, Group, MeshLambertMaterial, DoubleSide, BoxGeometry, Mesh } from 'three'\n\nclass MuseTh\n\n  constructor:( @main ) ->\n    @debug = @main.debug\n    @build = new Build( @main.mix.batch )\n    @axes  = new AxesHelper( 2 )\n    @main.addToScene( @axes )\n    console.log( 'MuseTh() batch', @main.mix.batch  ) if @debug\n    @fontPrac = new Font( @main.mix.batch.Font.data )\n    @aspectRatio = @main.aspectRatio\n    @group = @ikw()\n\n  deg2rad:( degree ) ->\n   degree*(Math.PI/180)\n\n  space:() ->\n    sp = {}\n    sp.modelRatio    =  @aspectRatio / 2\n    sp.cubeSize      =  144\n    sp.cubeWidth     =  sp.cubeSize * 2.0\n    sp.cubeHeight    =  sp.cubeSize * sp.modelRatio * 0.8\n    sp.colsHeight    =  sp.cubeSize * sp.modelRatio * 0.5\n\n    sp.cubeDepth     =  sp.cubeSize\n    sp.cubeHalf      =  sp.cubeSize   / 2\n    sp.horzSpace     =  sp.cubeSize   * 2 / 3\n    sp.vertSpace     =  sp.horzSpace  * sp.modelRatio\n    sp.zzzzSpace     =  sp.horzSpace\n    sp.colsDepth     =  sp.cubeSize * 3 + sp.zzzzSpace * 2\n    sp.x1            =  sp.cubeWidth  + sp.horzSpace\n    sp.x2            =  0\n    sp.x3            = -sp.cubeWidth  - sp.horzSpace\n    sp.yc            =  sp.cubeHeight + sp.vertSpace * 2.2\n    sp.y1            =  sp.cubeHeight + sp.vertSpace\n    sp.y2            =     0\n    sp.y3            = -sp.cubeHeight - sp.vertSpace\n    sp.z1            =  sp.cubeDepth  + sp.zzzzSpace\n    sp.z2            =  0\n    sp.z3            = -sp.cubeDepth  - sp.zzzzSpace\n    sp.zc            =  0\n    sp.studyWidth    =  sp.cubeWidth  / 3\n    sp.studyHeight   =  sp.cubeHeight / 3\n    sp.sw            =  sp.studyWidth\n    sp.sh            =  sp.studyHeight\n    sp.cw            =  sp.studyWidth\n    sp.ch            =  sp.studyHeight * 0.5\n    sp.sx            = { center:0, west:-sp.sw, north:0,         east:sp.sw, south:0          }\n    sp.sy            = { center:0, west:0,      north:sp.sh,     east:0,     south:-sp.sh     }\n    sp.cx            = { center:0, west:-sp.sw, north:0,         east:sp.sw, south:0          }\n    sp.cy            = { center:0, west:0,      north:sp.sh*0.5, east:0,     south:-sp.sh*0.5 }\n    console.log( 'MuseTh.space()', sp ) if @debug\n    sp\n\n  ikw: () ->\n    sp    = @space()\n    group = new Group()\n    for plane   in [ { name:'Info',    z:sp.z1 }, { name:'Know',     z:sp.z2 }, { name:'Wise',      z:sp.z3 } ]\n      for row   in [ { name:'Learn',   y:sp.y1 }, { name:'Do',       y:sp.y2 }, { name:'Share',     y:sp.y3 } ]\n        for col in [ { name:'Embrace', x:sp.x3 }, { name:'Innovate', x:sp.x2 }, { name:'Encourage', x:sp.x1 } ]\n          practice  = @build.getPractice( row.name, col.name, plane.name )\n          console.log( 'MuseTh.ikw()',\n            { practice:practice, name:practice.name, row:row.name, col:col.name, plane:plane.name } )  if false\n          pracCube  = new Cube3D( plane.name, row.name, col.name, practice.name, [col.x,row.y,plane.z],\n            [sp.cubeWidth,sp.cubeHeight,sp.cubeDepth],practice['hsv'], 0.6, @fontPrac )\n          pracGroup = new Group()\n          pracGroup.add( pracCube.mesh  )\n          for key, study of practice when Util.isChild(key)\n            x = col.x + sp.sx[study.dir]\n            y = row.y + sp.sy[study.dir]\n            z = plane.z\n            studyCube = new Rect3D( plane.name, row.name, col.name, study.name, [x,y,z], [sp.sw,sp.sh],study['hsv'], 1.0, @fontPrac, 0x000000 )\n            pracGroup.add( studyCube.mesh  )\n          group.add( pracGroup )\n    group.add( @prin() )\n    @convey(  sp, group )\n    @flow(    sp, group )\n    @conduit( sp, group )\n    group.material = new MeshLambertMaterial( { color:0x888888, transparent:true, opacity:0.5, side:DoubleSide } )\n    group.rotation.set( 0, 0, 0 )\n    group.position.set( 0, 0, 0 )\n    group.scale.set(    1, 1, 1 )\n    @main.addToScene( group )\n    group\n\n  prin: () ->\n    sp    = @space()\n    group = new Group()\n    for col in [ { name:'Embrace', x:sp.x3 }, { name:'Innovate', x:sp.x2 }, { name:'Encourage', x:sp.x1 } ]\n      practice  = @build.getCol( col.name )\n      pracCube  = new Cube3D( 'Prin', 'Dim', col.name, col.name, [col.x,sp.yc,sp.zc],\n        [sp.cubeWidth,sp.colsHeight,sp.colsDepth],practice['hsv'], 0.6, @fontPrac )\n      pracGroup = new Group()\n      pracGroup.add( pracCube.mesh  )\n      for plane in [ { name:'Info', z:sp.z1 }, { name:'Know', z:sp.z2 }, { name:'Wise', z:sp.z3 } ]\n        x = col.x\n        y = sp.yc\n        z = plane.z\n        studyCube = new Rect3D( plane, 'Dim', col.name, col.name, [x,y,z], [sp.cw,sp.ch], [0,0,0], 0.0, @fontPrac, 0xFFFFFF )\n        pracGroup.add( studyCube.mesh  )\n        for key, study of practice when Util.isChild(key)\n          x = col.x + sp.cx[study.dir]\n          y = sp.yc + sp.cy[study.dir]\n          z = plane.z\n          studyCube = new Rect3D( 'Prin', 'Dim', col.name, key, [x,y,z], [sp.cw,sp.ch],study['hsv'], 1.0, @fontPrac, 0x000000 )\n          pracGroup.add( studyCube.mesh  )\n      group.add( pracGroup )\n    group.material = new MeshLambertMaterial( { color:0x888888, transparent:true, opacity:0.5, side:DoubleSide } )\n    group.rotation.set( 0, 0, 0 )\n    group.position.set( 0, 0, 0 )\n    group.scale.set(    1, 1, 1 )\n    @main.addToScene( group )\n    group\n\n  convey:( sp, group ) ->\n    hsv = [0,50,50]\n    w =   sp.horzSpace\n    h =   sp.studyHeight\n    x = ( sp.cubeWidth + w ) / 2\n    for plane   in [ { name:'Info',    z:sp.z1 },   { name:'Know',     z:sp.z2 }, { name:'Wise',     z:sp.z3 } ]\n      for row   in [ { name:'Learn',   y:sp.y1 },   { name:'Do',       y:sp.y2 }, { name:'Share',    y:sp.y3 } ]\n        for col in [ { name:'Embrace', x:sp.x3+x }, { name:'Innovate', x:sp.x2+x } ]\n          practice  = @build.getPractice( row.name, col.name, plane.name )\n          name = @build.connectName( practice, 'east', false )\n          rect = new Rect3D( plane.name, row.name, col.name, name, [col.x,row.y,plane.z], [w,h],hsv, 0.7, @fontPrac, 0xFFFFFF  )\n          group.add( rect.mesh )\n    return\n\n  flow:( sp, group ) ->\n    hsv = [0,50,50]\n    w =   sp.studyWidth\n    h =   sp.vertSpace\n    y = ( sp.cubeHeight + h ) / 2\n    for plane   in [ { name:'Info',    z:sp.z1 },  { name:'Know',     z:sp.z2   }, { name:'Wise',      z:sp.z3 } ]\n      for row   in [ { name:'Learn',   y:sp.y1-y}, { name:'Do',       y:sp.y2-y } ]\n        for col in [ { name:'Embrace', x:sp.x3},   { name:'Innovate', x:sp.x2   }, { name:'Encourage', x:sp.x1 } ]\n          practice  = @build.getPractice( row.name, col.name, plane.name )\n          name = @build.connectName( practice, 'south', false )\n          rect = new Rect3D( plane.name, row.name, col.name, name, [col.x,row.y,plane.z], [w,h],hsv, 0.7, @fontPrac, 0xFFFFFF  )\n          group.add( rect.mesh )\n    return\n\n  conduit:( sp, group ) ->\n    hsv = [0,50,50]\n    w =   sp.studyWidth\n    h =   sp.zzzzSpace\n    z = ( sp.cubeDepth + h ) / 2\n    for plane   in [ { name:'Info', z:sp.z1-z }, { name:'Know', z:sp.z2-z } ]\n      for row   in [ { name:'Learn',       y:sp.y1 },   { name:'Do',        y:sp.y2   }, { name:'Share',    y:sp.y3 } ]\n        for col in [ { name:'Embrace',     x:sp.x3 },   { name:'Innovate',  x:sp.x2   }, { name:'Encourage',x:sp.x1 } ]\n          practice  = @build.getPractice( row.name, col.name, plane.name )\n          name = @build.connectName( practice, 'next', true )\n          rect = new Rect3D( plane.name, row.name, col.name, name, [0,0,0], [w,h],hsv, 0.7, @fontPrac, 0xFFFFFF )\n          rect.mesh.rotation.x = -Math.PI / 2\n          rect.mesh.position.x = col.x\n          rect.mesh.position.y = row.y\n          rect.mesh.position.z = plane.z\n          group.add( rect.mesh )\n    return\n\n\n  traverse:( prop, name, act ) =>\n    act[name] = not act[name] if @stream?\n    console.log( 'MuseTh.traverse()', { prop:prop, name:name, visible:act[name] } )  if @debug\n    reveal = (child) =>\n      console.log( 'MuseTh.traverse.beg', { name:child.name, tprop:prop, cprop:child[prop], value:value, visible:child.visible } ) if @debug\n        if child[prop]? and child[prop] is name\n           child.visible = act[name]\n        console.log( 'MuseTh.traverse.end', { name:child.name, geom:child.geom, prop:prop, value:value, visible:child.visible } ) if @debug\n      @group.traverse( reveal ) if @group?\n    return\n\n  createAct:( group ) ->\n    {\n      Info    : true, Know      : true, Wise      : true,\n      Learn   : true, Do        : true, Share     : true,\n      Embrace : true, Innovate  : true, Encourage : true,\n      Opacity:group.material.opacity, Color:group.material.color,\n      RotationX:group.rotation.x, RotationY:group.rotation.y, RotationZ:group.rotation.z,\n      PositionX:0, PositionY:0,  PositionZ:0,\n      ScaleX:1,    ScaleY:1,     ScaleZ:1\n    }\n\n  createTraversals:( act ) ->\n    {\n      info:      () => @traverse( 'plane', 'Info',      act )\n      know:      () => @traverse( 'plane', 'Know',      act )\n      wise:      () => @traverse( 'plane', 'Wise',      act )\n      learn:     () => @traverse( 'row',   'Learn',     act )\n      doDo:      () => @traverse( 'row',   'Do',        act )\n      share:     () => @traverse( 'row',   'Share',     act )\n      embrace:   () => @traverse( 'col',   'Embrace',   act )\n      innovate:  () => @traverse( 'col',   'Innovate',  act )\n      encourage: () => @traverse( 'col',   'Encourage', act )\n    }\n\n  ui:( group, guiElem ) ->\n\n    act       = @createAct( group )\n    traverals = @createTraversals( act )\n\n    dat = Util.getGlobal('dat')\n    gui = dat.GUI( { autoPlace: false } )\n    guiElem.appendChild( gui.domElement )\n\n    f1 = gui.addFolder('Planes')\n    f1.add( act, 'Info' ).onChange( traverals.info )\n    f1.add( act, 'Know' ).onChange( traverals.know )\n    f1.add( act, 'Wise' ).onChange( traverals.wise )\n\n    f2 = gui.addFolder('Rows')\n    f2.add( act, 'Learn' ).onChange( traverals.learn )\n    f2.add( act, 'Do'    ).onChange( traverals.doDo  )\n    f2.add( act, 'Share' ).onChange( traverals.share )\n\n    f3 = gui.addFolder('Prin')\n    f3.add( act, 'Embrace'   ).onChange( traverals.embrace   )\n    f3.add( act, 'Innovate'  ).onChange( traverals.innovate  )\n    f3.add( act, 'Encourage' ).onChange( traverals.encourage )\n\n    f4 = gui.addFolder('Rotation')\n    f4.add( act, 'RotationX', -180, 180 ).onChange( () => group.rotation.x = @deg2rad(act.RotationX) )\n    f4.add( act, 'RotationY', -180, 180 ).onChange( () => group.rotation.y = @deg2rad(act.RotationY) )\n    f4.add( act, 'RotationZ', -180, 180 ).onChange( () => group.rotation.z = @deg2rad(act.RotationZ) )\n\n    f5 = gui.addFolder('Position');\n    f5.add( act, 'PositionX', -500, 500 ).onChange( () -> group.position.x = act.PositionX )\n    f5.add( act, 'PositionY', -500, 500 ).onChange( () -> group.position.y = act.PositionY )\n    f5.add( act, 'PositionZ', -500, 500 ).onChange( () -> group.position.z = act.PositionZ )\n\n    f6 = gui.addFolder('Scale')\n    f6.add( act, 'ScaleX', 0.1, 5 ).onChange( () -> group.scale.x = act.ScaleX )\n    f6.add( act, 'ScaleY', 0.1, 5 ).onChange( () -> group.scale.y = act.ScaleY )\n    f6.add( act, 'ScaleZ', 0.1, 5 ).onChange( () -> group.scale.z = act.ScaleZ )\n\n    [gui,act]\n\n  geom:() ->\n\n    color    = 0x888888 # Guess\n    geometry = new BoxGeometry( 2, 2, 2 )\n    material = new MeshLambertMaterial({ color:color, transparent:true } )\n    mesh     = new Mesh(geometry, material)\n    mesh.position.set(0, 0, 0)\n    mesh.rotation.set(0, 0, 0)\n    mesh.rotation.y = @deg2rad(-90)\n    mesh.scale.set(1, 1, 1)\n    mesh.doubleSided = true\n    mesh.castShadow = true\n    @main.addToScene(mesh)\n\n    geometry2 = new BoxGeometry( 1, 1, 1 )\n    material2 = new MeshLambertMaterial({ color:color, transparent:true } )\n    mesh2     = new Mesh(geometry2, material2)\n    @main.addToScene(mesh2)\n    return\n\nexport default MuseTh\n\n"
  ]
}