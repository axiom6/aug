{
  "version": 3,
  "file": "Hexagon.js",
  "sourceRoot": "../../../src/vizu/content",
  "sources": [
    "Hexagon.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport * as THREE from \"three\"\nimport Surface    from \"./Surface.js\"\nimport { vis }    from \"../../../lib/pub/draw/Vis.js\"\n\nclass Hexagon extends Surface\n\n  constructor:( main ) ->\n     super( main )\n\n  toGeom:( obj ) ->\n    obj.colors    = []\n    obj.vertices  = []\n    obj.normals   = []\n    obj.uvs       = []\n    obj.indices   = []\n    obj.originIdx = 0\n    obj.vertex    = new THREE.Vector3()\n    obj.normal    = new THREE.Vector3()\n    obj.uv        = new THREE.Vector2()\n    obj.sc        = 1.0 / 255.0\n    obj.hueNum    = 12\n    obj.satNum    = 10\n    obj.hueInc    = 360 / obj.hueNum\n    obj.huePri    = obj.hueInc * 2\n    obj.satInc    = 100 / obj.satNum\n    obj.hexRad    = 10\n\n    @initSpheres( obj )\n    @addVertex(   obj, 0, 0, 0, 0, 0, 0 )  # Origin\n    hexOrigin = @initHex( obj.originIdx )\n    @hexVerticea( obj, hexOrigin )\n    console.log( \"Hexagon vertices\", obj.vertices )\n    @createIndices( obj )\n    @createBufferGeometry( obj )\n    console.log( \"Surface.toGeom Two()\",\n      { lenVertices:obj.vertices.length, lenIndices:obj.indices.length } )\n    return\n\n  # Vertex indices set the @hexIndices\n  initHex:( vcen ) ->\n    { vcen:vcen, v330:-1, v030:-1, v090:-1, v150:-1, v210:-1, v270:-1 }\n\n  hexVerticea:( obj, hex ) ->\n    for own key, idx of hex when key isnt \"vcen\" and idx is -1\n      deg = @degKey( key )\n      x = obj.vertices[hex.vcen  ] + obj.hexRad * vis.cos(deg)\n      y = obj.vertices[hex.vcen+1]\n      z = obj.vertices[hex.vcen+2] + obj.hexRad * vis.sin(deg)\n      hex[key] = obj.vertices.length\n      hue = vis.round( vis.atan2(  z, x ) )\n      sat = vis.round( vis.hypoth( x, x ) )\n      val = obj.valFun( hue, sat )\n      @addVertex( obj, hue, sat, val, x, y, z )\n      console.log( \"Hexagon.hexVerticea\", { key:key, idx:hex[key], hue:hue, sat:sat, val:val, x:x, y:y, z:z } )\n    @hexIndices(  obj, hex )\n    return\n      \n  hexIndices:(  obj, hex ) ->\n    @addIndice( obj, hex.vcen, hex.v330, hex.v030 )\n    @addIndice( obj, hex.vcen, hex.v030, hex.v090 )\n    @addIndice( obj, hex.vcen, hex.v090, hex.v150 )\n    @addIndice( obj, hex.vcen, hex.v150, hex.v210 )\n    @addIndice( obj, hex.vcen, hex.v210, hex.v270 )\n    @addIndice( obj, hex.vcen, hex.v270, hex.v330 )\n    return\n\n  degKey:( key ) ->\n    switch key\n      when \"v330\" then 330\n      when \"v030\" then  30\n      when \"v090\" then  90\n      when \"v150\" then 150\n      when \"v210\" then 210\n      when \"v270\" then 270\n      else               0\n\n# Assign vertex indexes to create all the triangular face indices\n  createIndices:( obj ) ->\n    n = 0\n    @add6Indices( obj, n, 0, 0 )\n    console.log( \"Hexagon Indices\", obj.indices )\n    return\n\n  addIndice:(    obj, i1, i2, i3 ) ->\n    obj.indices.push( i1, i2, i3 )\n    return\n\n  add6Indices:( obj, n, i, j ) ->\n    vis.noop( n, i, j )\n    pcen = obj.originIdx\n    p330 = 0\n    p030 = 1\n    p090 = 2\n    p150 = 3\n    p210 = 4\n    p270 = 5\n    @addIndice( obj, pcen, p330, p030 )\n    @addIndice( obj, pcen, p030, p090 )\n    @addIndice( obj, pcen, p090, p150 )\n    @addIndice( obj, pcen, p150, p210 )\n    @addIndice( obj, pcen, p210, p270 )\n    @addIndice( obj, pcen, p270, p330 )\n    return\n\n  add60Indices:( obj, n, i, j ) ->\n    pcen = n*i      + j\n    p330 = n*(i+11) + j + 1\n    p030 = n*(i+ 1) + j + 1\n    p090 = n*(i+ 2) + j + 1\n    p150 = n*(i+ 3) + j + 1\n    p210 = n*(i+ 4) + j + 1\n    p270 = n*(i+ 5) + j + 1\n    @addIndice( obj, pcen, p330, p030 )\n    @addIndice( obj, pcen, p030, p090 )\n    @addIndice( obj, pcen, p090, p150 )\n    @addIndice( obj, pcen, p150, p210 )\n    @addIndice( obj, pcen, p210, p270 )\n    @addIndice( obj, pcen, p270, p330 )\n    return\n\nexport default Hexagon"
  ]
}