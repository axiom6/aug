{
  "version": 3,
  "file": "Hexagon.js",
  "sourceRoot": "../../../src/vizu/content",
  "sources": [
    "Hexagon.coffee"
  ],
  "names": [],
  "mappings": "AACA,IAAA,OAAA;EAAA;;AAAA,OAAO,CAAA,SAAP,MAAA;;AACA,OAAO,OAAP,MAAA;;AACA,OAAA;EAAS,GAAT;CAAA,MAAA;;AAEM,UAAN,MAAA,QAAA,QAAsB,QAAtB;EAEE,WAAY,CAAE,IAAF,CAAA;SACT,CAAO,IAAP;EADS;;EAGZ,MAAO,CAAE,GAAF,CAAA;AACT,QAAA;IAAI,GAAG,CAAC,MAAJ,GAAgB;IAChB,GAAG,CAAC,QAAJ,GAAgB;IAChB,GAAG,CAAC,OAAJ,GAAgB;IAChB,GAAG,CAAC,GAAJ,GAAgB;IAChB,GAAG,CAAC,OAAJ,GAAgB;IAChB,GAAG,CAAC,MAAJ,GAAgB,IAAI,KAAK,CAAC,OAAV,CAAA;IAChB,GAAG,CAAC,MAAJ,GAAgB,IAAI,KAAK,CAAC,OAAV,CAAA;IAChB,GAAG,CAAC,EAAJ,GAAgB,IAAI,KAAK,CAAC,OAAV,CAAA;IAChB,GAAG,CAAC,EAAJ,GAAgB,GAAA,GAAM;IACtB,GAAG,CAAC,MAAJ,GAAgB;IAChB,GAAG,CAAC,MAAJ,GAAgB;IAChB,GAAG,CAAC,MAAJ,GAAgB,GAAA,GAAM,GAAG,CAAC;IAC1B,GAAG,CAAC,MAAJ,GAAgB,GAAG,CAAC,MAAJ,GAAa;IAC7B,GAAG,CAAC,MAAJ,GAAgB,GAAA,GAAM,GAAG,CAAC;IAC1B,GAAG,CAAC,SAAJ,GAAgB;IAChB,GAAG,CAAC,SAAJ,GAAgB,GAAG,CAAC,SAAJ,GAAgB,GAAG,CAAC,GAAJ,CAAQ,EAAR;IAChC,GAAG,CAAC,QAAJ,GAAgB,IAhBpB;IAiBI,GAAG,CAAC,SAAJ,GAAgB;IAChB,GAAG,CAAC,EAAJ,GAAgB;IAChB,GAAG,CAAC,EAAJ,GAAgB;IAChB,GAAG,CAAC,EAAJ,GAAgB;IAChB,IAAC,CAAA,WAAD,CAAc,GAAd;IACA,IAAC,CAAA,SAAD,CAAc,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,GAAG,CAAC,MAAJ,CAAW,CAAX,EAAa,CAAb,CAAzB,EAA0C,GAAG,CAAC,EAA9C,EAAkD,GAAG,CAAC,EAAtD,EAA0D,GAAG,CAAC,EAA9D,EAtBJ;IAuBI,SAAA,GAAY,IAAC,CAAA,OAAD,CAAU,GAAG,CAAC,SAAd;IACZ,IAAC,CAAA,WAAD,CAAc,GAAd,EAAmB,SAAnB;IACA,IAAC,CAAA,QAAD,CAAW,GAAX,EAAgB,EAAhB,EAAoB,GAAG,CAAC,SAAJ,GAAc,GAAlC;IACA,IAAC,CAAA,QAAD,CAAW,GAAX,EAAgB,EAAhB,EAAoB,GAAG,CAAC,SAAJ,GAAc,GAAlC;IACA,IAAC,CAAA,QAAD,CAAW,GAAX,EAAgB,EAAhB,EAAoB,GAAG,CAAC,SAAJ,GAAc,GAAlC;IACA,OAAO,CAAC,GAAR,CAAa,kBAAb,EAAiC,GAAG,CAAC,QAArC;IACA,IAAC,CAAA,oBAAD,CAAuB,GAAvB;IACA,OAAO,CAAC,GAAR,CAAa,sBAAb,EACE;MAAE,WAAA,EAAY,GAAG,CAAC,QAAQ,CAAC,MAA3B;MAAmC,UAAA,EAAW,GAAG,CAAC,OAAO,CAAC;IAA1D,CADF;EA/BK;;EAmCP,QAAS,CAAE,GAAF,EAAO,MAAP,EAAe,MAAf,CAAA;AACX,QAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA;IAAI,IAAA,GAAU,MAAA,KAAU,EAAb,GAAqB,CAAC,CAAD,EAAG,EAAH,EAAM,GAAN,EAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,CAArB,GAAiD,CAAC,GAAD,EAAK,EAAL,EAAQ,EAAR,EAAW,GAAX,EAAe,GAAf,EAAmB,GAAnB;IACxD,KAAA,sCAAA;;MACE,CAAA,GAAI,GAAG,CAAC,EAAJ,GAAS,MAAA,GAAS,GAAG,CAAC,GAAJ,CAAQ,GAAR;MACtB,CAAA,GAAI,GAAG,CAAC;MACR,CAAA,GAAI,GAAG,CAAC,EAAJ,GAAS,MAAA,GAAS,GAAG,CAAC,GAAJ,CAAQ,GAAR;MACtB,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAW,CAAX,EAAc,CAAd;MACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAW,GAAG,CAAC,MAAJ,CAAY,CAAZ,EAAe,CAAf,CAAX,CAAA,GAAkC,GAAG,CAAC;MAC5C,IAAA,GAAO,IAAC,CAAA,WAAD,CAAa,GAAb;MACP,IAAC,CAAA,SAAD,CAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAAG,CAAC,MAAJ,CAAW,GAAX,EAAe,GAAf,CAA7B,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD;MACA,IAAC,CAAA,WAAD,CAAc,GAAd,EAAmB,IAAC,CAAA,OAAD,CAAS,IAAT,CAAnB;IARF;EAFO;;EAaT,WAAY,CAAE,GAAF,CAAA;WACV,GAAG,CAAC,QAAQ,CAAC,MAAb,GAAsB;EADZ,CAnDd;;;EAuDE,OAAQ,CAAE,IAAF,CAAA;WACN;MAAE,IAAA,EAAK,IAAP;MAAa,IAAA,EAAK,CAAC,CAAnB;MAAsB,IAAA,EAAK,CAAC,CAA5B;MAA+B,IAAA,EAAK,CAAC,CAArC;MAAwC,IAAA,EAAK,CAAC,CAA9C;MAAiD,IAAA,EAAK,CAAC,CAAvD;MAA0D,IAAA,EAAK,CAAC;IAAhE;EADM;;EAGR,WAAY,CAAE,GAAF,EAAO,GAAP,CAAA;AACd,QAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA,CAAA,EAAA;IAAI,KAAA,UAAA;;;YAA6B,GAAA,KAAS,MAAT,IAAoB,GAAA,KAAO,CAAC;;;MACvD,GAAA,GAAM,IAAC,CAAA,MAAD,CAAS,GAAT;MACN,CAAA,GAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAJ,GAAS,CAAV,CAAZ,GAA6B,GAAG,CAAC,SAAJ,GAAgB,GAAG,CAAC,GAAJ,CAAQ,GAAR;MACjD,CAAA,GAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAJ,GAAS,CAAT,GAAW,CAAZ;MAChB,CAAA,GAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAJ,GAAS,CAAT,GAAW,CAAZ,CAAZ,GAA6B,GAAG,CAAC,SAAJ,GAAgB,GAAG,CAAC,GAAJ,CAAQ,GAAR;MACjD,GAAG,CAAC,GAAD,CAAH,GAAW,IAAC,CAAA,WAAD,CAAa,GAAb;MACX,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAW,CAAX,EAAc,CAAd;MACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAW,GAAG,CAAC,MAAJ,CAAY,CAAZ,EAAe,CAAf,CAAX,CAAA,GAAkC,GAAG,CAAC;MAC5C,GAAA,GAAM,GAAG,CAAC,MAAJ,CAAY,GAAZ,EAAiB,GAAjB;MACN,IAAC,CAAA,SAAD,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC;MACA,OAAO,CAAC,GAAR,CAAa,qBAAb,EAAoC;QAAE,GAAA,EAAI,GAAN;QAAW,GAAA,EAAI,GAAG,CAAC,GAAD,CAAlB;QAAyB,GAAA,EAAI,GAA7B;QAAkC,GAAA,EAAI,GAAtC;QAA2C,GAAA,EAAI,GAA/C;QAAoD,CAAA,EAAE,CAAtD;QAAyD,CAAA,EAAE,CAA3D;QAA8D,CAAA,EAAE;MAAhE,CAApC;IAVF;IAWA,IAAC,CAAA,UAAD,CAAc,GAAd,EAAmB,GAAnB;EAZU;;EAeZ,UAAW,CAAG,GAAH,EAAQ,GAAR,CAAA;IACT,IAAC,CAAA,SAAD,CAAY,GAAZ,EAAiB,GAAG,CAAC,IAArB,EAA2B,GAAG,CAAC,IAA/B,EAAqC,GAAG,CAAC,IAAzC;IACA,IAAC,CAAA,SAAD,CAAY,GAAZ,EAAiB,GAAG,CAAC,IAArB,EAA2B,GAAG,CAAC,IAA/B,EAAqC,GAAG,CAAC,IAAzC;IACA,IAAC,CAAA,SAAD,CAAY,GAAZ,EAAiB,GAAG,CAAC,IAArB,EAA2B,GAAG,CAAC,IAA/B,EAAqC,GAAG,CAAC,IAAzC;IACA,IAAC,CAAA,SAAD,CAAY,GAAZ,EAAiB,GAAG,CAAC,IAArB,EAA2B,GAAG,CAAC,IAA/B,EAAqC,GAAG,CAAC,IAAzC;IACA,IAAC,CAAA,SAAD,CAAY,GAAZ,EAAiB,GAAG,CAAC,IAArB,EAA2B,GAAG,CAAC,IAA/B,EAAqC,GAAG,CAAC,IAAzC;IACA,IAAC,CAAA,SAAD,CAAY,GAAZ,EAAiB,GAAG,CAAC,IAArB,EAA2B,GAAG,CAAC,IAA/B,EAAqC,GAAG,CAAC,IAAzC;EANS;;EASX,MAAO,CAAE,GAAF,CAAA;AACL,YAAO,GAAP;AAAA,WACO,MADP;eACmB;AADnB,WAEO,MAFP;eAEoB;AAFpB,WAGO,MAHP;eAGoB;AAHpB,WAIO,MAJP;eAImB;AAJnB,WAKO,MALP;eAKmB;AALnB,WAMO,MANP;eAMmB;AANnB;eAOqB;AAPrB;EADK;;EAUP,SAAU,CAAK,GAAL,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,CAAA;IACR,GAAG,CAAC,OAAO,CAAC,IAAZ,CAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B;EADQ;;AA9FZ;;AAkGA,OAAA,QAAe",
  "sourcesContent": [
    "\nimport * as THREE from \"three\"\nimport Surface    from \"./Surface.js\"\nimport { vis }    from \"../../../lib/pub/draw/Vis.js\"\n\nclass Hexagon extends Surface\n\n  constructor:( main ) ->\n     super( main )\n\n  toGeom:( obj ) ->\n    obj.colors    = []\n    obj.vertices  = []\n    obj.normals   = []\n    obj.uvs       = []\n    obj.indices   = []\n    obj.vertex    = new THREE.Vector3()\n    obj.normal    = new THREE.Vector3()\n    obj.uv        = new THREE.Vector2()\n    obj.sc        = 1.0 / 255.0\n    obj.hueNum    = 12\n    obj.satNum    = 10\n    obj.hueInc    = 360 / obj.hueNum\n    obj.huePri    = obj.hueInc * 2\n    obj.satInc    = 100 / obj.satNum\n    obj.priRadius = 10\n    obj.secRadius = obj.priRadius * vis.cos(30)\n    obj.satScale  = 4.0 # Scaling factor for convert coords to sat\n    obj.originIdx = 0\n    obj.x0        = 0\n    obj.y0        = 0\n    obj.z0        = 0\n    @initSpheres( obj )\n    @addVertex(   obj, 0, 0, obj.valFun(0,0), obj.x0, obj.z0, obj.z0 )  # Origin\n    hexOrigin = @initHex( obj.originIdx )\n    @hexVertices( obj, hexOrigin )\n    @sixHexes( obj, 60, obj.secRadius*2.0 )\n    @sixHexes( obj, 30, obj.priRadius*3.0 )\n    @sixHexes( obj, 60, obj.secRadius*4.0 )\n    console.log( \"Hexagon vertices\", obj.vertices )\n    @createBufferGeometry( obj )\n    console.log( \"Surface.toGeom Two()\",\n      { lenVertices:obj.vertices.length, lenIndices:obj.indices.length } )\n    return\n\n  sixHexes:( obj, orient, radius ) ->\n    angs = if orient is 60 then [0,60,120,180,240,300] else [330,30,90,150,210,270]\n    for ang in angs\n      x = obj.x0 + radius * vis.cos(ang)\n      y = obj.y0\n      z = obj.z0 + radius * vis.sin(ang)\n      hue = vis.hueZX( z, x )\n      sat = vis.round( vis.hypoth( x, z ) ) * obj.satScale\n      vcen = @vertexIndex(obj)\n      @addVertex(   obj, hue, sat, obj.valFun(hue,sat), x, y, z )\n      @hexVertices( obj, @initHex(vcen) )\n    return\n\n  vertexIndex:( obj ) ->\n    obj.vertices.length / 3\n\n  # Vertex indices set the @hexIndices\n  initHex:( vcen ) ->\n    { vcen:vcen, v330:-1, v030:-1, v090:-1, v150:-1, v210:-1, v270:-1 }\n\n  hexVertices:( obj, hex ) ->\n    for own key, idx of hex when key isnt \"vcen\" and idx is -1\n      deg = @degKey( key )\n      x = obj.vertices[hex.vcen*3  ] + obj.priRadius * vis.cos(deg)\n      y = obj.vertices[hex.vcen*3+1]\n      z = obj.vertices[hex.vcen*3+2] + obj.priRadius * vis.sin(deg)\n      hex[key] = @vertexIndex(obj)\n      hue = vis.hueZX( z, x )\n      sat = vis.round( vis.hypoth( x, z ) ) * obj.satScale\n      val = obj.valFun( hue, sat )\n      @addVertex(  obj, hue, sat, val, x, y, z )\n      console.log( \"Hexagon.hexVerticea\", { key:key, idx:hex[key], hue:hue, sat:sat, val:val, x:x, y:y, z:z } )\n    @hexIndices(  obj, hex )\n    return\n      \n  hexIndices:(  obj, hex ) ->\n    @addIndice( obj, hex.vcen, hex.v330, hex.v030 )\n    @addIndice( obj, hex.vcen, hex.v030, hex.v090 )\n    @addIndice( obj, hex.vcen, hex.v090, hex.v150 )\n    @addIndice( obj, hex.vcen, hex.v150, hex.v210 )\n    @addIndice( obj, hex.vcen, hex.v210, hex.v270 )\n    @addIndice( obj, hex.vcen, hex.v270, hex.v330 )\n    return\n\n  degKey:( key ) ->\n    switch key\n      when \"v330\" then 330\n      when \"v030\" then  30\n      when \"v090\" then  90\n      when \"v150\" then 150\n      when \"v210\" then 210\n      when \"v270\" then 270\n      else               0\n\n  addIndice:(    obj, i1, i2, i3 ) ->\n    obj.indices.push( i1, i2, i3 )\n    return\n\nexport default Hexagon"
  ]
}