{
  "version": 3,
  "file": "Hexagon.js",
  "sourceRoot": "../../../src/vizu/content",
  "sources": [
    "Hexagon.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport * as THREE from \"three\"\nimport Surface    from \"./Surface.js\"\nimport { vis }    from \"../../../lib/pub/draw/Vis.js\"\n\nclass Hexagon extends Surface\n\n  constructor:( main ) ->\n     super( main )\n\n  toGeom:( obj ) ->\n    obj.colors     = []\n    obj.vertices   = []\n    obj.normals    = []\n    obj.uvs        = []\n    obj.indices    = []\n    obj.hexIndices = new Array(7)\n    obj.hexOrient  = 60\n    obj.vertex     = new THREE.Vector3()\n    obj.normal     = new THREE.Vector3()\n    obj.uv         = new THREE.Vector2()\n    obj.sc         = 1.0 / 255.0\n    obj.hueNum     = 12\n    obj.satNum     = 10\n    obj.hueInc     = 360 / obj.hueNum\n    obj.huePri     = obj.hueInc * 2\n    obj.satInc     = 100 / obj.satNum\n    obj.priRadius  = 10\n    obj.secRadius  = obj.priRadius * vis.cos(30)\n    obj.idxOrigin  = 0\n    obj.x0         = 0\n    obj.y0         = 0\n    obj.z0         = 0\n    @initSpheres( obj )\n    obj.idxOrigin = @addVertex( obj, 0, 0, obj.valFun(0,0), obj.x0, obj.z0, obj.z0 )  # Origin\n    if obj.hexOrient is  30\n      @hexVertices( obj, 30, obj.idxOrigin )\n      @sixHexes(    obj, 60, obj.secRadius*2.0 )\n      @sixHexes(    obj, 30, obj.priRadius*3.0 )\n      @sixHexes(    obj, 60, obj.secRadius*4.0 )\n    else if obj.hexOrient is  60\n      @hexVertices( obj, 60, obj.idxOrigin )\n      @sixHexes(    obj, 30, obj.secRadius*2.0 )\n      @sixHexes(    obj, 60, obj.priRadius*3.0 )\n      @sixHexes(    obj, 30, obj.secRadius*4.0 )\n    @createBufferGeometry( obj )\n    console.log( \"Hexagon.toGeom()\",\n      { lenVertices:obj.vertices.length, lenIndices:obj.indices.length, vertices:obj.vertices, indices:obj.indices } )\n    return\n\n  hexAngles:( orient ) ->\n    if orient is 60 then [0,60,120,180,240,300] else [330,30,90,150,210,270]\n\n  sixHexes:( obj, orient, radius ) ->\n    i = 1\n    for ang in @hexAngles( orient )\n      x = obj.x0 + radius * vis.cos(ang)\n      y = obj.y0\n      z = obj.z0 + radius * vis.sin(ang)\n      hue = vis.hueZX(  z, x )\n      hyp = vis.hypoth( z, x )\n      sat = @adjSat( obj, hue, hyp )\n      idx = @addVertex( obj, hue, sat, obj.valFun(hue,sat), x, y, z )\n      @hexVertices( obj, obj.hexOrient, idx )\n      i++\n    return\n\n  hexVertices:(    obj, orient, idxCen ) ->\n    @calcVertices( obj, orient, idxCen, obj.priRadius )\n    @hexIndices(   obj )\n    return\n\n  calcVertices:( obj, orient, idxCen, radius ) ->\n    i  = 1\n    vs = obj.vertices\n    obj.hexIndices[0] = idxCen\n    for ang in @hexAngles( orient )\n      x = vs[3*idxCen  ] + radius * vis.cos(ang)\n      y = vs[3*idxCen+1]\n      z = vs[3*idxCen+2] + radius * vis.sin(ang)\n      hue = vis.hueZX(  z, x )\n      hyp = vis.hypoth( z, x )\n      sat = @adjSat( obj, hue, hyp )\n      val = obj.valFun( hue, sat )\n      obj.hexIndices[i] = @addVertex( obj, hue, sat, val, x, y, z )\n      console.log( \"Hexagon.calcVertices\",\n        { idx:obj.hexIndices[i], ang:ang, hyp:hyp, hue:hue, sat:sat, val:val, x:x, y:y, z:z } )\n      i++\n\n  adjSat:( obj, hue, hyp ) ->\n    vis.round( hyp * 2.5 )\n      \n  hexIndices:(  obj ) ->\n    a = obj.hexIndices\n    @addIndice( obj, a[0], a[1], a[2] )\n    @addIndice( obj, a[0], a[2], a[3] )\n    @addIndice( obj, a[0], a[3], a[4] )\n    @addIndice( obj, a[0], a[4], a[5] )\n    @addIndice( obj, a[0], a[5], a[6] )\n    @addIndice( obj, a[0], a[6], a[1] )\n    return\n\n  addIndice:(    obj, i1, i2, i3 ) ->\n    obj.indices.push( i1, i2, i3 )\n    return\n\nexport default Hexagon"
  ]
}