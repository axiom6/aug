{
  "version": 3,
  "file": "Crawl.js",
  "sourceRoot": "../../../src/muse/appl",
  "sources": [
    "Crawl.coffee"
  ],
  "names": [],
  "mappings": "AACA,IAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA;;AAAA,KAAA,GAAU,OAAA,CAAS,YAAT;;AACV,OAAA,GAAU,OAAA,CAAQ,SAAR;;AACV,MAAA,GAAU,OAAA,CAAQ,QAAR,EAFV;;AAGA,OAAA,GAAU,OAAA,CAAQ,QAAR;;AACV,IAAA,GAAU,yBAJV;;AAMA,KAAA,GAAQ,CACN,iBADM,EAEN,kBAFM,EAGN,0BAHM,EAIN,0BAJM,EAKN,yBALM,EAMN,+BANM,EAON,gCAPM,EAQN,gCARM,EASN,+BATM,EAUN,+BAVM,EAWN,+BAXM,EAYN,+BAZM,EAaN,gCAbM,EAcN,gCAdM,EAeN,+BAfM,EAgBN,kCAhBM,EAiBN,+BAjBM,EAkBN,+BAlBM,EAmBN,gCAnBM,EAoBN,gCApBM,EAqBN,+BArBM,EAsBN,MAtBM;;AAwBR,OAAA,GAAU,MAAA,QAAA,CAAC,KAAD,CAAA;AACV,MAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;EAAE,KAAA,uCAAA;;IACE,GAAA,GAAQ,IAAA,GAAO;IACf,IAAA,GAAQ,CAAA,MAAM,KAAA,CAAO,GAAP,CAAN;IACR,IAAA,GAAQ,CAAA,MAAM,IAAI,CAAC,IAAL,CAAA,CAAN;IACR,CAAA,GAAQ,OAAO,CAAC,IAAR,CAAc,IAAd;IACR,OAAO,CAAC,GAAR,CAAa,OAAb,EAAsB;MAAE,GAAA,EAAI,GAAN;MAAW,IAAA,EAAK,CAAA,CAAE,OAAF,CAAU,CAAC,IAAX,CAAA;IAAhB,CAAtB;EALF;AADQ,EA9BV;;;AAyCA,KAAA,GAAQ,QAAA,CAAC,EAAD,CAAA;SACN,IAAI,OAAJ,CAAa,CAAC,OAAD,CAAA,GAAA;WAAa,UAAA,CAAY,OAAZ,EAAqB,EAArB;EAAb,CAAb;AADM;;AAGR,OAAA,GAAU,QAAA,CAAE,MAAF,EAAU,KAAV,EAAiB,CAAjB,CAAA;SACR,MAAM,CAAC,KAAP,CAAc,IAAA,GAAK,KAAK,CAAC,CAAD,CAAxB,EAA6B,MAAA,QAAA,CAAA,CAAA;IAC3B,MAAM,KAAA,CAAM,IAAN;IACN,OAAO,CAAC,GAAR,CAAa,MAAb,EAAqB,KAAK,CAAC,CAAD,CAA1B;IACA,OAAO,CAAC,GAAR,CAAa,MAAM,CAAC,QAAQ,CAAC,IAA7B;WACA,OAAO,CAAC,GAAR,CAAa,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAb;EAJ2B,CAA7B;AADQ;;AAOV,QAAA,GAAW,QAAA,CAAC,KAAD,CAAA;AACX,MAAA,OAAA,EAAA,MAAA;;EACE,MAAA,GAAU,IAAI,MAAJ,CAAA;EACV,OAAA,GAAU,IAAI,OAAJ,CAAA;EACV,OAAO,CAAC,eAAR,CAAwB,KAAK,CAAC,MAA9B,EAHF;;EAKE,OAAA,CAAS,MAAT,EAAiB,KAAjB,EAAwB,CAAxB;AANS;;AASX,QAAA,CAAU,KAAV",
  "sourcesContent": [
    "\nfetch   = require( 'node-fetch' )\ncheerio = require('cheerio')\nZombie  = require('zombie') # class\nEmitter = require('events');\nhost    = 'http://localhost:3000/' # 'https://muse-ad352.web.app/'  #\n\npaths = [\n  \"Prin?page=Icons\",\n  \"Prin?page=Topics\",\n  \"Prin/Embrace?page=Topics\",\n  \"Prin/Embrace?page=Graphs\",\n  \"Prin/Embrace?page=Texts\",\n  \"Info?page=Icons&innovate=Core\",\n  \"Info?page=Topics&innovate=Core\",\n  \"Info?page=Graphs&innovate=Core\",\n  \"Info?page=Texts&innovate=Core\",\n  \"Info?page=Texts&innovate=Soft\",\n  \"Info?page=Texts&innovate=Data\",\n  \"Know?page=Texts&innovate=Core\",\n  \"Know?page=Graphs&innovate=Core\",\n  \"Know?page=Topics&innovate=Core\",\n  \"Know?page=Icons&innovate=Core\",\n  \"Know?page=Icons&innovate=Science\",\n  \"Know?page=Icons&innovate=Math\",\n  \"Wise?page=Icons&innovate=Core\",\n  \"Wise?page=Topics&innovate=Core\",\n  \"Wise?page=Graphs&innovate=Core\",\n  \"Wise?page=Texts&innovate=Core\",\n  \"Defs\" ]\n\ndoCrawl = (paths) ->\n  for path in paths\n    url   = host + path\n    resp  = await fetch( url )\n    text  = await resp.text()\n    $     = cheerio.load( text )\n    console.log( 'Crawl', { url:url, muse:$('#muse').html() } )\n  return\n\n# doCrawl( paths )\n\nsleep = (ms) ->\n  new Promise( (resolve) => setTimeout( resolve, ms ) )\n\ndoVisit = ( zombie, paths, i ) ->\n  zombie.visit( host+paths[i], () ->\n    await sleep(1000)\n    console.log( 'Path', paths[i] )\n    console.log( zombie.location.href )\n    console.log( zombie.html('#muse') ) )\n\ndoZombie = (paths) ->\n  #ombie.localhost( hostz, 3000 )\n  zombie  = new Zombie()\n  emitter = new Emitter()\n  emitter.setMaxListeners(paths.length)\n  # for i in [0...paths.length]\n  doVisit( zombie, paths, 0 )\n  return\n\ndoZombie( paths )\n\n"
  ]
}