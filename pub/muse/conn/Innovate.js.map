{
  "version": 3,
  "file": "Innovate.js",
  "sourceRoot": "../../../src/muse/conn",
  "sources": [
    "Innovate.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport * as d3 from 'd3'\nimport {vis}   from '../../../lib/pub/draw/Vis.js'\n\nclass Innovate\n\n  constructor:( @spec, @shapes, @build ) ->\n    @studies = @shapes.arrange( @spec )\n    @cos30   = @shapes.cos30\n    @xh =  0\n    @yh =  0\n    @r  =  0\n    @thick  = 1\n    @stroke = 'black'\n\n  drawSvg:( g, size, defs ) ->\n    vis.noop( defs )\n    @lay       = @shapes.layout( size, @spec.column, @shapes.size(@studies), @shapes.size(@studies) )\n    @rings( g, size )\n    switch @spec.row\n      when 'Dim'   then @principle(  g, size )\n      when 'Learn' then @concept(    g, size )\n      when 'Do'    then @technology( g, size )\n      when 'Share' then @facilitate( g, size )\n      else              @technology( g, size ) # Default for group spec\n    for key, study of @studies\n      @hexStudy( g, size, study )\n    return\n\n  # getComputedTextLength()\n  rings:( g, size ) ->\n    t  = size.ringSize\n    wr = if size.level is 'Comp' then  t      else 75*size.scaleFont\n    hr = if size.level is 'Comp' then  t      else 18*size.scaleFont\n    xi = if size.level is 'Comp' then  t*1.70 else t*2.5\n    xt = xi + size.ringIcon * 0.8\n    y  = if size.level is 'Comp' then  t*2.1  else 18*size.scaleFont\n    uc = vis.unicode( @spec.icon )\n    # console.log( 'Innovate.rings()', { t:t, wr:wr, hr:hr, xt:xt, yt:yt } )\n    colorRing = vis.css( [70,55,70] )\n    colorBack = 'rgba(97, 56, 77, 1.0 )'\n    h2 = Math.max(size.h-t*2,t)\n    h5 = Math.max(size.h-t*5,t)\n    @shapes.round( g, t,      t,     size.w-t*2,   h2, t, t, colorRing, 'none' )\n    @shapes.round( g, t*2.5,  t*2.5, size.w-t*5.0, h5, t, t, colorBack, 'none' )\n    @shapes.rect(  g, t,      t,     wr,           hr,                 colorRing, 'none' )\n    @shapes.icon(  g, xi, y, @spec.name, @spec.name+'Icon', 'black', size.bannSize, uc )\n    @shapes.text(  g, xt, y, @spec.name, @spec.name+'Text', 'black', size.bannSize , \"start\" )\n\n  principle:( g, size ) ->\n    @eastInovate(  g, size )\n    @westInovate(  g, size )\n    return\n\n  concept:( g, size ) ->\n    @eastInovate(  g, size )\n    @westInovate(  g, size )\n    @southInovate( g, size, (study) -> study.dir isnt 'north' )\n    return\n\n  # \"ArchitectEngineerConstruct\":{\"dir\":\"pradd\",\"icon\":\"fa-university\",\"hsv\":[ 30,60,90]}\n  technology:( g, size ) ->\n    @eastInovate(  g, size )\n    @westInovate(  g, size )\n    @northInovate( g, size, (study) -> study.dir isnt 'south' )\n    @southInovate( g, size, (study) -> study.dir isnt 'north' )\n    return\n\n  facilitate:( g, size ) ->\n    @eastInovate(  g, size )\n    @westInovate(  g, size )\n    @northInovate( g, size )\n    return\n\n  westInovate:( g, size ) ->\n    w    = size.ringSize\n    h    = size.ringSize * 0.67 # if size.level is 'Comp' then size.ringSize * 0.5 else size.ringSize\n    x0   = size.w  - w\n    y0   = size.yc - h * 2 # 4 studies\n    for key, study of @studies\n      fill = @shapes.toFill(study)\n      @shapes.rect( g, x0, y0, w, h, fill, 'none' )\n      y0 += h\n    return\n\n  eastInovate:( g, size ) ->\n    w  = size.ringSize\n    h  = size.ringSize * 0.67 # if size.level is 'Comp' then size.ringSize * 0.5 else size.ringSize\n    x0 = 0\n    y0 = size.yc - h * 2 # 4 studies\n    for key, study of @studies\n      fill = @shapes.toFill(study)\n      @shapes.rect( g, x0, y0, w, h, fill, 'none' )\n      y0 += h\n    return\n\n  northInovate:( g, size ) ->\n    w    = if size.level is 'Comp' then size.ringSize * 0.75 else size.ringSize * 1.25\n    h    = size.ringSize\n    dx   = size.r * 1.5\n    x0   = size.xc - dx - w / 2\n    y0   = 0\n    ordered = @build.toOrder( @studies, ['west','north','east'] )\n    for key, study of ordered\n      fill = @shapes.toFill(study)\n      @shapes.rect( g, x0, y0, w, h, fill, 'none' )\n      x0 += dx\n    return\n\n  southInovate:( g, size ) ->\n    w    = if size.level is 'Comp' then size.ringSize * 0.75 else size.ringSize * 1.25\n    h    = size.ringSize\n    dx   = size.r * 1.5\n    x0   = size.xc - dx - w / 2\n    y0   = size.h  - h\n    ordered = @build.toOrder( @studies, ['west','north','east'] )\n    for key, study of ordered\n      fill = @shapes.toFill(study)\n      @shapes.rect( g, x0, y0, w, h, fill, 'none' )\n      x0 += dx\n    return\n\n  hexStudy:( g, size, study ) =>\n    @r = size.r\n    dx = @r * 1.5\n    dy = @r * 2.0 * @cos30\n    x0 = size.xc\n    y0 = size.yc # - 26\n    j = 0\n    i = 0\n    [j,i] = @hexPosTier( study.dir )\n    yh    = if j % 2 is 0 then 0 else  @r*@cos30\n    x      =  j*dx + x0\n    y      = -i*dy + y0 + yh\n    yt     = if size.level is 'Comp' then y+10 else y+4.5*size.scaleFont\n    yi     = if size.level is 'Comp' then y-2  else y-2.0*size.scaleFont\n    fill  = @shapes.toFill(study)\n    uc    = vis.unicode( study.icon )\n    # console.log( 'Innovate.hexStudy()', study.icon, uc )\n    @hexPath( fill,       g, x, y,  @shapes.htmlId( study.name, 'HexPath' ) )\n    @hexText( study.name, g, x, yt, @shapes.htmlId( study.name, 'HexText' ), size.dispSize )\n    @hexIcon( uc,         g, x, yi, @shapes.htmlId( study.name, 'HexIcon' ), size.dispSize )\n    return\n\n  hexPosTier:( dir ) ->\n    switch dir\n      when 'west', 'westd'  then [-1,   0.5]\n      when 'north','northd' then [ 0,   0.5]\n      when 'east', 'eastd'  then [ 1,   0.5]\n      when 'south','southd' then [ 0,  -0.5]\n      when 'nw',   'nwd'    then [-1,   1.5]\n      when 'ne',   'ned'    then [ 1,   1.5]\n      when 'sw',   'swd'    then [-1,  -0.5]\n      when 'se',   'sed'    then [ 1,  -0.5]\n      else\n        console.error( 'Innovate.hexPos() unknown dir', dir, 'returning [0, 0.5] for Service' )\n        [0, 0.5]\n\n  line:() =>\n    d3.line()\n      .x( (ang) => @r * vis.cosSvg(ang) + @xh )\n      .y( (ang) => @r * vis.sinSvg(ang) + @yh )\n\n  hexPath:( fill, g, x0, y0, pathId ) ->\n    xp = (ang) => @r * vis.cosSvg(ang) + x0\n    yp = (ang) => @r * vis.sinSvg(ang) + y0\n    path = d3.path()\n    path.moveTo( xp(0),   yp(0) )\n    path.lineTo( xp(ang), yp(ang) ) for ang in [60,120,180,240,300,360]\n    path.closePath()\n    # console.log( 'hexPathV4 path', path )\n    g.append(\"svg:path\").attr( \"d\", path ).attr(\"id\", pathId )\n    .attr(\"stroke-width\", @thick ).attr(\"stroke\", @stroke ).attr(\"fill\", fill )\n    return\n\n  hexText:( text, g, x0, y0, textId, size ) ->\n    path = g.append(\"svg:text\").text(text).attr(\"id\",textId).attr(\"x\",x0).attr(\"y\",y0)\n            .attr(\"text-anchor\",\"middle\").attr(\"font-size\",size)\n            .attr(\"font-family\",@shapes.fontText)\n           #.attr(\"font-weight\",\"bold\")\n    @shapes.click( path, text )\n    return\n\n  hexIcon:( icon, g, x0, y0, iconId, size ) ->\n    g.append(\"svg:text\").text(icon).attr(\"x\",x0).attr(\"y\",y0).attr(\"id\",iconId)\n     .attr(\"text-anchor\",\"middle\").attr(\"font-size\",size)\n     .attr(\"font-family\",\"FontAwesome\").attr(\"font-weight\",\"normal\")\n    return\n\nexport default Innovate"
  ]
}