{
  "version": 3,
  "file": "Shapes.js",
  "sourceRoot": "../../../src/muse/conn",
  "sources": [
    "Shapes.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Util    from '../../../lib/pub/base/util/Util.js'\nimport Vis     from '../../../lib/pub/base/draw/Vis.js'\nimport Convey  from './Convey.js'\nimport * as d3 from 'd3' # '../../../pub/lib/d3/d3.5.9.0.esm.js';\n\nclass Shapes\n\n  constructor: ( @stream ) ->\n    @cos30  = 0.86602540378\n    #@cos15 = Vis.cos(15)\n    @fontText = \"Roboto\"\n\n  rectGrad:( g, defs, xc, yc, w, h, fill, stroke, text ) ->\n    @rectCenter( g, xc, yc, w*1.5, h*1.5, fill, stroke, 0.1 )\n    @rectCenter( g, xc, yc, w*1.4, h*1.4, fill, stroke, 0.2 )\n    @rectCenter( g, xc, yc, w*1.3, h*1.3, fill, stroke, 0.3 )\n    @rectCenter( g, xc, yc, w*1.2, h*1.2, fill, stroke, 0.4 )\n    @rectCenter( g, xc, yc, w*1.1, h*1.1, fill, stroke, 0.5 )\n    @rectCenter( g, xc, yc,  w,        h,       fill, stroke, 0.6, text )\n    return\n\n  rectCenter:( g, xc, yc, w, h, fill, stroke, opacity, text='' ) ->\n    @rect( g, xc-w*0.5, yc-h*0.5, w, h, fill, stroke, opacity, text )\n    return\n\n  toFill:( studyPrac, darken=false ) ->\n    hsv = if studyPrac.hsv?  and studyPrac.hsv.length is 3 then studyPrac.hsv else [50,50,50]\n    hsv = if darken then [hsv[0],hsv[1],hsv[2]*0.75] else hsv # [hsv[0],60,30]\n    # console.log( 'Shapes.toFill()', studyPrac.hsv, hsv ) if darken\n    if studyPrac.hsv?  and studyPrac.hsv.length is 3\n      Vis.str( hsv )\n    else\n      console.error( 'Shapes.toFill() unknown fill code', { name:studyPrac.name, fill:studyPrac.fill, spec:studyPrac } )\n      '#888888'\n\n  arrange:( prac ) ->\n    studies = {}\n    for dir in ['north','west','east','south']\n      studies[@key(prac,dir)] = @obj(prac,dir)\n    studies\n\n  key:( prac, dir ) ->\n    for key, study of prac when Util.isChild(key) and study.dir is dir\n      return key\n    '???'\n\n  obj:( prac, dir ) ->\n    for key, study of prac when Util.isChild(key) and study.dir is dir\n      return study\n    {}\n\n  htmlId:( pracName, contentName ) ->\n    Util.getHtmlId( pracName, 'Info', contentName ) # @ui.plane.id\n\n  size:( obj ) ->\n    if obj? then Object.keys(obj).length else 0\n\n  isWest:(col) ->\n    col is 'Embrace'\n\n  layout:( size, col, ns, ni ) ->\n    lay        = {}                                    # Layout ob\n    lay.dir    = if( @isWest(col) ) then 1 else -1     # convey direction\n    lay.xc     = size.xc                               # x center\n    lay.yc     = size.yc                               # y center\n    lay.w      = size.w                                # pane width\n    lay.h      = size.h                                # pane height\n    lay.hk     = lay.h / 8                             # height keyhole rect\n    lay.xk     = if( @isWest(col) ) then lay.w else 0  # x keyhole rect\n    lay.yk     = lay.yc - lay.hk                       # y keyhole rect\n    lay.rs     = lay.yc * 0.85                         # Outer  study section radius\n    lay.ro     = lay.rs - lay.hk                       # Inner  study section radius\n    lay.ri     = lay.ro - lay.hk / 4                   # Icon   intersction   radius\n    lay.yt     = lay.yc + lay.ro + lay.rs * 0.65       # y for practice text\n    lay.a1     = if( @isWest(col)) then  60 else  120  # Begin  study section angle\n    lay.a2     = if( @isWest(col)) then 300 else -120  # Ending study section angle\n    lay.ns     = ns                                    # Number of studies\n    lay.da     = (lay.a1-lay.a2) / lay.ns              # Angle of each section\n    lay.ds     = lay.da / 12                           # Link angle dif\n    lay.li     = lay.ds / 2                            # Link begin inset\n    lay.wr     = 8                                     # Width  study rect  24\n    lay.hr     = lay.ri / lay.ns                       # Height study rect\n    lay.xr     = lay.xc + lay.dir * (lay.rs/2+lay.wr)  # x orgin study rect\n    lay.yr     = lay.yc - lay.ri/2                     # r orgin study rect\n    lay.dl     = lay.hr / 12                           # link dif on study rect\n    lay.xl     = lay.xr + lay.wr                       # x link   on study rect\n    lay.yl     = lay.yr + lay.dl / 2                   # y link   on study rect\n    lay.ni     = ni                                    # Number of innovative studies\n    lay.xi     = 0                                     # x innovative study rects\n    lay.yi     = lay.yc - lay.ri / 2                   # y innovative study rects\n    lay.wi     = lay.wr                                # w innovative study rects\n    lay.hi     = lay.ri / lay.ni                       # h innovative study rects\n    lay.thick  = 1                                     # line thickness\n    lay.stroke = 'none'                                # line stroke\n    # console.log( 'Shapes.layout()', col, size, lay )\n    lay\n\n  click:( path, text) ->\n    if text is false then {}\n    path.style( 'z-index','4') #.style(\"pointer-events\",\"all\").style(\"visibility\", \"visible\" )\n    path.on(\"click\", () =>\n      #console.log( 'Shape.click',  text )\n      select = {} # UI.toTopic(  text, 'Shapes', UI.SelectStudy )\n      @stream.publish( 'Select', select ) )\n    return\n\n  wedge:( g, r1, r2, a1, a2, x0, y0, fill, text, wedgeId, fontSize, level ) ->\n    arc  = d3.arc().innerRadius(r1).outerRadius(r2).startAngle(@radD3(a1)).endAngle(@radD3(a2))\n    #console.log( 'Shape.wedge()', { x0:x0, y0:y0 } )\n    g.append(\"svg:path\").attr(\"d\",arc).attr(\"fill\",fill).attr(\"stroke\",\"none\")\n      .attr(\"transform\", Vis.translate(x0,y0) )\n    @wedgeText( g, r1, r2, a1, a2, x0, y0, fill, text, wedgeId, fontSize, level  )\n    return\n\n  wedgeText:( g, r1, r2, a1, a2, x0, y0, fill, text, wedgeId, fontSize, level='None' ) ->\n    Util.noop( wedgeId )\n    th = 14\n    at = (a1+a2)/2\n    rt = (r1+r2)/2\n    sc = 0.50\n    if (210<=at and at<=330) or (-150<=at and at<=-30)\n      sc = if level is 'Prac' then 0.30 else 0.25 # level is a hack\n      rt = (r1+r2)/2 + th * sc\n      as = 270-at\n      # console.log( 'Shapes.wedgeText() 1', text, level, sc , rt )\n    else\n      sc = if level is 'Prac' then 1.25 else 0.50 # level is a hack\n      rt = (r1+r2)/2 - th * sc\n      as = 90-at\n      # console.log( 'Shapes.wedgeText() 2', text, level, sc, rt )\n    x  = x0 + rt * @cos(at)\n    y  = y0 + rt * @sin(at)\n    path = g.append(\"svg:text\").text(text).attr(\"x\",x).attr(\"y\",y).attr(\"transform\", Vis.rotate(as,x,y) )\n            .attr(\"text-anchor\",\"middle\").attr(\"font-size\",fontSize)\n            .attr(\"font-family\",@fontText).attr(\"font-weight\",\"bold\")\n            .attr('fill','#000000' ) # @textFill(fill))\n    @click( path, text )\n    return\n\n  # \"font-family: Arial, Font Awesome\\ 5 Free; font-weight: 900;\n  icon:( g, x0, y0, name, iconId, color, size, uc ) ->\n    path = g.append(\"svg:text\").text(uc).attr(\"x\",x0).attr(\"y\",y0).attr(\"id\",iconId)\n            .attr(\"text-anchor\",\"middle\").attr(\"font-size\",size).attr(\"fill\",color)\n            .attr(\"font-family\",\"Arial, Font Awesome\\\\ 5 Free\").attr(\"font-weight\",\"900\")\n    @click( path, name )\n    return\n\n  text:( g, x0, y0, name, textId, color, size, anchor=\"middle\" ) ->\n    path = g.append(\"svg:text\").text(name).attr(\"x\",x0).attr(\"y\",y0).attr(\"id\",textId).attr(\"fill\",color)\n             .attr(\"text-anchor\",anchor).attr(\"font-size\", size )\n             .attr(\"font-family\",@fontText).attr(\"font-weight\",\"bold\")\n    @click( path, name )\n    return\n\n  link:( g, a, ra, rb, xc, yc, xd, yd, xe, ye, stroke, thick ) ->\n    xa = xc + ra * @cos(a)\n    ya = yc + ra * @sin(a)\n    xb = xc + rb * @cos(a)\n    yb = yc + rb * @sin(a)\n    data  = \"\"\"M#{xa},#{ya} C#{xb},#{yb} #{xd},#{yd} #{xe},#{ye}\"\"\"\n    @curve( g, data, stroke, thick )\n    return\n\n  curve:( g, data, stroke, thick ) ->\n    g.append(\"svg:path\").attr(\"d\",data).attr(\"stroke-linejoin\",\"round\")\n     .attr(\"fill\",\"none\").attr(\"stroke\",stroke).attr(\"stroke-width\",thick)\n    return\n\n  keyHole:( g, xc, yc, xs, ys, ro, ri, fill, stroke='none', thick=0 ) ->\n    h      = yc - ys\n    a      = Math.asin( h/ro )\n    rx     = Math.cos( a ) * ro\n    rh     = ri\n    osweep = 0 # Negative\n    isweep = 1 # Positive\n    if xs <  xc\n      rx     = -rx\n      rh     = -ri\n      osweep = 1 # Positive\n      isweep = 0 # Negative\n    data  = \"\"\"M#{xs},   #{ys}\"\"\"\n    data += \"\"\"L#{xc+rx},#{ys} A#{ro},#{ro} 0, 1,#{osweep} #{xc+rx},#{yc+h}\"\"\"\n    data += \"\"\"L#{xs},   #{yc+h} L#{xs},#{ys}\"\"\"\n    data += \"\"\"M#{xc+rh},#{yc} A#{ri},#{ri} 0, 1,#{isweep} #{xc+rh},#{yc-0.001}\"\"\"  # Donut hole\n    #console.log( 'Shapes.keyhole()', { xc:xc, yc:yc, xs:xs, ys:ys, ro:ro, ri:ri, h:h, a:a, rx:rx } )\n    @poly( g, data, fill, stroke, thick )\n    return\n\n  poly:( g, data, fill ) ->\n    g.append(\"svg:path\").attr(\"d\",data).attr(\"stroke-linejoin\",\"round\").attr(\"fill\",fill)\n    return\n\n  # svg:rect x=\"0\" y=\"0\" width=\"0\" height=\"0\" rx=\"0\" ry=\"0\"\n  rect:( g, x0, y0, w, h, fill, stroke, opacity=1.0, text='', size='2em' ) ->\n    g.append(\"svg:rect\").attr(\"x\",x0).attr(\"y\",y0).attr(\"width\",w).attr(\"height\",h)\n     .attr(\"fill\",fill).attr(\"stroke\",stroke).style( \"opacity\", opacity )\n    g.style( 'background', '#000000') if opacity < 1.0\n    if text isnt ''\n      g.append(\"svg:text\").text(text).attr(\"x\",x0+w/2).attr(\"y\",y0+h/2+14).attr('fill','wheat')\n       .attr(\"text-anchor\",\"middle\").attr(\"font-size\", size )\n       .attr(\"font-family\",@fontText).attr(\"font-weight\",\"bold\")\n    return\n\n  round:( g, x0, y0, w, h, rx, ry, fill, stroke ) ->\n    g.append(\"svg:rect\").attr(\"x\",x0).attr(\"y\",y0).attr(\"width\",w).attr(\"height\",h)\n     .attr(\"rx\",rx).attr(\"ry\",ry)\n     .attr(\"fill\",fill).attr(\"stroke\",stroke)\n    return\n\n  # svg:ellipse cx=\"0\" cy=\"0\" rx=\"0\" ry=\"0\"\n  ellipse:( g, cx, cy, rx, ry, fill, stroke ) ->\n    g.append(\"svg:ellipse\").attr(\"cx\",cx).attr(\"cy\",cy).attr(\"rx\",rx).attr(\"ry\",ry)\n     .attr(\"fill\",fill).attr(\"stroke\",stroke)\n    return\n\n  # svg:ellipse cx=\"0\" cy=\"0\" rx=\"0\" ry=\"0\"\n  circle:( g, cx, cy, r, fill, stroke ) ->\n    g.append(\"svg:ellipse\").attr(\"cx\",cx).attr(\"cy\",cy).attr(\"r\",r)\n     .attr(\"fill\",fill).attr(\"stroke\",stroke)\n    return\n\n  nodesLinks:( studies, innovs ) ->\n    nodes = []\n    nodes.push( { name:key, color:@toFill(study) } ) for own key, study of studies\n    nodes.push( { name:key, color:@toFill(innov) } ) for own key, innov of innovs\n    links = []\n    sK = 0\n    for own sKey, study of studies\n      iK = 4\n      for own iKey, innov of innovs\n        links.push( { source:sK, target:iK, value:1 } ) # sourceName:sKey, targetName:iKey,\n        iK++\n      sK++\n    #console.log( 'Shape.nodesLinks', nodes, links )\n    { nodes:nodes, links:links }\n\n  conveySankey:( col, defs, g, studies, innovs, x, y, w, h ) ->\n    #console.log( { col:col, studies:studies, innovs:innovs, x:x, y:y, w:w, h:h } )\n    convey  = new Convey( @, defs, g, x, y, w, h )\n    nodesLinks = {}\n    if col is \"Embrace\"\n      nodesLinks = @nodesLinks( studies, innovs  )\n    else if col is \"Encourage\"\n      nodesLinks = @nodesLinks( innovs,  studies )\n    convey.doData( nodesLinks )\n    return\n\n  # All flows are colored the north color of yellow [[90,90.90]\n  practiceFlow:( g, size, spec ) ->\n    return if not spec.row?\n    switch spec.row\n      when 'Learn'\n        @flow( g, size, [90,90,90], 'south' )\n      when 'Do'\n        @flow( g, size, [90,90,90], 'north' )\n        @flow( g, size, [90,90,90], 'south' )\n      when 'Share'\n        @flow( g, size, [90,90,90], 'sorth' )\n      when 'Dim'\n\n      else\n        console.error( 'Shapes.practiceFlow() unknown spec row ', spec.name, spec.row )\n        @flow( g, size, [90,90,90], 'south' )\n    return\n\n  flow:( g, size, hsv, dir, h ) ->\n    w    = if size.level is 'Comp' then size.ringSize * 0.75 else size.ringSize * 0.8\n    h    = if size.level is 'Comp' then size.ringSize * 0.55 else size.ringSize * 1.3\n    x0   = size.xc  -  w * 0.5\n    y0   = if dir is 'south' then size.h  - h else 0\n    fill = Vis.str( hsv )\n    @rect( g, x0, y0, w, h, fill, 'none' )\n    return\n\n  # Convert degress to radians and make angle counter clockwise\n  rad:( deg )    -> (360-deg) * Math.PI / 180.0\n  #degSVG:( deg ) -> 360-deg\n  radD3:( deg )  -> (450-deg) * Math.PI / 180.0\n  #degD3:( rad )  -> -rad * 180.0 / Math.PI\n  cos:( deg )    -> Vis.cosSvg(deg)\n  sin:( deg )    -> Vis.sinSvg(deg)\n\n  gradientDef:( defs, id, color1, color2, x1='0%', x2='100%', y1='0%', y2='100%' ) ->\n    grad = defs.append(\"svg:linearGradient\")\n    grad.attr(\"id\", id ).attr(\"x1\",x1).attr(\"y1\",y1).attr(\"x2\",x2).attr(\"y2\",y2)\n    grad.append(\"svg:stop\").attr(\"offset\", \"10%\").attr(\"stop-color\", color1 )\n    grad.append(\"svg:stop\").attr(\"offset\", \"90%\").attr(\"stop-color\", color2 )\n    return\n\n  pathPlot:( g, stroke, thick, d )->\n    g.append('svg:path').attr( 'd', d ).attr('stroke',stroke).attr('stroke-width',thick)\n     .attr('fill','none').attr(\"stroke-linejoin\",'round')\n    return\n\n  textFill:( hex, dark='#000000', light='#FFFFFF') ->\n    if hex > 0x888888 then dark else light\n\n  saveSvg:( name, id ) ->\n    fileName = name+'.svg'\n    svgData  = $('#'+id)[0].outerHTML\n    svgBlob  = new Blob( [svgData], { type:\"image/svg+xml;charset=utf-8\" } )\n    svgUrl   = window['URL'].createObjectURL(svgBlob)\n    downloadLink      = document.createElement(\"a\")\n    downloadLink.href = svgUrl;\n    downloadLink.download = fileName\n    document.body.appendChild(downloadLink)\n    downloadLink.click()\n    document.body.removeChild(downloadLink)\n    return\n\nexport default Shapes"
  ]
}