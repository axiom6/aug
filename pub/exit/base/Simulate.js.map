{
  "version": 3,
  "file": "Simulate.js",
  "sourceRoot": "../../../src/exit/base",
  "sources": [
    "Simulate.coffee"
  ],
  "names": [],
  "mappings": "AACA,IAAA;;AAAA,OAAO,IAAP,MAAA;;AACA,OAAO,IAAP,MAAA;;AAEM,WAAN,MAAA,SAAA;EAEE,WAAY,OAAA,CAAA;IAAE,IAAC,CAAA;IACb,IAAI,CAAC,IAAL,CAAW,IAAC,CAAA,8BAAZ;EADU;;EAGZ,8BAA+B,CAAE,KAAF,CAAA;AACjC,QAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA;IAAI,IAAA,GAAU;AAGV;;;IAAA,KAAA,qCAAA;uBAAA;;MAEE,GAAA,GAAa,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAD;MACzC,GAAA,GAAa,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAD;MACzC,MAAA,GAAa,CAAC,GAAD,EAAK,GAAL;MACb,IAAA,IAAa;MACb,IAAC,CAAA,MAAM,CAAC,OAAR,CAAiB,UAAjB,EAA6B,MAA7B,EANF;IAAA;EAJ6B;;AALjC;;AAkBA,OAAA,QAAe",
  "sourcesContent": [
    "\nimport Util  from '../util/Util.js'\nimport Data  from '../base/Data.js'\n\nclass Simulate\n\n  constructor:( @stream  ) ->\n    Util.noop( @generateLocationsFromMilePosts )\n\n  generateLocationsFromMilePosts:( delay ) ->\n    time    = 0\n    #subject = @stream.getSubject('Location')\n    #subject.delay( delay )\n    for feature in Data.MilePosts.features\n      # Milepost = feature.properties.Milepost\n      lat        = feature.geometry.coordinates[1]  # lat lon reversed in GeoJSON\n      lon        = feature.geometry.coordinates[0]\n      latlon     = [lat,lon]\n      time      += delay\n      @stream.publish( 'Location', latlon ) # latlon is content Milepost is from\n    return\n\nexport default Simulate"
  ]
}