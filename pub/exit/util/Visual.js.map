{
  "version": 3,
  "file": "Visual.js",
  "sourceRoot": "../../../src/exit/util",
  "sources": [
    "Visual.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nclass Visual\n\n  @rad:( deg ) -> deg * Math.PI / 180\n  @deg:( rad ) -> rad * 180 / Math.PI\n  @sin:( deg ) -> Math.sin(Visual.rad(deg))\n  @cos:( deg ) -> Math.cos(Visual.rad(deg))\n\n  @svgDeg:( deg ) -> 360-deg\n  @svgRad:( rad ) -> 2*Math.PI-rad\n\n  @radSvg:( deg ) -> Visual.rad(360-deg)\n  @degSvg:( rad ) -> Visual.deg(2*Math.PI-rad)\n  @sinSvg:( deg ) -> Math.sin(Visual.radSvg(deg))\n  @cosSvg:( deg ) -> Math.cos(Visual.radSvg(deg))\n\n  @pad2:( n  ) ->\n    s = n.toString()\n    if 0 <= n && n <= 9 then  s = '&nbsp;'  + s\n    s\n\n  @pad3:( n ) ->\n    s = n.toString()\n    if  0 <= n && n <= 9 then s = '&nbsp;&nbsp;' + s\n    if 10 <= n && n <=99 then s = '&nbsp;'  + s\n    #Util.dbg( 'pad', { s:'|'+s+'|', n:n,  } )\n    s\n\n  @dec:( f )      -> Math.round(f*100) / 100\n  @quotes:( str ) -> '\"' + str + '\"'\n\n  @within:( beg, deg, end ) -> beg   <= deg and deg <= end # Closed interval with <=\n  @isZero:( v )             -> -0.01 <  v   and v   <  0.01\n\n  @floor:( x, dx ) ->  dr = Math.round(dx); Math.floor( x / dr ) * dr\n  @ceil:(  x, dx ) ->  dr = Math.round(dx); Math.ceil(  x / dr ) * dr\n\n  @to:( a, a1, a2, b1, b2 ) -> (a-a1) / (a2-a1) * (b2-b1) + b1  # Linear transforms that calculates b from a\n\n  # Need to fully determine if these isZero checks are really necessary. Also need to account for SVG angles\n  @angle:( x, y ) ->\n    ang = Visual.deg(Math.atan2(y,x)) if not @isZero(x) and not @isZero(y)\n    ang =   0 if @isZero(x) and @isZero(y)\n    ang =   0 if x > 0      and @isZero(y)\n    ang =  90 if @isZero(x) and y > 0\n    ang = 180 if x < 0      and @isZero(y)\n    ang = 270 if @isZero(x) and y < 0\n    ang = Visual.deg(Math.atan2(y,x))\n    ang = if ang < 0 then 360+ang else ang\n\n  @angleSvg:( x, y ) -> Visual.angle( x, -y )\n\n  @minRgb:( rgb ) -> Math.min( rgb.r,  rgb.g,  rgb.b )\n  @maxRgb:( rgb ) -> Math.max( rgb.r,  rgb.g,  rgb.b )\n  @sumRgb:( rgb ) ->           rgb.r + rgb.g + rgb.b\n\n  #hexCss:( hex ) -> \"\"\"##{hex.toString(16)}\"\"\" # For orthogonality\n  @rgbCss:( rgb ) -> \"\"\"rgb(#{rgb.r},#{rgb.g},#{rgb.b})\"\"\"\n  @hslCss:( hsl ) -> \"\"\"hsl(#{hsl.h},#{hsl.s*100}%,#{hsl.l*100}%)\"\"\"\n  @hsiCss:( hsi ) -> Visual.hslCss( Visual.rgbToHsl( Visual.hsiToRgb(hsi) ) )\n  @hsvCss:( hsv ) -> Visual.hslCss( Visual.rgbToHsl( Visual.hsvToRgb(hsv) ) )\n\n  @roundRgb:( rgb, f=1.0 ) -> { r:Math.round(rgb.r*f), g:Math.round(rgb.g*f), b:Math.round(rgb.b*f) }\n  @roundHsl:( hsl ) -> { h:Math.round(hsl.h), s:Visual.dec(hsl.s), l:Visual.dec(hsl.l)    }\n  @roundHsi:( hsi ) -> { h:Math.round(hsi.h), s:Visual.dec(hsi.s), i:Math.round(hsi.i) }\n  @roundHsv:( hsv ) -> { h:Math.round(hsv.h), s:Visual.dec(hsv.s), v:Visual.dec(hsv.v)    }\n  @fixedDec:( rgb ) -> { r:Visual.dec(rgb.r),    g:Visual.dec(rgb.g), b:Visual.dec(rgb.b)    }\n\n  @hexRgb:( hex ) -> Visual.roundRgb( { r:(hex & 0xFF0000) >> 16, g:(hex & 0x00FF00) >> 8, b:hex & 0x0000FF } )\n  @rgbHex:( rgb ) -> rgb.r * 4096 + rgb.g * 256 + rgb.b\n  @cssRgb:( str ) ->\n    rgb = { r:0, g:0, b:0 }\n    if str[0]=='#'\n      hex = parseInt( str.substr(1), 16 )\n      rgb = Visual.hexRgb(hex)\n    else if str.slice(0,3)=='rgb'\n      toks = str.split(/[\\s,\\(\\)]+/)\n      rgb  = Visual.roundRgb( { r:parseInt(toks[1]), g:parseInt(toks[2]), b:parseInt(toks[3]) } )\n    else if str.slice(0,3)=='hsl'\n      toks = str.split(/[\\s,\\(\\)]+/)\n      hsl  = { h:parseInt(toks[1]), s:parseInt(toks[2]), l:parseInt(toks[3]) }\n      rgb  = Visual.hslToRgb(hsl)\n    else\n      console.error( 'Visual.cssRgb() unknown CSS color', str )\n    rgb\n\n  # Util.dbg( 'Visual.cssRgb', toks.length, { r:toks[1], g:toks[2], b:toks[3] } )\n\n  @rgbToHsi:( rgb ) ->\n    sum = Visual.sumRgb( rgb )\n    r = rgb.r/sum; g = rgb.g/sum; b = rgb.b/sum\n    i = sum / 3\n    s = 1 - 3 * Math.min(r,g,b)\n    a = Visual.deg( Math.acos( ( r - 0.5*(g+b) ) / Math.sqrt((r-g)*(r-g)+(r-b)*(g-b)) ) )\n    h = if b <= g then a else 360 - a\n    Visual.roundHsi( { h:h, s:s, i:i } )\n\n  @hsiToRgb:( hsi ) ->\n    h = hsi.h; s = hsi.s; i = hsi.i\n    x =        1 - s\n    y = (a) -> 1 + s * Visual.cos(h-a) / Visual.cos(a+60-h)\n    z = (a) -> 3 - x - y(a)\n    rgb = { r:0,      g:0,      b:0      }\n    rgb = { r:y(0),   g:z(0),   b:x      }  if   0 <= h && h < 120\n    rgb = { r:x,      g:y(120), b:z(120) }  if 120 <= h && h < 240\n    rgb = { r:z(240), g:x,      b:y(240) }  if 240 <= h && h < 360\n    max = Visual.maxRgb(rgb) * i\n    fac = if max > 255 then i*255/max else i\n    #Util.dbg('Visual.hsiToRgb', hsi, Visual.roundRgb(rgb,fac), Visual.fixedDec(rgb), Visual.dec(max) )\n    Visual.roundRgb( rgb, fac )\n\n  @hsvToRgb:( hsv ) ->\n    i = Math.floor( hsv.h / 60 )\n    f = hsv.h / 60 - i\n    p = hsv.v * (1 - hsv.s)\n    q = hsv.v * (1 - f * hsv.s)\n    t = hsv.v * (1 - (1 - f) * hsv.s)\n    v = hsv.v\n    rgb = switch i % 6\n      when 0 then { r:v, g:t, b:p }\n      when 1 then { r:q, g:v, b:p }\n      when 2 then { r:p, g:v, b:t }\n      when 3 then { r:p, g:q, b:v }\n      when 4 then { r:t, g:p, b:v }\n      when 5 then { r:v, g:p, b:q }\n      else console.error('Visual.hsvToRgb()'); { r:v, g:t, b:p } # Should never happend\n    Visual.roundRgb( rgb, 255 )\n\n  ###\n  @rgbToHsv:( rgb ) ->\n    rgb = Visual.rgbRound( rgb, 1/255 )\n    max = Visual.maxRgb( rgb )\n    min = Visual.maxRgb( rgb )\n    v   = max\n    d   = max - min\n    s   = if max == 0 then 0 else d / max\n    h   = 0 # achromatic\n    if max != min\n      h = switch max\n        when r\n          ( rgb.g - rgb.b ) / d + if g < b then 6 else 0\n        when g then  ( rgb.b - rgb.r ) / d + 2\n        when b then  ( rgb.r - rgb.g ) / d + 4\n        else console.error('Visual.rgbToHsv')\n    { h:Math.round(h*60), s:Visual.dec(s), v:Visual.dec(v) } \n  ###\n\n  @hslToRgb:( hsl ) ->\n    h = hsl.h; s = hsl.s; l = hsl.l\n    r = 1;     g = 1;     b = 1\n    if s != 0\n      q = if l < 0.5 then l * (1 + s) else l + s - l * s\n      p = 2 * l - q;\n      r = Visual.hue2rgb(p, q, h+1/3 )\n      g = Visual.hue2rgb(p, q, h     )\n      b = Visual.hue2rgb(p, q, h-1/3 )\n    { r:Math.round(r*255), g:Math.round(g*255), b:Math.round(b*255) }\n\n  @hue2rgb:( p, q, t ) ->\n    if(t < 0     ) then t += 1\n    if(t > 1     ) then t -= 1\n    if(t < 1 / 6 ) then return p + (q - p) * 6 * t\n    if(t < 1 / 2 ) then return q\n    if(t < 2 / 3 ) then return p + (q - p) * (2 / 3 - t) * 6\n    p\n\n  @rgbsToHsl:( red, green, blue ) ->\n    @rgbToHsl( { r:red, g:green, b:blue } )\n\n  @rgbToHsl:( rgb ) ->\n    r   = rgb.r / 255; g = rgb.g / 255; b = rgb.b / 255\n    max = Math.max( r, g, b )\n    min = Math.min( r, g, b )\n    h   = 0 # achromatic\n    l   = (max + min) / 2\n    s   = 0\n    if max != min\n      d = max - min\n      s = if l > 0.5 then d / (2 - max - min) else d / (max + min)\n      h = switch max\n        when r\n          ( g - b ) / d + if g < b then 6 else 0\n        when g then ( b - r ) / d + 2\n        when b then ( r - g ) / d + 4\n        else console.error('Visual.@rgbToHsl()'); 0\n    { h:Math.round(h*60), s:Visual.dec(s), l:Visual.dec(l) }\n\n`export default Visual`"
  ]
}