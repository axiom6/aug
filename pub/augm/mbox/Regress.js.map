{
  "version": 3,
  "file": "Regress.js",
  "sourceRoot": "../../../src/augm/mbox",
  "sources": [
    "Regress.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Util  from '../../../lib/pub/base/util/Util.js'\nimport Coord from './Coord.js'\n\nclass Regress\n\n  constructor:( @mbox ) ->\n    @width  = 100\n    @height = 100\n    @mathbox  = @mbox.mathbox\n    @coord = new Coord( @mbox, @width, @height )\n\n  viewLinearRegress:() ->\n    @x = @toArray( @data02(), 0 )\n    @y = @toArray( @data02(), 1 )\n    @n = Math.min( @x.length, @y.length )\n    [slope,yInter] = @slopeYInter( @n, @x, @y )\n    Util.alert( { slope:slope, yInter:yInter } )\n    @view  = @coord.cartesian( [[0,4],[0,500],[0,4]] )\n    points = @view.area( @areaRegress( @n, @x, @y )   )\n    @view.surface( { points:points, color:0x5090FF, shaded:true, opacity:1.0, lineX:true, lineY:true, width:2 } )\n\n  areaRegress:( n, x, y ) ->\n    obj =  { id:'areaRegress', width:@width, height:@height, axes:[1,3], channels:3 }\n    obj.expr = ( emit, slope, yInter, i, j ) =>\n      Util.noop( i, j )\n      emit( slope, @rss( n, x, y, slope, yInter ), yInter )\n    obj\n\n  rss:( n, x, y, slope, yInter ) ->\n    sum = 0.0\n    for i in [0...n]\n      term = y[i] - yInter - slope*x[i]\n      sum  = sum  + term * term\n    #console.log( Util.toFixed(sum,1), Util.toFixed(slope,1), Util.toFixed(yInter,1) )\n    sum\n\n  data01:() ->\n    [[0,2],[1,4],[2,3],[3,5],[4,8],[5,9],[6,10],[7,11]]\n\n  data02:() ->\n    [[0.0,2.1],[1.0,3.9],[2,5.2],[3,7.9],[4.0,10.3],[5,11.7],[6,14.1],[7,15.9]]\n\n  toArray:( data, index ) ->\n    x = []\n    x.push( d[index] ) for d in data\n    x\n\n  slopeYInter:( n, x, y ) ->\n    xmean  = @mean( n, x )\n    ymean  = @mean( n, y )\n    numer  = @sumProducts( n, x, y, xmean, ymean )\n    denom  = @sumSquares(  n, x,    xmean  )\n    slope  = numer / denom\n    yInter = ymean - slope * xmean\n    [slope,yInter]\n\n  sumProducts:( n, x, y, xmean, ymean ) ->\n    sum = 0.0\n    sum = sum + (x[i]-xmean)*(y[i]-ymean) for i in [0...n]\n    sum\n\n  sumSquares:( n, x, xmean ) ->\n    sum = 0.0\n    sum = sum + (x[i]-xmean)*(x[i]-xmean) for i in [0...n]\n    sum\n\n  mean:( n, x ) ->\n    sum = 0\n    sum = sum + x[i]  for i in [0...n]\n    sum / n\n\nexport default Regress"
  ]
}