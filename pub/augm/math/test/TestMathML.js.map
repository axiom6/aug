{
  "version": 3,
  "file": "TestMathML.js",
  "sourceRoot": "../../../../src/augm/math/test",
  "sources": [
    "TestMathML.coffee"
  ],
  "names": [],
  "mappings": "AAQqH;;;;;;;;AAAA,IAAA;;AAErH,OAAO,MAAP,MAAA;;AAEM;;;EAAN,MAAA,WAAA;IAEE,WAAY,CAAA,CAAA;MACV,IAAC,CAAA,MAAD,GAAU,IAAI,MAAJ,CAAA;IADA;;IA8CZ,UAAW,CAAA,CAAA;AAEb,UAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA;MAAI,IAAA,GACE;QAAA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,IAAI,CAAC,EAAL,GAAQ,CAAf,CAAN;UAAiD,IAAA,EAAK;QAAtD,CAAL;QACA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAAN;UAAiD,IAAA,EAAK;QAAtD,CADL;QAEA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAX,CAAX,CAAN;UAAiD,IAAA,EAAK;QAAtD,CAFL;QAGA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAP,EAAqB,GAArB,EAAyB,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAAzB,CAAN;UAAiD,IAAA,EAAK;QAAtD,CAHL;QAIA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,OAAD,EAAS,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAT,CAAP,EAA+B,CAAC,OAAD,EAAS,CAAC,KAAD,EAAO,CAAP,EAAS,CAAT,CAAT,CAA/B,CAAN;UAA6D,IAAA,EAAK;QAAlE,CAJL;QAKA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAP,EAAqB,CAAC,KAAD,EAAO,CAAP,EAAS,CAAT,CAArB,CAAN;UAAyC,IAAA,EAAK;QAA9C,CALL;QAMA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAP,EAAqB,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,QAAD,EAAU,GAAV,CAAX,CAArB,CAAN;UAAwD,IAAA,EAAK;QAA7D,CANL;QAOA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAP,EAAqB,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAArB,CAAN;UAA6C,IAAA,EAAK;QAAlD,CAPL;QAQA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAP,EAAqB,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAArB,CAAN;UAA6C,IAAA,EAAK;QAAlD,CARL;QASA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,CAAP,EAAmB,CAAnB,CAAP,EAA6B,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,KAAD,EAAO,GAAP,CAAX,CAA7B,CAAN;UAA6D,IAAA,EAAK;QAAlE,CATL;QAUA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,OAAD,EAAS,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAX,CAAT,CAAX,CAAX,CAAN;UAAmE,IAAA,EAAK;QAAxE,CAVL;QAWA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,KAAD,EAAO,CAAC,OAAD,EAAS,OAAT,CAAP,CAAX,CAAX,CAAN;UAAyD,IAAA,EAAK;QAA9D,CAXL;QAYA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,IAAP,EAAY,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAAZ,CAAP,EAAoC,CAAC,KAAD,EAAO,GAAP,EAAW,OAAX,CAApC,CAAN;UAAgE,IAAA,EAAK;QAArE,CAZL;QAaA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAP,CAAN;UAA6B,IAAA,EAAK;QAAlC,CAbL;QAcA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAN;UAAqB,IAAA,EAAK;QAA1B,CAdL;QAeA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAP,EAAqB,CAAC,KAAD,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAArB,CAAN;UAA2C,IAAA,EAAK;QAAhD,CAfL;QAgBA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAAN;UAAuB,IAAA,EAAK;QAA5B,CAhBL;QAiBA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf,CAAN;UAA2B,IAAA,EAAK;QAAhC,CAjBL;QAkBA,IAAA,EAAK;UAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,EAAe,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAf,CAAN;UAAqC,IAAA,EAAK;QAA1C;MAlBL;MAqBF,OAAO,CAAC,GAAR,CAAa,8DAAb;MAEA,KAAA,WAAA;;QACE,IAAC,CAAA,MAAM,CAAC,MAAR,CAAgB,GAAG,CAAC,GAApB,EAAyB,GAAzB;QACA,MAAA,GAAY,IAAC,CAAA,MAAM,CAAC,IAAI,CAAC,GAAD,CAAZ,KAAqB,GAAG,CAAC,IAA5B,GAAsC,MAAtC,GAAkD;QAC3D,OAAO,CAAC,GAAR,CAAa,MAAb,EAAqB,GAArB,EAA0B,GAAG,CAAC,GAA9B,EAAmC,MAAnC,EAA2C,IAAC,CAAA,MAAM,CAAC,IAAI,CAAC,GAAD,CAAvD;MAHF;IA1BS;;IAgCX,SAAU,CAAE,GAAF,CAAA;AAEZ,UAAA,MAAA,EAAA,GAAA,EAAA;MAAI,MAAA,GACE;QAAA,IAAA,EAAK;UAAE,KAAA,EAAM,aAAR;UAA8B,IAAA,EAAK;QAAnC,CAAL;QACA,IAAA,EAAK;UAAE,KAAA,EAAM,eAAR;UAA8B,IAAA,EAAK;QAAnC,CADL;QAEA,IAAA,EAAK;UAAE,KAAA,EAAM,WAAR;UAA8B,IAAA,EAAK;QAAnC,CAFL;QAGA,IAAA,EAAK;UAAE,KAAA,EAAM,eAAR;UAA8B,IAAA,EAAK;QAAnC,CAHL;QAIA,IAAA,EAAK;UAAE,KAAA,EAAM,WAAR;UAA8B,IAAA,EAAK;QAAnC,CAJL;QAKA,IAAA,EAAK;UAAE,KAAA,EAAM,mBAAR;UAA8B,IAAA,EAAK;QAAnC,CALL;QAMA,IAAA,EAAK;UAAE,KAAA,EAAM,WAAR;UAA8B,IAAA,EAAK;QAAnC,CANL;QAOA,IAAA,EAAK;UAAE,KAAA,EAAM,aAAR;UAA8B,IAAA,EAAK;QAAnC,CAPL;QAQA,IAAA,EAAK;UAAE,KAAA,EAAM,iBAAR;UAA8B,IAAA,EAAK;QAAnC,CARL;QASA,IAAA,EAAK;UAAE,KAAA,EAAM,aAAR;UAA8B,IAAA,EAAK;QAAnC,CATL;QAUA,IAAA,EAAK;UAAE,KAAA,EAAM,kBAAR;UAA8B,IAAA,EAAK;QAAnC,CAVL;QAWA,IAAA,EAAK;UAAE,KAAA,EAAM,kBAAR;UAA8B,IAAA,EAAK;QAAnC,CAXL;QAYA,IAAA,EAAK;UAAE,KAAA,EAAM,UAAR;UAA8B,IAAA,EAAK;QAAnC,CAZL;QAaA,IAAA,EAAK;UAAE,KAAA,EAAM,SAAR;UAA8B,IAAA,EAAK;QAAnC,CAbL;QAcA,IAAA,EAAK;UAAE,KAAA,EAAM,mBAAR;UAA8B,IAAA,EAAK;QAAnC,CAdL;QAeA,IAAA,EAAK;UAAE,KAAA,EAAM,SAAR;UAA8B,IAAA,EAAK;QAAnC,CAfL;QAgBA,IAAA,EAAK;UAAE,KAAA,EAAM,WAAR;UAA8B,IAAA,EAAK;QAAnC,CAhBL;QAiBA,IAAA,EAAK;UAAE,KAAA,EAAM,aAAR;UAA8B,IAAA,EAAK;QAAnC;MAjBL;MAmBF,OAAO,CAAC,GAAR,CAAa,6DAAb;MAEA,KAAA,aAAA;;QACE,IAAC,CAAA,MAAM,CAAC,KAAR,CAAe,GAAG,CAAC,KAAnB,EAA0B,GAA1B;QACA,MAAA,GAAY,IAAC,CAAA,MAAM,CAAC,IAAI,CAAC,GAAD,CAAZ,KAAqB,GAAG,CAAC,IAA5B,GAAsC,MAAtC,GAAkD;QAC3D,OAAO,CAAC,GAAR,CAAa,MAAb,EAAqB,GAArB,EAA0B,GAAG,CAAC,KAA9B,EAAqC,MAArC,EAA6C,IAAC,CAAA,MAAM,CAAC,IAAI,CAAC,GAAD,CAAzD;MAHF;IAxBQ;;IA+BV,OAAQ,CAAA,CAAA;AACV,UAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;MAAI,IAAA,GAAO,CAAC,KAAD,EAAO,IAAI,CAAC,EAAL,GAAQ,CAAf;MACP,IAAA,GAAO;QAAC,KAAD;QAAO,GAAP;QAAW,GAAX;;MACP,IAAA,GAAO,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf;MACP,IAAA,GAAO,IAAA,CAAK,mBAAL;MACP,IAAA,GAAO,IAAA,CAAK,iBAAL;MACP,IAAA,GAAO,IAAA,CAAK,qBAAL;MACP,OAAO,CAAC,GAAR,CAAa,KAAb,EAAoB,IAApB,EAA0B,IAA1B;MACA,OAAO,CAAC,GAAR,CAAa,KAAb,EAAoB,IAApB,EAA0B,IAA1B;MACA,OAAO,CAAC,GAAR,CAAa,KAAb,EAAoB,IAApB,EAA0B,IAA1B;MAEA,IAAC,CAAA,MAAM,CAAC,MAAR,CAAgB,IAAhB,EAAsB,MAAtB;MACA,IAAC,CAAA,MAAM,CAAC,MAAR,CAAgB,IAAhB,EAAsB,MAAtB;MACA,IAAC,CAAA,MAAM,CAAC,MAAR,CAAgB,IAAhB,EAAsB,MAAtB;IAbM;;EA/GV;;EAKE,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,GAAU;;EACV,MAAA,GAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,GAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;EACV,MAAA,IAAU;;EACV,MAAA,GAAU;;EACV,MAAA,GAAU;;EACV,MAAA,GAAU;;EACV,MAAA,IAAU;;;;cAlDyG;;;;;AAuIrH,OAAA,QAAe",
  "sourcesContent": [
    "\n# cd   pub/augm/math/test\n# Imported and called by Run.js\n# node --experimental-modules -r esm Run.js\n\n# package.js script for compiling grammars\n# \"gcom\": \"pegjs -o pub/augm/math/par/Ascii.com.js  src/augm/math/par/Ascii.pegjs\",\n# \"gnon\": \"sed -n -e :a -e '1,5!{P;N;D;};N;ba' pub/augm/math/par/Ascii.com.js > pub/augm/math/par/Ascii.non.js\",\n# \"gesm\": \"cat      pub/augm/math/par/Ascii.non.js  src/augm/math/par/Ascii.esm.ex > pub/augm/math/par/Ascii.esm.js\",\n\nimport MathML from '../ptn/MathML.js'\n\nclass TestMathML\n\n  constructor:() ->\n    @mathML = new MathML()\n\n  trg1ML  = \"<math><mrow><mrow>cot<mo>(</mo><mi>x</mi><mo>)</mo></mrow><mo>+</mo>\"\n  trg1ML += \"<mrow>sin<mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow></augm/math>\"\n  par1ML  = \"<math><mrow><mo>(</mo><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow><mo>)</mo>\"\n  par1ML += \"<mo>*</mo><mo>(</mo><msup><mi>c</mi><mn>2</mn></msup><mo>)</mo></mrow></augm/math>\"\n  trg1ML  = \"<math><mrow><mrow>cot<mo>(</mo><mi>x</mi><mo>)</mo></mrow><mo>+</mo>\"\n  trg1ML += \"<mrow>sin<mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow></augm/math>\"\n  sus1ML  = \"<math><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub></mrow></augm/math>\"\n  sin1ML  = \"<math><mrow>sin<mo>(</mo><mn>0.5235987755982988</mn><mo>)</mo></mrow></augm/math>\"\n  add1ML  = \"<math><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow></augm/math>\"\n  add2ML  = \"<math><mrow><mrow><mn>2.2</mn><mo>*</mo><mn>3</mn></mrow><mo>+</mo>\"\n  add2ML += \"<mrow><mn>4</mn><mo>*</mo><mn>3</mn></mrow></mrow></augm/math>\"\n  equ1ML  = \"<math><mrow><mi>E</mi><mo>=</mo><mrow><mi>m</mi><mo>*</mo><msup>\"\n  equ1ML += \"<mi>C</mi><mn>2</mn></msup></mrow></mrow></augm/math>\"\n  sum1ML  = \"<math><munderover><mo>âˆ‘</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow>\"\n  sum1ML += \"<mi>n</mi></munderover><mrow><mi>x</mi><mo>-</mo><mi>i</mi></mrow></augm/math>\"\n  mul1ML  = \"<math><mrow><mo>(</mo><mrow><mn>2.2</mn><mo>+</mo><mn>3</mn></mrow><mo>)</mo>\"\n  mul1ML += \"<mo>*</mo><mo>(</mo><mrow><mn>1</mn><mo>+</mo><mn>2</mn></mrow><mo>)</mo></mrow></augm/math>\"\n  mul2ML  = \"<math><mrow><mrow><mn>2.2</mn><mo>*</mo><mn>3</mn></mrow><mo>+</mo>\"\n  mul2ML += \"<mrow><mn>4</mn><mo>*</mo><mn>3</mn></mrow></mrow></augm/math>\"\n  tan1ML  = \"<math><mrow><mrow><mn>2.2</mn><mo>*</mo><mn>3</mn></mrow><mo>+</mo>\"\n  tan1ML += \"<mrow><mi>x</mi><mo>*</mo><mrow><mi>arctan</mi><mo>(</mo><mi>y</mi><mo>)</mo></mrow></mrow></mrow></augm/math>\"\n  sub1ML  = \"<math><mrow><mrow><mn>2.2</mn><mo>*</mo><mn>3</mn></mrow><mo>-</mo><msup>\"\n  sub1ML += \"<mi>x</mi><mi>y</mi></msup></mrow></augm/math>\"\n  equ2ML  = \"<math><mrow><msup><mn>2.2</mn><mn>3</mn></msup><mo>=</mo>\"\n  equ2ML += \"<mfrac><mi>x</mi><mi>y</mi></mfrac></mrow></augm/math>\"\n  sub2ML  = \"<math><mrow><mrow><mrow><mo>-</mo><mn>2.2</mn></mrow><mo>*</mo><mn>3</mn></mrow>\"\n  sub2ML += \"<mo>-</mo><mfrac><mi>x</mi><mrow><mo>-</mo><mi>y</mi></mrow></mfrac></mrow></augm/math>\"\n  mul3ML  = \"<math><mrow><mi>x</mi><mo>*</mo><mrow><mi>x</mi><mo>*</mo><mo>(</mo><mrow><mi>a</mi>\"\n  mul3ML += \"<mo>+</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><mo>)</mo></mrow></mrow></augm/math>\"\n  sin2ML  = \"<math><mrow><mi>a</mi><mo>+</mo><mrow><mi>b</mi><mo>*</mo><mrow><mi>sin</mi>\"\n  sin2ML += \"<mo>(</mo><mo>\\u03B8</mo><mo>)</mo></mrow></mrow></mrow></augm/math>\"\n  fun1ML  = \"<math><mrow><mrow><mi>fn</mi><mo>(</mo><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow><mo>)</mo></mrow>\"\n  fun1ML += \"<mo>*</mo><mrow><mi>g</mi><mo>(</mo><mi>theta</mi><mo>)</mo></mrow></mrow></augm/math>\"\n  int1ML  = \"<math><mrow><mo>âˆ«</mo><mrow><mi>x</mi><mo>*</mo><mn>2</mn></mrow></mrow></augm/math>\"\n  vec1ML  = \"<math><mo>[</mo><mn>1</mn><mn>2</mn><mn>3</mn><mo>]</mo></augm/math>\"\n  mat1ML  = \"<math><mo>[</mo>\"\n  mat1ML += \"<mo>[</mo><mn>1</mn><mn>2</mn><mn>3</mn><mo>]</mo>\"\n  mat1ML += \"<mo>[</mo><mn>4</mn><mn>5</mn><mn>6</mn><mo>]</mo><mo>]</mo></augm/math>\"\n  lim1ML  = \"<math><msubsup><mi>lim</mi><mi>i</mi><mi>n</mi></msubsup></augm/math>\"\n  sum2ML  = \"<math><munderover><mo>âˆ‘</mo><mi>i</mi><mi>n</mi></munderover><mi>j</mi></augm/math>\"\n  sum3ML  = \"<math><munderover><mo>âˆ‘</mo><mi>i</mi><mi>n</mi></munderover><mrow><mi>j</mi>\"\n  sum3ML += \"<mo>+</mo><mn>1</mn></mrow></augm/math>\"\n\n  testMarkup:() ->\n\n    asts =\n      Sin1:{ ast:['Sin',Math.PI/6],                         math:sin1ML }\n      Add1:{ ast:['Add','a','b'],                           math:add1ML }\n      Equ1:{ ast:['Equ','E',['Mul','m',['Pow','C',2]]],     math:equ1ML }\n      Sum1:{ ast:['Sum',['Equ','i',1],'n',['Sub','x','i']], math:sum1ML }\n      Mul1:{ ast:['Mul',['Paren',['Add',2.2,3]],['Paren',['Add',1,2]]], math:mul1ML }\n      Mul2:{ ast:['Add',['Mul',2.2,3],['Mul',4,3]], math:mul2ML }\n      Tan1:{ ast:['Add',['Mul',2.2,3],['Mul','x',['Arctan','y']]], math:tan1ML }\n      Sub1:{ ast:['Sub',['Mul',2.2,3],['Pow','x','y']], math:sub1ML }\n      Equ2:{ ast:['Equ',['Pow',2.2,3],['Div','x','y']], math:equ2ML }\n      Sub2:{ ast:['Sub',['Mul',['Neg',2.2],3],['Div','x',['Neg','y']]], math:sub2ML }\n      Mul3:{ ast:['Mul','x',['Mul','x',['Paren',['Add','a',['Sus','b',1]]]]], math:mul3ML }\n      Sin2:{ ast:['Add','a',['Mul','b',['Sin',['Latex','theta']]]], math:sin2ML }\n      Fun1:{ ast:['Mul',['Fun','fn',['Add','a','b']],['Fun','g','theta']], math:fun1ML }\n      Int1:{ ast:['Int',['Mul','x',2]], math:int1ML }\n      Vec1:{ ast:['Vec',1,2,3], math:vec1ML }\n      Mat1:{ ast:['Mat',['Vec',1,2,3],['Vec',4,5,6]], math:mat1ML }\n      Lim1:{ ast:['Lim','i','n'], math:lim1ML }\n      Sum2:{ ast:['Sum','i','n','j'], math:sum2ML }\n      Sum3:{ ast:['Sum','i','n',['Add','j',1]], math:sum3ML }\n\n\n    console.log( \"-------------------- testMarkup ----------------------------\" )\n\n    for key, obj of asts\n      @mathML.markup( obj.ast, key )\n      status = if @mathML.math[key] is obj.math then 'Pass' else 'Fail'\n      console.log( status, key, obj.exp, '\\n  ', @mathML.math[key] )\n    return\n\n  testParse:( key ) ->\n\n    asciis =\n      Par1:{ ascii:\"(a+b)*(c^2)\",        math:par1ML }\n      Trg1:{ ascii:\"cos(x)+sin(x)\",      math:trg1ML }\n      Sus1:{ ascii:\"x_1 + x_2\",          math:sus1ML }\n      Mul1:{ ascii:\"(2.2+3)*(1+2)\",      math:mul1ML }\n      Add2:{ ascii:\"2.2*3+4*3\",          math:add2ML }\n      Tan1:{ ascii:\"2.2*3+x*arctan(y)\",  math:tan1ML }\n      Sub1:{ ascii:\"2.2*3-x^y\",          math:sub1ML }\n      Equ2:{ ascii:\"2.2^3 = x/y\",        math:equ2ML }\n      Sub2:{ ascii:\"-2.2 * 3-x / -y\",    math:sub2ML }\n      Mul3:{ ascii:\"x*x*(a+b_1)\",        math:mul3ML }\n      Sin2:{ ascii:\"a+b*sin(\\\\theta)\",   math:sin2ML }\n      Fun1:{ ascii:\"fn(a+b)*g(theta)\",   math:fun1ML }\n      Int1:{ ascii:\"int(x*2)\",           math:int1ML }\n      Vec1:{ ascii:\"[1,2,3]\",            math:vec1ML }\n      Mat1:{ ascii:\"[[1,2,3],[4,5,6]]\",  math:mat1ML }\n      Lim1:{ ascii:\"lim_i^n\",            math:lim1ML }\n      Sum2:{ ascii:\"sum_i^n~j\",          math:sum2ML }\n      Sum3:{ ascii:\"sum_i^n~j+1\",        math:sum3ML }\n\n    console.log( \"---------------------- testParse --------------------------\" )\n\n    for key, obj of asciis\n      @mathML.parse( obj.ascii, key )\n      status = if @mathML.math[key] is obj.math then 'Pass' else 'Fail'\n      console.log( status, key, obj.ascii, '\\n  ', @mathML.math[key] )\n\n    return\n\n  testExp:() ->\n    Sina = ['Sin',Math.PI/6]\n    Adda = ['Add','a','b'] # ['Add','a',['Mul',['x','y']]]\n    Suma = ['Sum','i','n','j']\n    Sins = eval(\"['Sin',Math.PI/6]\" )\n    Adds = eval(\"['Add','a','b']\" )\n    Sums = eval(\"['Sum','i','n','j']\" )\n    console.log( 'Sin', Sina, Sins )\n    console.log( 'Add', Adda, Adds )\n    console.log( 'Sin', Suma, Sums )\n\n    @mathML.markup( Sina, 'Sina' )\n    @mathML.markup( Sins, 'Sins' )\n    @mathML.markup( Adda, 'Adda' )\n    #mathML.markup( Adds, 'Adds' )\n    #mathML.markup( Suma, 'Suma' )\n    #mathML.markup( Sums, 'Sums' )\n\n    return\n\nexport default TestMathML"
  ]
}