{
  "version": 3,
  "file": "TestDiffEQ.js",
  "sourceRoot": "../../../../src/augm/math/test",
  "sources": [
    "TestDiffEQ.coffee"
  ],
  "names": [],
  "mappings": "AACA,IAAA;;AAAA,OAAO,GAAP,MAAA;;AACA,OAAO,MAAP,MAAA;;AAEM,aAAN,MAAA,WAAA;EAEE,WAAY,CAAA,CAAA;IACV,IAAC,CAAA,MAAD,GAAS,IAAI,MAAJ,CAAA;EADC;;EAGZ,UAAW,CAAA,CAAA;AAEb,QAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA;IAAI,IAAA,GACE;MAAA,IAAA,EAAK;QAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,CAAN;QAAuB,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,CAAP,EAAmB,CAAC,GAAD,EAAK,GAAL,CAAnB,CAA3B;QAA0D,GAAA,EAAI;MAA9D,CAAL;MACA,IAAA,EAAK;QAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAAN;QAAuB,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,GAAD,EAAK,GAAL,CAAP,EAAiB,CAAC,GAAD,EAAK,GAAL,CAAjB;MAA3B,CADL;MAEA,IAAA,EAAK;QAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAAN;QAAuB,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,GAAD,EAAK,GAAL,CAAX,CAAP,EAA6B,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,GAAD,EAAK,GAAL,CAAX,CAA7B;MAA3B,CAFL;MAGA,IAAA,EAAK;QAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,CAAN;QAAuB,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,GAAD,EAAK,GAAL,CAAX,CAAP,EAA6B,CAAC,KAAD,EAAO,GAAP,EAAW,CAAC,GAAD,EAAK,GAAL,CAAX,CAA7B,CAAP,EAA2D,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAA3D,CAA3B;QAAqG,GAAA,EAAI;MAAzG,CAHL;MAIA,IAAA,EAAK;QAAE,GAAA,EAAI,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAN;QAAuB,GAAA,EAAI,CAAC,KAAD,EAAO,CAAC,KAAD,EAAO,CAAP,EAAS,CAAC,KAAD,EAAO,GAAP,EAAW,CAAX,CAAT,CAAP,EAA+B,CAAC,GAAD,EAAK,GAAL,CAA/B,CAA3B;QAAuE,GAAA,EAAI;MAA3E;IAJL;IAMF,OAAO,CAAC,GAAR,CAAa,8DAAb;IAEA,KAAA,WAAA;;MACE,GAAG,CAAC,GAAJ,GAAU,IAAC,CAAA,MAAM,CAAC,CAAR,CAAY,GAAG,CAAC,GAAhB;MACV,GAAA,GAAW,GAAG,CAAC,KAAJ,CAAW,GAAG,CAAC,GAAf;MACX,GAAA,GAAW,GAAG,CAAC,KAAJ,CAAW,GAAG,CAAC,GAAf;MACX,MAAA,GAAa,GAAA,KAAO,GAAV,GAAmB,MAAnB,GAA+B;MACzC,OAAO,CAAC,GAAR,CAAa,MAAb,EAAqB,GAArB,EAA0B,GAAG,CAAC,GAA9B,EAAmC,MAAnC,EAA2C,GAA3C,EAAgD,MAAhD,EAAwD,GAAxD;IALF;EAXS;;AALb;;AAwBA,OAAA,QAAe",
  "sourcesContent": [
    "\nimport Ptn    from '../adt/Ptn.js'\nimport DiffEQ from '../ptn/DiffEQ.js'\n\nclass TestDiffEQ\n\n  constructor:() ->\n    @diffEQ= new DiffEQ()\n\n  testDiffEQ:() ->\n\n    exps =\n      Sin1:{ ast:['Sin','u'],     dst:['Mul',['Cos','u'],['D','u']], dsa:[] }\n      Add1:{ ast:['Add','u','v'], dst:['Add',['D','u'],['D','v']] }\n      Mul1:{ ast:['Mul','u','v'], dst:['Add',['Mul','v',['D','u']],['Mul','u',['D','v']]] }\n      Div1:{ ast:['Div','u','v'], dst:['Div',['Sub',['Mul','v',['D','u']],['Mul','u',['D','v']]],['Pow','v',2]],dsa:[]}\n      Pow1:{ ast:['Pow','u',3],   dst:['Mul',['Mul',3,['Pow','u',2]],['D','u']] , dsa:[] }\n\n    console.log( \"-------------------- testDiffEQ ----------------------------\" )\n\n    for key, exp of exps\n      exp.dsa = @diffEQ.d(  exp.ast )\n      sst     =  Ptn.toSst( exp.dst )\n      ssa     =  Ptn.toSst( exp.dsa )\n      status  = if sst is ssa then 'Pass' else 'Fail'\n      console.log( status, key, exp.ast, '\\n  ', sst, '\\n  ', ssa )\n    return\n\nexport default TestDiffEQ\n"
  ]
}