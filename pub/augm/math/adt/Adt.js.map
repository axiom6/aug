{
  "version": 3,
  "file": "Adt.js",
  "sourceRoot": "../../../../src/augm/math/adt",
  "sources": [
    "Adt.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nclass Adt\n\n  # Geometric Algerbra\n  @Dot       = (u,v) => u ~ v  # Dot product\n  @Wedge     = (u,v) => u ^ v  # Wedge outer generalisze cross product\n  @Vee       = (u,v) => u & v  # Meet or join\n  @Dual      = (u)   => u      # Dual\n  @Inverse   = (u)   => u      # Inverse\n  @Conjugate = (u)   => u      # Conjugate\n  @Reverse   = (u)   => u      # Reverse\n  @Involute  = (u)   => u      # Involute\n  @Rotor     = (u)   => u      # Rotor\n  @Magnitude = (u)   => u      # Magnitude\n  @Grade     = (u)   => u      # Grade\n  @Reflect   = (u,v) => u * v * conjugate(u)\n  @Rotate    = (u,v) => u * v * conjugate(u)\n  @GP        = (u,v) => Adt.Dot(u,v) + Adt.Wedge(u,v) # Geometric Product\n\n  # Vector, Matrix, Numbers and Variables\n  @Vec   = (f,rest) =>  f(rest)\n  @Mat   = (f,rest) =>  f(rest)\n  @Ratio = (u,v)    =>  u / v\n\n  # Arithmetic\n  @Equ = (u,v) =>  u =  v\n  @Add = (u,v) =>  u +  v\n  @Sub = (u,v) =>  u -  v\n  @Mul = (u,v) =>  u *  v\n  @Div = (u,v) =>  u /  v\n  @Pow = (u,v) =>  u ** v\n\n  # Unary operator high precendence\n  @Neg   = (u) => -u\n  @Recip = (u) =>  1 / u\n  @Abs   = (u) => Math.abs(u)\n\n  # Parenthesis Braces Object Array\n  @Paren = (u)   => ( u )\n  @Brace = (u)   => { u }\n\n  # Natural Log, Log Base, Root, Square Root and e\n  @Ln   = (u)   => Math.log(u)                 # ln(u)\n  @Log  = (u,b) => Math.log(u) / Math.log(b)   # log_b(u)\n  @Root = (u,r) => Math.pow(u,1/r)          # root_b(u)\n  @Sqrt = (u)   => Math.sqrt(u)                # sqrt(u)\n  @E    = (u)   => Math.exp(u)                 # e**u\n\n  # Trigometric\n\n  @Sin = (u)   =>  Math.sin(u)\n  @Cos = (u)   =>  Math.cos(u)\n  @Tan = (u)   =>  Math.tan(u)\n  @Csc = (u)   =>  1.0 / Math.sin(u)\n  @Sec = (u)   =>  1.0 / Math.cos(u)\n  @Cot = (u)   =>  1.0 / Math.tan(u)\n\n  # Inverse Trigometric\n  @Arcsin = (u)  =>  Math.asin(u)\n  @Arccos = (u)  =>  Math.acos(u)\n  @Arctan = (u)  =>  Math.atan(u)\n  @Arccsc = (u)  =>  Math.asin(1/u ) # ???\n  @Arcsec = (u)  =>  Math.acos(1/u ) # ???\n  @Arccot = (u)  =>  Math.atan(1/u ) # ???\n\n  # Hyperbolic  with Inverse\n  @Sinh    = (u) =>  Math.sinh(u)\n  @Cosh    = (u) =>  Math.cosh(u)\n  @Tanh    = (u) =>  Math.tanh(u)\n  @Arccinh = (u) =>  Math.asinh(u)\n  @Arccosh = (u) =>  Math.acosh(u)\n  @Arctanh = (u) =>  Math.atanh(u)\n\n  # Calculus, Sum and Typsetting\n  @Fun    = (f,u)   => u         # f(u) Function\n  @D      = (u)     => u         # d(u) Differentiation\n  @Int    = (u)     => u         # Integration\n  @DefInt = (a,b,u) => a + b + u # Definite Integral\n  @Sum    = (a,b,u) => a + b + u # Summation\n\n  # Subscripts Superscripts Limits\n  @Sus = (u,a)   => u + a     # u_a  Subscript  u^b  Superscript is Power\n  @Lim = (a,b)   => a + b     #_a^b  Limit for Sum and Itg\n\n  # Finge\n  #Obj = (k,v)  => { k:v } # ???\n  @Latex = (o)  => o\n  @Sim   = (u)  => u         # sim(u) Simplify\n  @Not   = (u)  => u         # Not an Adt expression\n  @Msg   = (u)  => u         # Parsing error message\n  @Unk   = (u)  => u\n\n\nAdt.Geom     = [Adt.Dot,Adt.Wedge,Adt.Vee,Adt.Dual,Adt.Inverse,Adt.Conjugate,Adt.Reverse,Adt.Involute,Adt.Rotor,\n                Adt.Magnitude,Adt.Grade,Adt.Reflect,Adt.Rotate,Adt.GP]\nAdt.Arith    = [Adt.Ratio,Adt.Equ,Adt.Add,Adt.Sub,Adt.Mul,Adt.Div,Adt.Pow,Adt.Neg,Adt.Recip,Adt.Abs,Adt.Paren,Adt.Brace]\nAdt.Trans    = [Adt.Ln,Adt.Log,Adt.Root,Adt.Sqrt,Adt.E,\n                Adt.Sin,   Adt.Cos,   Adt.Tan,   Adt.Csc,   Adt.Sec,   Adt.Cot,\n                Adt.Arcsin,Adt.Arccos,Adt.Arctan,Adt.Arccsc, Adt.Arcsec, Adt.Arccot]\nAdt.Hyper    = [Adt.Sinh,  Adt.Cosh,  Adt.Tanh,  Adt.Arccinh,Adt.Arccosh,Adt.Arctanh]\nAdt.Calculus = [Adt.Fun,Adt.D,Adt.Int,Adt.DefInt,Adt.Sum,Adt.Sub,Adt.Sus,Adt.Lim]\nAdt.Fringe   = [Adt.Latex,Adt.Sim,Adt.Not,Adt.Msg,Adt.Unk]\n\nexport default Adt"
  ]
}