{
  "version": 3,
  "file": "GA.js",
  "sourceRoot": "../../../../src/augm/math/geo",
  "sources": [
    "GA.coffee"
  ],
  "names": [],
  "mappings": "AAEA,IAAA;;AAAM,KAAN,MAAA,GAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuCE,WAAY,CAAE,IAAF,EAAQ,IAAR,CAAA,EAAA;;AAvCd;;AAyCA,OAAA,QAAe",
  "sourcesContent": [
    "\n\nclass GA\n\n  # opts = {\n  #   p,            integer number of positive dimensions.\n  #   q,            integer number of negative dimensions.\n  #   r,            integer number of zero dimensions.\n  #   metric,       [a,b,..] array with metric per generating dimensions. (e.g. [0,1,1] for PGA2D)\n  #   basis,        [\"1\",\"e1\",\"e2\"] basis that overrules the standard cannonical basis.\n  #   Cayley,       [[\"1\",\"e1\"],[\"e1\",\"-1\"]] Cayley table to overrule standard GA tables.\n  #   baseType,     float32Array (default), float64Array, .. baseType to be used for the Elements.\n  #   mix           Set to true to enable interoperable sub-algebras. (defaults to false). }\n\n  # Basic\n  # var Hyper   = Algebra(1);       // Hyperbolic numbers.\n  # var Complex = Algebra(0,1);     // Complex numbers.\n  # var Dual    = Algebra(0,0,1);   // Dual numbers.\n  # var H       = Algebra(0,2);     // Quaternions.\n\n  # Clifford\n  # var Cl2 = Algebra(2);           // Clifford algebra for 2D vector space.\n  # var Cl3 = Algebra(3);           // Clifford algebra for 3D vector space.\n  # var CTS = Algebra(1,3);         // Clifford algebra for timespace vectors.\n\n  # SubAlgebras\n  # var Complex = Algebra({p:3,basis:['1','e123']});            // Complex Numbers as subalgebra of Cl3\n  # var Quater  = Algebra({p:3,basis:['1','e12','e13','e23']}); // Quaternions as even subalgebra of Cl3\n\n  # Geometric\n  # var PGA2D = Algebra(2,0,1);     // Projective Euclidean 2D plane. (dual)\n  # var PGA3D = Algebra(3,0,1);     // Projective Euclidean 3D space. (dual)\n  # var CGA2D = Algebra(3,1);       // conformal 2D space.\n  # var CGA3D = Algebra(4,1);       // Conformal 3D space.\n\n  # High-Dimensional GA\n  # var DCGA3D = Algebra(6,2);      // Double Conformal 3D Space.\n  # var TCGA3D = Algebra(9,3);      // Tripple Conformal 3D Space.\n  # var DCGSTA = Algebra(4,8);      // Double Conformal Geometric Space Time Algebra.\n  # var QCGA   = Algebra(9,6);      // Quadric Conformal Geometric Algebra.\n\n  constructor:( opts, func ) ->\n\nexport default GA"
  ]
}