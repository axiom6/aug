{
  "version": 3,
  "file": "Radar.js",
  "sourceRoot": "../../../src/augm/show",
  "sources": [
    "Radar.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Util   from '../../../lib/pub/base/util/Util.js'\nimport Vis    from '../../../lib/pub/base/draw/Vis.js'\n\n\nclass Radar\n\n  constructor:( @svgMgr, @name, @mix ) ->\n    @d3  = @svgMgr.d3\n    @svg = @svgMgr.svg\n    @g   = @svgMgr.g\n    @ready()\n\n  isRadar:() ->\n    @name is 'Radar'\n\n  ready:() ->\n    sz      = @svgMgr.size\n    @width  = sz.w\n    @height = sz.h\n    @x0     = sz.xc\n    @y0     = sz.yc\n    @inner  = 0\n    @outer  = ( Math.min(@width,@height) - 100 ) / 2\n    @r04    = @outer*0.04; @r08 = @outer*0.08; @r16 = @outer*0.16;\n    @r10    = @outer*0.1;  @r20 = @outer*0.2;  @r30 = @outer*0.3\n    @r40    = @outer*0.4;  @r50 = @outer*0.5;  @r60 = @outer*0.6\n    @r80    = @outer*0.8;  @r90 = @outer*0.9;  @r100= @outer*1.0\n    @s2     = Math.sin(  Vis.rad(60) )\n    @r2     = @s2*@s2*60.0\n    @p60    = -Math.sin( Vis.rad(60) )\n    if @r20 is false and @r30 is false and @r50 is false and @r90 is false then {}\n    if @p60 is false and @r04 is false and @r10 is false then {}\n    @attrG( @g )\n\n    @criterias = [                       # Grade  Percentile\n      { name:\"Adopt\",  radius:@r40 }     #   A     90-100%\n      { name:\"Trial\",  radius:@r60 }     #   B     80-89%\n      { name:\"Access\", radius:@r80 }     #   C     70-79%\n      { name:\"Hold\",   radius:@r100 } ]  #   D     60-69%\n\n    # Access.asyncJSON( 'draw/Quad.json', (quads) => @doQuads(quads) ) if @isRadar()\n    # Access.asyncJSON( 'draw/Tech.json', (techs) => @doTechs(techs) ) if @isRadar()\n    @doQuads( @mix.data('Quad') ) if @isRadar()\n    @doTechs( @mix.data('Tech') ) if @isRadar()\n    return\n\n  doQuads:( quads ) =>\n    @quads( Util.toArray(quads), @r08, @r100 )\n    @circles( @criterias )\n    return\n\n  doTechs:( techs ) =>\n    @pts( Util.toArray(techs) )\n    return\n\n  attrG:( g ) =>\n    g.attr(\"style\",\"background#{@d3.rgb(250,240,200)}; overflow:visible;\")\n\n  prompt:() =>\n    @g.append(\"svg:text\")\n      .text(\"Drag and drop the blue dots to target technologies as Adopt Trial Access or Hold\" )\n      .attr(\"x\", 20 ).attr(\"y\", 20 ).attr(\"font-family\",\"Arial\").attr(\"font-size\",\"14px\")\n\n  grid:( da, dr, ba=0, ea=360, br=@r40, er=@r100  ) =>\n    for ang in [ba...ea] by da\n      cos = Math.cos(@rad(ang))\n      sin = Math.sin(@rad(ang))\n      @quadLine( @r16*cos, @r16*sin, @r100*cos, @r100*sin, \"#CCCCCC\" )\n    for r in [br...er] by dr\n      @circle( r  )\n    for r in [@r08...@r40] by @r08\n      @circle( r  )\n    return\n\n  circle:( r ) =>\n    @g.append(\"svg:circle\")\n      .attr(\"cx\",@x0).attr(\"cy\",@y0)\n      .attr(\"fill\",\"none\").attr(\"stroke\",\"#CCCCCC\").attr(\"stroke-width\",1)\n      .attr(\"r\", r )\n    return\n\n  # Concentric circles for delinating graded adoption criteria\n  circles:( criterias ) =>\n    g = @g.selectAll(\"g\").data( criterias ).enter().append(\"svg:g\")\n    g.append(\"svg:circle\")\n     .attr(\"cx\",@x0).attr(\"cy\",@y0)\n     .attr(\"fill\",\"none\").attr(\"stroke\",\"gray\").attr(\"stroke-width\",1)\n     .attr(\"r\", (criteria) -> criteria.radius )\n    if( @isRadar() )\n      g.append(\"svg:text\")\n       .attr(\"x\",  @x0 )\n       .attr(\"y\",  (criteria) => @y0 - criteria.radius )\n       .text(      (criteria) => criteria.name )\n       .attr(\"text-anchor\",\"middle\")\n       .attr(\"dy\",\"1.2em\")\n       .attr(\"font-size\",\"18pt\").attr(\"font-family\",\"Arial\")\n    return\n\n  quads:( quadrants, r1, r2 ) =>\n    @wedges( quadrants, @inner, r2  )\n    # @grid((@r100-@r40)/15,5)\n    n = quadrants.length*2; dif=360/n; ang=0; cos=0; sin=0; name2s=null\n    for i in [0...n]\n      ang = i*dif; cos = Math.cos(@rad(ang)); sin = Math.sin(@rad(ang))\n      @quadLine( r1*cos, r1*sin, r2*cos, r2*sin, \"white\" )      # \"rgba(180,180,180,1.0)\"\n      # @degName( @r100+12, ang )\n      name2s = quadrants[Math.floor(i/2)]['name2s']\n      if( name2s? && name2s.length==2  )\n        @quadName( @r100+12, ang+dif/2, name2s[i%2] )\n\n    n   = quadrants.length\n    dif = 360/n\n    beg = if @isRadar() then dif/2 else 0\n    for i in[0...n]\n      name1 = quadrants[i].name1\n      if( name1? && name1.length>0  )\n        @quadName( @r100+12, beg+dif*i, name1 )\n    return\n\n  quadName:( r, ang, name ) =>\n    cx  = @x0 + r*Math.cos(@rad(ang))\n    cy  = @y0 + r*Math.sin(@rad(ang))\n    rot = \"rotate(#{@angleQuad(ang)},#{cx},#{cy})\"\n    dy  = if( 0 <= ang && ang <= 180 ) then \".15em\" else \".5em\"\n    @g.append(\"svg:text\")\n      .attr(\"x\", cx )\n      .attr(\"y\", cy )\n      .text( name )\n      .attr(\"transform\",rot)\n      .attr(\"text-anchor\",\"middle\")\n      .attr(\"dy\",dy)\n      .attr(\"font-size\",\"18pt\").attr(\"font-family\",\"Arial\")\n    return\n    \n  degName:( r, ang ) =>\n    cx = @x0 + r*Math.cos(@rad(ang))\n    cy = @y0 + r*Math.sin(@rad(ang))\n    rotate = \"rotate(#{@angleQuad(ang)},#{cx},#{cy})\"\n    @g.append(\"svg:text\").attr(\"x\", cx ).attr(\"y\", cy ).text( ang )\n      .attr(\"transform\",rotate).attr(\"text-anchor\",\"middle\")\n      .attr(\"dy\",\".35em\") # .textUtilline(\"middle\")\n      .attr(\"font-size\",\"12pt\").attr(\"font-family\",\"Arial\")\n    return\n\n  wedge:( fill, g, r1, r2, a1, a2 ) =>\n    arc = @d3.arc().innerRadius(r1).outerRadius(r2).startAngle(@radD3(a1)).endAngle(@radD3(a2))\n    g.append(\"svg:path\").attr(\"d\",arc).attr(\"fill\",fill).attr(\"stroke\",\"none\")\n     .attr(\"transform\", \"translate(#{@x0},#{@y0})\")\n    return\n\n  # Background wedges to indicate technology quadrants\n  wedges:( quadrants, r1, r2 ) =>\n    wedge = @d3.arc()\n      .innerRadius(r1)\n      .outerRadius(r2)\n      .startAngle( (d) => @radD3(d.beg) )\n      .endAngle(   (d) => @radD3(d.end) )\n    @g.selectAll(\"path\")\n      .data(quadrants)\n      .enter()\n      .append(\"svg:path\")\n      .attr(\"d\",wedge)\n      .attr(\"transform\", \"translate(#{@x0},#{@y0})\")\n      .attr(\"fill\",(d) => d.color )\n      .attr(\"stroke\",\"none\")\n    return\n\n  symType:( tech ) =>\n    if( tech.changed? && tech.changed=='+' ) then \"triangle-up\" else \"circle\"\n   \n  # Plot tech points as either dots or triangles and add drag behavior. Add tech title tool tip\n  pts:( techs ) =>\n    g = @g.selectAll(\"g\").data(techs).enter().append(\"svg:g\")\n\n    dot = g.append(\"svg:circle\")\n      .attr(\"id\",           (tech) => @techId(tech) )\n      .attr(\"class\", \"dot\" )\n      .attr(\"cx\",    (tech) => @x(tech) )\n      .attr(\"cy\",    (tech) => @y(tech) )\n      .attr(\"title\", (tech) => @techTitle(tech) )\n      .attr(\"r\", 6 ).attr(\"fill\",\"orange\") # .attr(\"fill\", (d) => if d.fix then \"yellow\" else \"blue\" )\n      .attr(\"stroke\",\"orange\").attr(\"stroke-width\",1)\n\n    dot.call( (tech) => tech.dot = dot )\n    \n    g.append(\"svg:text\")\n      .text(               (tech) => ( if(tech.i) then tech.i+' ' else '' ) + tech.name )\n      .attr(\"id\",          (tech) => @techTx(tech) )\n      .attr(\"text-anchor\", (tech) => if @leftQuads(tech) then \"end\"       else \"start\" )\n      .attr(\"x\",           (tech) => if @leftQuads(tech) then @x(tech)-10 else @x(tech)+10 )\n      .attr(\"y\",           (tech) => @y(tech) )\n      .attr(\"dy\",\".35em\").attr(\"font-family\",\"Roboto\")\n      .attr(\"font-size\",\"10px\").attr( \"stroke\", \"wheat\")\n    return\n\n  # Start drag by setting fill yellow\n  doDragBeg:( tech ) ->\n    #d3.select(tech.dot).attr(\"fill\",\"yellow\")\n    @d3.select(\"circle#\"+@techId(tech)).attr(\"fill\",\"yellow\")\n    # Util.log(\"beg\", @techTitle(tech) ); # d3.select(circle).attr(\"fill\",\"yellow\")\n    return\n\n  # Respond to mouse drag by updating the tech grade angle and status\n  doDrag:( tech ) ->\n    if not @d3.event? then return\n    x   = @d3.event.x-@x0\n    y   = @y0-@d3.event.y # Reverse sign of y\n    tech.angle = @angle( x, y )\n    tech.grade = @grade( x, y )\n    window.status = @techTitle(tech)\n    @d3.select('circle#'+@techId(tech)).attr(\"cx\",@x(tech)).attr(\"cy\",@y(tech))\n    return\n\n  # End drag by setting fill blue\n  doDragEnd:( tech ) ->\n    @d3.select(\"circle#\"+@techId(tech)).attr(\"fill\",\"blue\").attr(\"title\", @techTitle(tech) )\n    @d3.select(  \"text#\"+@techTx(tech))\n       .attr(\"x\", (tech) => if @leftQuads(tech) then @x(tech)-10 else @x(tech)+10 )\n       .attr(\"y\", (tech) => @y(tech) )\n    return\n\n  leftQuads:(tech) ->  90 <= tech.angle and tech.angle < 270\n\n  # Convert degress to radians and make angle counter clockwise\n  rad:(    deg ) ->  (360-deg) * Math.PI / 180.0\n  degSVG:( deg ) ->   360-deg\n  radD3:(  deg ) ->  (450-deg) * Math.PI / 180.0\n  degD3:(  rad ) ->      -rad  * 180.0   / Math.PI\n\n  # Calculate x y coordinates for plotting points from the tech grade and angle\n  x:( tech ) -> @x0 + @r(tech) * Math.cos(@rad(tech.angle))\n  y:( tech ) -> @y0 + @r(tech) * Math.sin(@rad(tech.angle))\n\n  # Calculate radius for plotting points from the tech grade\n  r:( tech ) ->\n    g = tech.grade\n    if g > 90 then (100-g) / 10.0*@r40 else @r40+(90-g)/30.0*@r60\n\n  # Calculate tech angle from xy pixel/mouse coordinates\n  angle:( x, y ) ->\n    ang = Math.atan2(y,x) * 180.0 / Math.PI\n    ang = if ang < 0 then 360+ang else ang\n    Math.round(ang)\n\n  # Calculate tech grade radius from xy pixel/mouse coordinates\n  grade:( x, y ) ->\n    r  = Math.sqrt(x*x+y*y)\n    r = if r < @r40 then 100-r*10/@r40 else 90 + (@r40-r)*30.0/@r60\n    Math.round(r)\n\n  # Create a string of tech data for tool tips and status\n  techTitle:( tech ) ->\n    tech.name+ \" \" + Math.round(tech.grade) + \"% \" + Math.round(tech.angle) + \" Deg  \" + tech.title\n\n  # Replace any CSS selection character with_ to create selectable ids\n  techId:( tech ) ->\n    ptn = /[ .#>:~\\^\\=\\+\\*\\(\\)\\[\\]]/g\n    \"_\"+tech.name.replace( ptn, '_' )\n\n  techTx:( tech ) -> @techId(tech) + \"_tx\"\n\n  angleQuad:( ang ) ->\n    if Vis.within(0,ang,180) then -ang+90 else -ang-90\n\n  quadLine:( x1, y1, x2, y2, stroke ) ->\n    @g.append(\"svg:line\")\n    .attr(\"x1\",x1+@x0 ).attr(\"y1\",y1+@y0 ).attr(\"x2\",x2+@x0 ).attr(\"y2\",y2+@y0 )\n    .attr(\"stroke\",stroke).attr(\"stroke-width\",\"1\")\n    return\n\n  noop:() ->\n    if @degName   is false and @prompt is false  and @symType   is false then {}\n    if @doDragBeg is false and @doDrag is false  and @doDragEnd is false then {}\n    if @degSVG    is false and @degD3  is false  then {}\n\nexport default Radar\n"
  ]
}