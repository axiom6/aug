{
  "version": 3,
  "file": "Chord.js",
  "sourceRoot": "../../../src/augm/show",
  "sources": [
    "Chord.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\nclass Chord\n\n  constructor:( @svgMgr ) ->\n    @d3  = @svgMgr.d3\n    @svg = @svgMgr.svg\n    @g   = @svgMgr.g\n    @matrix = [\n      [ 0,20,20,20],\n      [20, 0,20,80],\n      [20,20, 0,20],\n      [20,80,20, 0]]\n    @range  = [\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#888888\"]\n    @ready()\n\n  ready:() =>\n    @graph  = @svgMgr.g\n    @width  = @svgMgr.size.w\n    @height = @svgMgr.size.h\n    @outer  = Math.min( @width, @height) * 0.5 - 40\n    @inner  = @outer - 30\n    @format = @d3.formatPrefix(\",.0\", 1e3)\n    @chord  = @createChord()\n    @arc    = @createArc(    @inner, @outer )\n    @ribbon = @createRibbon( @inner )\n    @color  = @createColor(  @range )\n    @g.datum( @chord(@matrix) )\n    @g.attr(\"transform\", \"translate(\" + @width / 2 + \",\" + @height / 2 + \")\")\n    @group  = @createGroup( @arc   )\n    @ticks  = @createTicks( @group, @outer )\n    @appendRibbons( @g, @ribbon )\n    return\n\n  createChord:() ->\n    @d3.chord().padAngle(0.05).sortSubgroups(@d3.descending)\n\n  createArc:( inner, outer ) ->\n    @d3.arc().innerRadius(inner).outerRadius(outer)\n\n  createRibbon:( inner ) ->\n    @d3.ribbon().radius(inner)\n\n  createColor:( range ) ->\n    @d3.scaleOrdinal().domain( @d3.range(4) ).range(range)\n\n  createGroup:( arc ) ->\n\n    group = @g.append(\"g\")\n      .attr(\"class\", \"groups\")\n      .selectAll(\"g\")\n      .data( (d) => d.groups )\n      .enter().append(\"g\")\n\n    group.append(\"path\")\n      .style(\"fill\",   (d) => @color(d.index) )\n      .style(\"stroke\", (d) => @d3.rgb( @color(d.index)).darker() )\n      .attr(\"d\", arc )\n\n  createTicks:( group, outer ) ->\n\n    ticks = group.selectAll(\".group-tick\")\n      .data(  (d) => @groupTicks( d, 1e3 ) )\n      .enter().append(\"g\")\n      .attr(\"class\", \"group-tick\")\n      .attr(\"transform\", (d) => \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \") translate(\" + outer + \",0)\" )\n\n    ticks.append(\"line\").attr(\"x2\", 6 )\n\n    ticks\n      .filter(              (d) -> d.value % 5e3 is 0 ).append(\"text\").attr(\"x\", 8).attr(\"dy\", \".35em\")\n      .attr(\"transform\",    (d) -> ( if d.angle > Math.PI then \"rotate(180) translate(-16)\" else null ) )\n      .style(\"text-anchor\", (d) -> ( if d.angle > Math.PI then \"end\" else null ) )\n      .text( (d) => @format(d.value) )\n\n    ticks\n\n  appendRibbons:( g, ribbon ) ->\n    g.append(\"g\")\n      .attr(\"class\", \"ribbons\")\n      .selectAll(\"path\")\n      .data( (chords) -> chords )\n      .enter().append(\"path\")\n      .attr(\"d\", ribbon )\n      .style(\"fill\",   (d) => @color(d.target.index) )\n      .style(\"stroke\", (d) => @d3.rgb( @color(d.target.index)).darker() )\n\n  # Returns an array of tick angles and values for a given group and step.\n  groupTicks:( d, step ) ->\n    k = ( d.endAngle - d.startAngle) / d.value\n    @d3.range( 0, d.value, step).map( (value) -> { value: value, angle: value * k + d.startAngle } )\n\n  ###\n\n  xcreateFill:(  range  ) ->\n    d3.scaleOrdinal().domain( d3.range(4) ).range( range )\n\n  xcreateGroups:() =>\n    groups = @g.append(\"g\").selectAll(\"path\").data( (d) => d.groups ).enter().append(\"path\") #\n      .style(\"fill\",   (d) => @fill( d.index ) )\n      .style(\"stroke\", (d) => @fill( d.index ) )\n    groups.attr( \"d\", d3.arc().innerRadius(@inner).outerRadius(@outer) )\n    groups.on( \"mouseover\", @fade(.1) ).on( \"mouseout\", @fade(1) )\n    groups\n\n  xupdateChords:() ->\n    chords = @g.append(\"g\").attr(\"class\", \"chord\").selectAll(\"path\").datam( @chords(@matrix) ).enter().append(\"path\")\n      .attr(  \"d\", d3.chord().radius(@inner))\n      .style( \"fill\", (d) => @fill( d.target.index ) )\n      .style( \"opacity\", 1 )\n    chords\n\n  # Returns an array of tick angles and labels, given a group.\n  xcreateTicks:() ->\n    ticks =  @g.append(\"g\").selectAll(\"g\").data( @chord.groups )\n    ticks.enter().append(\"g\").selectAll(\"g\").data( @groupTicks   )\n    #ticks.enter().append(\"g\").attr(\"transform\", (d) => \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \")\" + \"translate(\" + @outer + \",0)\" )\n    ticks.append(\"line\").attr(\"x1\", 1).attr(\"y1\", 0).attr(\"x2\", 5).attr(\"y2\", 0).style( \"stroke\", \"#000\" )\n    ticks.append(\"text\").attr(\"x\",  8).attr(\"dy\", \".35em\")\n     .attr( \"transform\", (d) -> ( if d.angle > Math.PI then \"rotate(180)translate(-16)\" else null ) )\n    ticks.style(\"text-anchor\", (d) => ( if d.angle > Math.PI then \"end\" else null) )\n    ticks.text( (d) => d.label )\n    ticks\n\n  xgroupTicks: (d) ->\n    k = (d.endAngle - d.startAngle) / d.value\n    range = d3.range(0, d.value, 1000).map( (v,i) => { angle: v * k + d.startAngle, label: (if i % 5 then null else v / 1000 + \"k\") } )\n    #console.log( 'groupTicks', d, k )\n    range\n\n  # Returns an event handler for fading a given chord group.\n  xfade: (opacity) =>\n    (i) =>\n        @g.selectAll(\".chord path\").filter( (d) =>\n          d.source.index isnt i and d.target.index isnt i ).transition().style( \"opacity\", opacity )\n\n  ###\n\n\nexport default Chord\n\n"
  ]
}