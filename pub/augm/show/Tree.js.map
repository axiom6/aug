{
  "version": 3,
  "file": "Tree.js",
  "sourceRoot": "../../../src/augm/show",
  "sources": [
    "Tree.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Vis    from '../../../lib/pub/draw/Vis.js'\n\nclass Tree\n\n  constructor:( @svgMgr, @mix ) ->\n    @d3  = @svgMgr.d3\n    @svg = @svgMgr.svg\n    @g   = @svgMgr.g\n    @arrange='Radial'\n    @ready()\n\n  ready:() ->\n    @graph  = @svgMgr.svg\n    @w      = @svgMgr.size.w\n    @h      = @svgMgr.size.h\n    @r      = Math.min(@w/2,@h/2)*0.9\n    @tree   = @treeArrange( @arrange )\n    @tree.size([@r,@r]) # size([@w,@h])\n    @tree.separation( (a,b) => ( if a.parent is b.parent then 5 else 10 ) / a.depth )\n    @g.attr(\"transform\", \"translate(\" + @w*0.5 + \",\" + @h*0.5 + \")\")\n    # Access.asyncJSON( 'draw/Prin.json', (data) => @doRadial(data,@g) )\n    @doRadial( @mix.data('Tree'), @g )\n\n  treeArrange:( arrange ) ->\n    switch arrange\n      when 'Tree'    then @d3.tree()\n      when 'Radial'  then @d3.tree()\n      when 'cluster' then @d3.cluster()\n      else                @d3.tree()\n\n  doRadial:( data, g ) =>\n    root = @d3.hierarchy( data )\n    @tree( root )\n    link = @doLinks( root, g )\n    node = @doNodes( root, g )\n    #node.append(\"svg:circle\").attr(\"r\",4.5)\n    #iconNode( node ) # Clutters up overview\n    @textNode( node )\n    Util.noop( link )\n    return\n\n  doLinks:( root, g ) =>\n    g.selectAll(\".link\")\n      .data(root.descendants().slice(1))\n      .enter().append(\"svg:path\")\n      .attr(\"class\",\"link\")\n      .attr(\"stroke\", 'blue' )\n      .attr(\"fill\",   \"none\"   )\n      .attr(\"d\", (d) => @moveTo(d) )\n\n  doNodes:( root, g ) =>\n    g.selectAll(\"g.node\")\n      .data(root.descendants())\n      .enter().append(\"svg:g\")\n      .attr(\"class\",     (d) => @nodeClass(d) )\n      .attr(\"transform\", (d) => \"translate(\" + @project(d.x,d.y) + \")\" )\n\n  moveTo:(d) =>\n    p = d.parent\n    \"\"\"M#{@project(d.x,d.y)}C#{@project(d.x,(d.y+p.y)/2)} #{@project(p.x,(d.y+p.y)/2)} #{@project(p.x,p.y)}\"\"\"\n\n  project:( x, y ) =>\n    angle  = (x - 90) / 180 * Math.PI\n    radius =  y\n    [radius * Math.cos(angle), radius * Math.sin(angle)]\n\n  nodeClass:( d ) =>\n    if d.children? then \"node--internal\" else \"node--leaf\"\n\n  iconNode:( node ) =>\n    node.append(\"svg:text\")\n      .attr(\"dy\", 4 )\n      .attr(\"stroke\", 'wheat')\n      .attr(\"font-size\",\"1.4em\")\n      .attr(\"font-family\",\"FontAwesome\")\n      .attr(\"text-anchor\",\"middle\")\n      .text( (d) => @iconUnicode(d) )\n    return\n\n  textNode:( node ) =>\n    node.append(\"svg:text\")\n      .attr(\"dy\", \".31em\" )\n      .attr(\"y\", 2 )\n      .attr(\"x\",           (d) => if @isEnd180(d) then 6     else -6 )\n      .attr(\"text-anchor\", (d) => if @isEnd180(d) then \"end\" else \"start\" )\n      .attr(\"transform\",   (d) => \"rotate(\" + (if d.x < 180 then d.x-90 else d.x+90) + \")\" )\n      .attr(\"stroke\", 'wheat')\n#attr(\"font-size\",\"1.0em\")\n      .attr(\"font-family\",\"Roboto\")\n      .text( (d) -> d.data.name )\n    return\n\n  isEnd180:( d ) => d.x > 180\n\n  isEnd:(    d ) => not ( d.children? and d.children.length > 0 )\n\n  iconUnicode:( d ) =>\n    icon = if d.data.icon? then d.data.icon else 'fas fa-circle'\n    Vis.unicode( icon )\n\nexport default Tree\n"
  ]
}