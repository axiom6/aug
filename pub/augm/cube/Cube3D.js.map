{
  "version": 3,
  "file": "Cube3D.js",
  "sourceRoot": "../../../src/augm/cube",
  "sources": [
    "Cube3D.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\nimport Vis        from '../../../lib/pub/draw/Vis.js'\nimport * as THREE from 'three'\n\nclass Cube3D\n\n  constructor:( @plane, @row, @col, @title, @xyz, @whd, @hsv, @opacity, @font ) ->\n    box = new THREE.BoxBufferGeometry()\n    box.name = @title\n    Cube3D.matrix.makeScale(       @whd[0], @whd[1], @whd[2] )\n    box.applyMatrix( Cube3D.matrix )\n    Cube3D.matrix.makeTranslation( @xyz[0], @xyz[1], @xyz[2] )\n    box.applyMatrix( Cube3D.matrix )\n    hex = Vis.hex(  @hsv )\n    col = new THREE.Color( hex )                    # blemding:THREE\n    mat = new THREE.MeshPhongMaterial( { color:col, opacity:@opacity, transparent:true, side:THREE.BackSide } )\n    @mesh = new THREE.Mesh( box, mat )\n    @mesh.name  = @title\n    @mesh.geom  = \"Cube\"\n    @mesh.plane = @plane\n    @mesh.row   = @row\n    @mesh.col   = @col\n\n    obj  = { font:@font, size:12, height:6, curveSegments:2 }\n    name = if @plane is 'Cols' then \"\" else @title\n    text = new THREE.TextBufferGeometry( name, obj )\n    text.computeBoundingBox()\n    face = new THREE.MeshBasicMaterial( { color: 0xffffff } )\n    side = new THREE.MeshBasicMaterial( { color: 0xffffff } )\n\n    mats = [face,side]\n    dx   = 0.5 * ( text.boundingBox.max.x - text.boundingBox.min.x )\n    dy   = 0.5 * ( text.boundingBox.max.y - text.boundingBox.min.y )\n    Cube3D.matrix.makeTranslation( @xyz[0]-dx, @xyz[1]-dy, @xyz[2]   )\n    text.applyMatrix( Cube3D.matrix )\n    @tmesh       = new THREE.Mesh( text, mats )\n    @tmesh.name  = @title\n    @tmesh.geom  = \"Text\"\n    @tmesh.plane = @plane\n    @tmesh.row   = @row\n    @tmesh.col   = @col\n    @mesh.add( @tmesh )\n\n  colorRgb:( rgb ) ->\n    \"rgb(#{Math.round(rgb[0]*255)}, #{Math.round(rgb[1]*255)}, #{Math.round(rgb[2]*255)})\"\n\n#mat = new THREE.MeshPhongMaterial( { color:col, opacity:@opacity, transparent:true, side:THREE.BackSide, blemding:THREE.AdditiveBlending } )\n#mat = new THREE.MeshBasicMaterial( { color:col, opacity:@opacity, transparent:true } ) # blemding:THREE.AdditiveBlending\n\nCube3D.matrix = new THREE.Matrix4()\n\nexport default Cube3D\n"
  ]
}