{
  "version": 3,
  "file": "Memory.js",
  "sourceRoot": "../../src/data",
  "sources": [
    "Memory.coffee"
  ],
  "names": [],
  "mappings": "AAAA,IAAA,MAAA,EAAA,SAAA;EAAA;;AAAA,OAAO,KAAP,MAAA;;AAEA,SAAA,GAAY,QAAA,CAAA,CAAA;EACV,OAAO,CAAC,KAAR,CAAe,oBAAf;AADU;;AAIZ,SAAA,CAAA;;AAEM,SAAN,MAAA,OAAA,QAAqB,MAArB;EAEE,WAAY,CAAE,MAAF,EAAU,MAAV,CAAA;SACV,CAAY,MAAZ,EAAoB,MAApB;IACA,IAAC,CAAA,MAAD,GAAU,CAAA;EAFA;;EAIZ,KAAM,CAAE,EAAF,CAAA;IACJ,IAAG,uBAAH;aACG,IAAC,CAAA,MAAM,CAAC,EAAD,EADV;KAAA,MAAA;MAGG,IAAC,CAAA,SAAD,CAAW,EAAX;MACA,IAAC,CAAA,MAAM,CAAC,EAAD,CAAP,GAAc,CAAA;aACd,IAAC,CAAA,MAAM,CAAC,EAAD,EALV;;EADI;;EAQN,GAAI,CAAE,EAAF,EAAM,EAAN,EAAU,GAAV,CAAA;IAEF,IAAC,CAAA,KAAD,CAAO,EAAP,CAAU,CAAC,EAAD,CAAV,GAAiB;IACjB,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,KAAd,EAAqB,GAArB;EAHE;;EAMJ,GAAI,CAAE,EAAF,EAAM,EAAN,EAAU,WAAS,IAAnB,CAAA;AACN,QAAA;IAAI,GAAA,GAAS,0BAAH,GAAwB,IAAC,CAAA,KAAD,CAAO,EAAP,CAAU,CAAC,EAAD,CAAlC,GAA4C,CAAA;IAClD,IAAG,WAAH;MACE,IAAG,gBAAH;QACG,QAAA,CAAU,GAAV,EADH;OAAA,MAAA;QAGG,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,KAAd,EAAqB,GAArB,EAHH;OADF;KAAA,MAAA;MAME,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,KAAd,EAAqB;QAAE,KAAA,EAAM;MAAR,CAArB,EAAyD,EAAzD,EANF;;EAFE;;EAWJ,GAAI,CAAE,EAAF,EAAM,EAAN,EAAW,GAAX,CAAA;IACF,IAAC,CAAA,KAAD,CAAO,EAAP,CAAU,CAAC,EAAD,CAAV,GAAiB;IACjB,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,KAAd,EAAqB,GAArB;EAFE;;EAKJ,GAAI,CAAE,EAAF,EAAM,EAAN,CAAA;AACN,QAAA;IAAI,GAAA,GAAO,IAAC,CAAA,KAAD,CAAO,EAAP,CAAU,CAAC,EAAD;IACjB,IAAG,WAAH;MACE,OAAO,IAAC,CAAA,KAAD,CAAO,EAAP,CAAU,CAAC,EAAD;MACjB,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,KAAd,EAAqB,GAArB,EAFF;KAAA,MAAA;MAIE,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,KAAd,EAAqB;QAAE,KAAA,EAAM;MAAR,CAArB,EAAyD,EAAzD,EAJF;;EAFE;;EASJ,MAAO,CAAE,EAAF,EAAM,IAAN,CAAA;AACT,QAAA,GAAA,EAAA,GAAA,EAAA;IAAI,KAAA,GAAQ,IAAC,CAAA,KAAD,CAAO,EAAP;IACR,KAAA,WAAA;;;MACE,KAAK,CAAC,GAAD,CAAL,GAAa;IADf;IAEA,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,QAAd,EAAwB,IAAxB;EAJK;;EAOP,MAAO,CAAE,EAAF,EAAM,KAAN,EAAa,WAAS,IAAtB,CAAA;AACT,QAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA;IAAI,KAAA,GAAQ,IAAC,CAAA,KAAD,CAAO,EAAP;IACR,IAAA,GAAQ,CAAA;IACR,KAAA,YAAA;;UAA2B,KAAA,CAAM,GAAN;QACzB,IAAI,CAAC,GAAD,CAAJ,GAAY;;IADd;IAEA,IAAG,gBAAH;MACG,QAAA,CAAU,IAAV,EADH;KAAA,MAAA;MAGG,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,QAAd,EAAwB,IAAxB,EAHH;;EALK;;EAWP,MAAO,CAAE,EAAF,EAAM,IAAN,CAAA;AACT,QAAA,GAAA,EAAA,GAAA,EAAA;IAAI,KAAA,GAAQ,IAAC,CAAA,KAAD,CAAO,EAAP;IACR,KAAA,WAAA;;;MACE,KAAK,CAAC,GAAD,CAAL,GAAa;IADf;IAEA,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,QAAd,EAAwB,IAAxB;EAJK;;EAOP,MAAO,CAAE,EAAF,EAAM,KAAN,EAAa,KAAG,QAAhB,CAAA;AACT,QAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA;IAAI,KAAA,GAAQ,IAAC,CAAA,KAAD,CAAO,EAAP;IACR,IAAA,GAAQ,CAAA;IACR,KAAA,YAAA;;;YAAgC,KAAA,CAAM,GAAN;;;MAC9B,IAAI,CAAC,GAAD,CAAJ,GAAY;MACZ,OAAO,KAAK,CAAC,GAAD;IAFd;IAGA,IAAC,CAAA,OAAD,CAAU,EAAV,EAAc,EAAd,EAAkB,IAAlB;EANK;;EASP,IAAK,CAAA,CAAA;IACH,IAAC,CAAA,UAAD,CAAA;EADG;;EAIL,IAAK,CAAE,KAAF,CAAA;IACH,IAAC,CAAA,SAAD,CAAY,KAAZ;EADG;;EAIL,IAAK,CAAE,KAAF,CAAA;IACH,IAAC,CAAA,SAAD,CAAY,KAAZ;EADG;;AAvFP;;AA2FA,OAAA,QAAe",
  "sourcesContent": [
    "import Store  from './Store.js'\n\nsomething = () ->\n  console.error( 'Memory.something()')\n  return\n\nsomething()\n\nclass Memory extends Store\n\n  constructor:( stream, dbName ) ->\n    super(      stream, dbName )\n    @memory = {}\n\n  table:( tn ) ->\n    if @memory[tn]?\n       @memory[tn]\n    else\n       @openTable(tn)\n       @memory[tn] = {}\n       @memory[tn]\n\n  add:( tn, id, obj ) ->\n\n    @table(tn)[id] = obj\n    @results( tn, 'add', obj )\n    return\n\n  get:( tn, id, callback=null ) ->\n    obj = if @table(tn)[id]? then @table(tn)[id] else {}\n    if obj?\n      if callback?\n         callback( obj )\n      else\n         @results( tn, 'get', obj )\n    else\n      @onerror( tn, 'get', { error:'Memory object not found'}, id )\n    return\n\n  put:( tn, id,  obj ) ->\n    @table(tn)[id] = obj\n    @results( tn, 'put', obj )\n    return\n\n  del:( tn, id ) ->\n    obj  = @table(tn)[id]\n    if obj?\n      delete @table(tn)[id]\n      @results( tn, 'del', obj )\n    else\n      @onerror( tn, 'get', { error:'Memory object not found'}, id )\n    return\n\n  insert:( tn, objs ) ->\n    table = @table(tn)\n    for own key, obj of objs\n      table[key] = obj\n    @results( tn, 'insert', objs )\n    return\n\n  select:( tn, where, callback=null ) ->\n    table = @table(tn)\n    objs  = {}\n    for key, obj of table when where(obj)\n      objs[key] = obj\n    if callback?\n       callback( objs )\n    else\n       @results( tn, 'select', objs )\n    return\n\n  update:( tn, objs ) ->\n    table = @table(tn)\n    for own key,   obj of objs\n      table[key] = obj\n    @results( tn, 'update', objs )\n    return\n\n  remove:( tn, where, op='remove' ) ->\n    table = @table(tn)\n    objs  = {}\n    for own key,  obj of table when where(obj)\n      objs[key] = obj\n      delete table[key]\n    @results( tn, op, objs )\n    return\n\n  show:() ->\n    @showTables()\n    return\n\n  open:( table ) ->\n    @openTable( table )\n    return\n\n  drop:( table ) ->\n    @dropTable( table )\n    return\n\nexport default Memory\n"
  ]
}