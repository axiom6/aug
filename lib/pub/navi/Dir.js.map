{
  "version": 3,
  "file": "Dir.js",
  "sourceRoot": "../../src/navi",
  "sources": [
    "Dir.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nclass Dir\n\n  constructor:( @nav ) ->\n    @navs  = @nav.navs\n    @build = @nav.build\n    @keyEvents()\n\n  keyEvents:() ->\n    keyDir = (event) =>\n      switch event.key\n        when 'ArrowRight' then @dir( 'east',  event )\n        when 'ArrowLeft'  then @dir( 'west',  event )\n        when 'ArrowDown'  then @dir( 'south', event )\n        when 'ArrowUp'    then @dir( 'north', event )\n        when '+'          then @dir( 'next',  event )\n        when '-'          then @dir( 'prev',  event )\n    document.addEventListener('keydown', (event) => keyDir(event) )\n    return\n\n  dir:( direct ) =>\n    @source = direct\n    if @nav.mix.isApp('Muse')\n      switch @route\n        when 'Comp' then @dirComp( direct )\n        when 'Prac' then @dirPrac( direct )\n        when 'Disp' then @dirDisp( direct )\n        else             @dirComp( direct )\n    else\n      @dirComp( direct )\n    return\n\n  dirComp:( dir ) ->\n    msg = {}\n    msg.source = \"#{'Nav.dirComp'}(#{dir})\"\n    if @nav.hasCompKey( @compKey, dir )\n      msg.compKey = @adjCompKey( @compKey,dir )\n      @pub( msg )\n    else if @hasActivePageDir( @route, dir )\n      @dirPage( dir )\n    else\n      @log( msg, warnMsg:\"Missing adjacent component for #{dir} #{@compKey}\" )\n    return\n\n  dirPrac:( dir ) ->\n    msg = {}\n    msg.source = \"#{'Nav.dirPrac'}(#{dir})\"\n    msg.compKey = @compKey\n    adj = @adjPracObj( dir )\n    if adj.name isnt 'None'\n      if adj.name  isnt @nav.pracKey\n        msg.pracKey = adj.name\n      if adj.plane isnt @nav.compKey\n        msg.compKey = adj.plane\n      @pub( msg )\n    else\n      @log( msg, \"Missing adjacent practice for #{dir} #{@nav.compKey} #{@nav.pracKey}\" )\n    return\n\n  dirDisp:( dir ) ->\n    msg = {}\n    msg.source = \"#{'Nav.dirDisp'}(#{dir})\"\n    prc = @nav.pracs(@compKey)[@pracKey]\n    dis = prc[@dispKey]\n    adj = @adjPracObj(dir)\n    ddr = dis.dir\n    dis = @nav.getDispObj( adj, ddr )\n    if adj.name isnt 'None'\n      msg.compKey  = adj.plane\n      msg.pracKey  = adj.name\n      msg.dispKey  = dis.name\n      @pub( msg )\n    else\n      @log( msg, \"Missing adjacent displine for #{dir} #{@nav.compKey} #{@nav.pracKey}\" )\n    return\n\n  prevKey:( key, keys ) ->\n    kidx = keys.indexOf(key)\n    pidx = kidx - 1\n    pidx = keys.length - 1 if pidx is -1\n    keys[pidx]\n\n  nextKey:( key, keys ) ->\n    kidx = keys.indexOf(key)\n    nidx = kidx + 1\n    nidx = 0 if nidx is keys.length\n    keys[nidx]\n\n  # Special case\n  nextPage:( key, keys, peys ) ->\n    if key isnt keys[keys.length-1]\n      @nextKey( key, keys )\n    else\n      @dispKey = @nextKey( @dispKey, peys )\n      'None'\n\n  dirPage:( dir ) ->\n    msg = {}\n    msg.source = \"#{'Nav.dirPage'}(#{dir})\"\n    pageKey = if @hasTabs(@route) then @movePage(@nav.pages[@route],dir) else 'None'\n    if pageKey isnt 'None'\n      @nav.setPageKey( @route, pageKey )\n  # @pub( msg )\n    else\n      @log( msg, warnMsg:\"Cannot find pageKey for #{dir}\" )\n    return\n\n  # Need to int page.keys = Object.keys(pages)\n  movePage:( page, dir  ) ->\n    pageKey  = @getPageKey( @nav.compKey )\n    len      = page.keys.length\n    if pageKey isnt 'None'\n      idx = page.keys.indexOf(pageKey)\n      ndx = @range(idx+1,len) if dir is 'east'\n      ndx = @range(idx-1,len) if dir is 'west'\n      pageKey = page.keys[ndx]\n    else\n      pageKey = if dir is 'east' then page.keys[0] else page.keys[len-1]\n    pageKey\n\n  range:( idx, len ) ->\n    ndx = idx\n    ndx = 0     if ndx >= len\n    ndx = len-1 if ndx <  0\n    ndx\n\n  tap:() =>\n    console.log( 'Nav.tap()' )\n    return\n\n  hasCompKey:( compKey, dir=null ) ->\n    has = compKey? and @navs? and @nav.navs[compKey]?\n    if dir? and has then @navs[compKey][dir]? else has\n\n  adjCompKey:(      compKey, dir ) ->\n    if @hasCompKey( compKey, dir ) an @navs? then  @navs[compKey][dir] else 'None'\n\n  adjPracObj:( dir ) ->\n    pracObj = @nav.pracs(@compKey)[@pracKey]\n    adjcObj = @build.adjacentPractice(pracObj,dir)\n    adjcObj\n\n  getDispObj:( pracObj, dirDisp ) ->\n    dispObj = @build.getDir( pracObj, dirDisp )\n    dispObj\n\n\nexport default Dir"
  ]
}