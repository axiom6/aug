{
  "version": 3,
  "file": "Initial.js",
  "sourceRoot": "../../src/test",
  "sources": [
    "Initial.coffee"
  ],
  "names": [],
  "mappings": "AACA,IAAA,OAAA;EAAA;;AAAA,OAAA;EAAS,MAAT;CAAA,MAAA;;AAEA,OAAO,MAAP,MAAA;;AAIM;;EAAN,MAAA,QAAA;IAKkB,OAAR,KAAQ,CAAC,IAAD,CAAA;MACd,OAAO,CAAC,GAAR,CAAa,iBAAb,EAAgC,IAAhC;MACA,OAAO,CAAC,IAAR,GAAe;MACf,OAAO,CAAC,IAAR,CAAA;IAHc;;IAMC,OAAT,IAAS,CAAA,CAAA;AACnB,UAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,KAAA,EAAA,SAAA,EAAA;MAAI,QAAA,GAAkB,CAAC,KAAD,EAAO,MAAP;MAClB,SAAA,GAAkB;QAAE,SAAA,EAAU,KAAZ;QAAmB,OAAA,EAAQ,KAA3B;QAAkC,QAAA,EAAS;MAA3C;MAClB,OAAO,CAAC,MAAR,GAAkB,IAAI,MAAJ,CAAY,QAAZ,EAAsB,SAAtB,EAFtB;;MAKI,MAAM,CAAC,UAAP,CAAmB;QAAE,OAAA,EAAQ,IAAV;QAAgB,OAAA,EAAQ,IAAxB;QAA8B,OAAA,EAAQ,KAAtC;QAA6C,KAAA,EAAM;MAAnD,CAAnB;MACA,MAAM,CAAC,YAAP,CAAqB,OAAO,CAAC,MAA7B;MACA,QAAA,GAAW,MAAM,CAAC,KAAP,CAAa,eAAb;MACX,IAAG,QAAH;QACE,UAAA,GAAa;QACb,OAAO,CAAC,kBAAR,CAA4B,UAA5B;QACA,UAAA,GAAa;QACb,OAAO,CAAC,kBAAR,CAA4B,UAA5B,EAJF;OAAA,MAAA;QAME,KAAA,GAAQ,CAAC,8BAAD,EAAgC,gCAAhC;QACR,MAAM,CAAC,YAAP,CAAqB,KAArB,EAPF;;IATe;;IAqBY,OAArB,kBAAqB,CAAE,OAAF,CAAA;AAC/B,UAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAAA;MAAI,OAAA,GAAU;MACV,IAAkE,IAAC,CAAA,KAAnE;QAAA,OAAO,CAAC,GAAR,CAAa,6BAAb,EAA4C,OAA5C,EAAqD,OAArD,EAAA;;MACA,KAAA,GAAQ;MACR,KAAA,GAAQ,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAoB,CAAC;AAC7B;MAAA,KAAA,eAAA;;;qBACE,OAAO,CAAC,IAAD,CAAP,CAAA,CAAe,CAAC,IAAhB,CAAsB,KAAA,CAAC,QAAD,CAAA,GAAA;UACpB,IAAmC,IAAC,CAAA,KAApC;YAAA,OAAO,CAAC,GAAR,CAAa,IAAb,EAAqB,QAArB,EAAA;;UACA,MAAM;UACN,KAAA;UACA,IAAkC,KAAA,KAAS,KAA3C;YAAA,MAAM,CAAC,GAAP,CAAY,MAAM,CAAC,OAAP,CAAA,CAAZ,EAAA;;QAJoB,CAAtB;MADF,CAAA;;IAL2B;;EAhC/B;;EAEE,OAAO,CAAC,OAAR,GAAkB;;EAClB,OAAO,CAAC,KAAR,GAAkB;;;;;;AA0CpB,OAAA,QAAe",
  "sourcesContent": [
    "\nimport { tester } from './Tester.js'\n\nimport Stream from '../base/util/Stream.js'\n\n# git remote set-url origin 'https://axiom-muse:Axiom66#@github.com/axiom6-muse/viz.git'\n\nclass Initial\n\n  Initial.appName = 'Initial'\n  Initial.debug   = false\n\n  Initial.start = (href) ->\n    console.log( \"Initial.start()\", href )\n    Initial.href = href\n    Initial.init()\n    return\n\n  Initial.init =   () ->\n    subjects        = [\"Nav\",\"Test\"]\n    streamLog       = { subscribe:false, publish:false, subjects:subjects }\n    Initial.stream  = new Stream( subjects, streamLog )\n\n    # Tester exports { test, unit, tester }\n    tester.setOptions( { testing:true, archive:true, verbose:false, debug:false } )\n    tester.injectStream( Initial.stream )\n    inViteJS = tester.isDef(`import.meta.env`)\n    if inViteJS\n      modulesLib = `import.meta.glob(\"/lib/**/*-unit.js\")`\n      Initial.runUnitTestsViteJS( modulesLib )\n      modulesPub = `import.meta.glob(\"/pub/**/*-unit.js\")`\n      Initial.runUnitTestsViteJS( modulesPub )\n    else\n      paths = [\"/lib/pub/test/Tester-unit.js\",\"/lib/pub/base/draw/Vis-unit.js\"]\n      tester.runUnitTests( paths )\n    return\n\n  # This is vite.js dependent with import.meta.glob() and its dynamic await importer\n  # Can't pass glob patterns like \"/pub/xx/x-unit.js\"\n  Initial.runUnitTestsViteJS = ( modules ) ->\n    globPtn = \"/lib/**/*-unit.js\"\n    console.log( \"Tester.runUnitTestsViteJS()\", modules, globPtn ) if @debug\n    count = 0\n    total = Object.keys(modules).length\n    for own path, importer of modules\n      modules[path]().then( (importer) =>\n        console.log( path,   importer ) if @debug\n        await importer\n        count++\n        tester.log( tester.summary() ) if count is total\n        return )\n\nexport default Initial\n"
  ]
}