{
  "version": 3,
  "file": "Mix.js",
  "sourceRoot": "../../../src/base/nav",
  "sources": [
    "Mix.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Util            from '../util/Util.js'\nimport { tester as t } from '../../test/Tester.js'\nimport Vis             from '../../base/draw/Vis.js'\n\nclass Mix\n\n  constructor:( Main ) ->\n    Mix.Main =  Main\n    @debug = false\n\n  # A subset of tester assertions to be remove eventually\n  isDef: (d)         -> t.isDef(d)\n  isString: (s)      -> t.isString(s)\n  isFunction:(f)     -> t.isFunction(f)\n  isArray:(a)        -> t.isArray(a)\n  inArray: (e,a)     -> t.inArray(e,a)\n  inObject:(key,obj) -> t.inObject(key,obj)\n  isChild:(key)      -> t.isChild(key,obj)\n  keys: (obj) ->     -> t.keys(obj)\n  hasElem: (elem)    -> elem? and elem['clientHeight']? and elem['clientHeight'] > 0\n\n  getElem: ($refs, name) ->  # Not called\n    elem = $refs[name]\n    console.log('Mix.getElem() $refs[name]   ', $refs, elem, name)\n    if not @hasElem(elem) and elem[0]?\n      elem = $refs[name][0]\n      console.log('Mix.getElem() $refs[name][0]', $refs, elem, name)\n      if not @hasElem(elem)\n        console.error('Mix.hasElem() unable to find elem in $refs[name]', name)\n        console.dir($refs)\n        elem = null\n    else\n      console.error('Mix.hasElem() unable to find elem in $refs[name][0]', name)\n      elem = null\n    elem\n\n  styleObj: (ikwObj, fontSize = undefined) ->\n    hsv = [30, 90, 90]\n    if   t.isDef(ikwObj)\n      if t.isDef(ikwObj.hsv)\n        hsv = ikwObj.hsv\n      else if t.isDef(ikwObj.dir)\n        hsv = switch ikwObj.dir\n          when 'west'  then [195, 90, 70]\n          when 'north' then [90, 90, 90]\n          when 'east'  then [30, 60, 90]\n          when 'south' then [60, 90, 90]\n          else\n            [30, 90, 90]\n    style = {backgroundColor: Vis.hex(hsv)}\n    style['fontSize'] = fontSize + 'rem' if fontSize\n    style\n\n  toRgbaHsv: (hsv) ->\n    Vis.rgb(hsv)\n\n  # Main\n  app: () ->\n    Mix.Main.appName\n  isApp: ( appName ) ->\n    Mix.Main.appName is appName\n  subscribe: (subject, source, onMethod) ->\n    Mix.Main['stream'].subscribe(subject, source, onMethod)\n    return\n  publish: (subject, object) ->\n    Mix.Main['stream'].publish(subject, object)\n    return\n  stream: () ->\n    Mix.Main.stream\n  batch: () ->\n    Mix.Main.Batch\n  fontSize: (scale) ->  # JavaScript font-size the matches themeFS in theme.less\n    fs = if Mix.Main.fontSize? then Mix.Main.fontSize else 2\n    sc = if scale?               then scale else 1\n    sc * fs + 'vmin'\n  fontSizeCss: (scale) ->\n    {fontSize: @fontSize(scale)}\n\n  # Not working with MatnBox\n  promiseScript:(src) ->\n    new Promise( (resolve) =>\n      scripts    = document.getElementsByTagName('script');\n      for scriptx in scripts\n        # console.log( 'Mix.addScript() scriptx src', scriptx.src )\n        return if scriptx.src.includes(src)\n      # console.log( 'Mix.addScript() adding', src )\n      script = document.createElement('script')\n      document.head.appendChild(script)\n      script.async = false\n      script.defer = false\n      script.src = src\n      resolve )\n\n  # Not working with MatnBox. With CoffeeScript await make addScript() async\n  addScript:( src ) ->\n    await @promiseScript(src)\n    return\n\n  delScript:( src ) ->\n    scripts    = document.getElementsByTagName('script');\n    for  script in scripts\n      if script.src.includes(src)\n        console.log( 'Mix.delScript()', script.src ) if @debug\n        document.head.removeChild(script)\n        return\n    return\n\n  # Nav\n  nav: () ->\n    console.error('Mix.nav() null') if not Mix.Main.nav?\n    Mix.Main.nav\n  touch: () ->\n    console.error('Mix.touch() null') if not Mix.Main.touch?\n    Mix.Main.touch\n  isNav: () ->\n    Mix.Main.nav?\n\n  # Batch\n  isBatch:(compk) ->\n    Mix.Main.Batch[compk]?\n  data:( name ) ->\n    if @isBatch(name)\n      Mix.Main.Batch[name].data\n    else\n      console.error( 'Mix.data() unknown data name', name )\n      {}\n  prin: ()  ->\n    Mix.Main.Batch['Prin'].data.pracs\n  comps: (compk) ->\n    Mix.Main.Batch[compk].data.comps\n  kompsTocs: () ->   # For Tocs.vue\n    Mix.Main.komps\n  subset: (compk, filter) ->\n    filts = {}\n    for own key, prac of @pracs(compk) when filter(prac)\n      filts[key] = prac\n    filts\n  conns: (compk) ->\n    filter = if compk isnt 'Prin' then (prac) -> prac.row isnt 'Dim' else (prac) -> prac.row is 'Dim'\n    @subset(compk, filter)\n  pracs: (compk) ->\n    Mix.Main.Batch[compk].data.pracs\n  disps: (compk, prack) ->\n    Mix.Main.Batch[compk].data[prack].disps\n  areas: (compk, prack, dispk) ->\n    Mix.Main.Batch[compk].data[prack][dispk].areas\n  items: (compk, prack, dispk, areak) ->\n    Mix.Main.Batch[compk].data[prack][dispk][areak].items\n  bases: (compk, prack, dispk, areak, itemk) ->\n    Mix.Main.Batch[compk].data[prack][dispk][areak][itemk].bases\n\n  compObject:( compKey ) ->\n    obj = {}\n    if       Mix.Main.Batch[compKey]?\n       obj = Mix.Main.Batch[compKey].data.pracs\n    else if compKey isnt 'Home' and compKey isnt 'Defs'\n      console.error( 'Mix.compObject() bad compKey', compKey )\n    obj\n\n  inovObject:( compKey, inovKey ) ->\n    pracs = {}\n    if @isBatch(compKey)\n      compPracs = @pracs(compKey)\n      if t.isDef(inovKey) and inovKey isnt compKey and @isBatch(inovKey)\n        inovPracs = @pracs(inovKey)\n        console.log( 'Mix.inovObject() inovPracs', { inovKey:inovKey, inovPracs:inovPracs } ) if @debug\n        for key, prac of compPracs\n          if prac.column is 'Innovate' and prac.row isnt 'Dim'\n            inovPrac = @getPrac(inovPracs,prac.row,prac.column,inovKey)\n            pracs[inovPrac.name] = inovPrac\n          else\n            pracs[key] = prac\n      else\n        pracs = compPracs\n    else if compKey isnt \"Home\" and compKey isnt \"Defs\"\n      console.error('Mix.inovObject() bad compKey or inovKey', { compKey:compKey, inovKey:inovKey } )\n    pracs\n\n  pracObject:( compKey,  inovKey, pracKey ) ->\n    pracs = @inovObject( compKey, inovKey )\n    prac  = {}\n    if pracs[pracKey]?\n      prac = pracs[pracKey]\n    else\n      console.error('Mix.pracObject() unknown pracKey', { compKey:compKey, inovKey:inovKey, pracKey:pracKey, pracs:pracs } )\n    prac\n\n  sectObject: ( pracKey, dispKey  ) ->\n    talkObjs = @compObject('Talk' )\n    talkObj = talkObjs[pracKey]\n    console.log( 'Mix.sectObj()', { talkObj:talkObj, talkKey:pracKey, sectKey:dispKey } ) # , sectObj:sectObj\n    sectObjs = @compObject(talkObj.comp)\n    talkObj.keys = if talkObj.keys?  then talkObj.keys else Util.childKeys(sectObjs)\n    dispKey = if dispKey is 'None' or not @inArray(dispKey,talkObj.keys) then @keys(sectObjs)[0] else dispKey\n    sectObj = sectObjs[dispKey]\n    if not sectObj?\n      console.error( 'Nav.sectObject null', { pracKey:pracKey, dispKey:dispKey } )\n      sectObj = {}\n    sectObj.src = talkObj.src\n    sectObj.name = dispKey\n    sectObj.peys = talkObj.keys\n    sectObj.keys = if sectObj.keys?  then sectObj.keys else Util.childKeys(sectObj)\n    sectObj = Object.assign( {}, sectObj ) if sectObj.imgsIdx isnt @nav().imgsIdx  # Trigger reactive render\n    sectObj.imgsIdx = @nav().imgsIdx\n    sectObj\n\n  presObject:( sectObj, presKey ) ->\n    presKey = if presKey is 'None' and sectObj.keys[0]? then sectObj.keys[0] else presKey\n    pageObj = null\n    if presKey isnt 'None' and sectObj[presKey]?\n      pageObj = sectObj[presKey]\n      pageObj.src = sectObj.src\n      pageObj.name = presKey\n      pageObj.peys = sectObj.keys\n      pageObj.keys = if pageObj.keys?  then pageObj.keys else Util.childKeys(pageObj)\n      console.log( 'Mix.pageObj()', { dispKey:sectObj.name, presKey:presKey, pageObj:pageObj } )\n    pageObj\n\n  dataObject: (sectObj, presKey ) ->\n    dataObj = null\n    if sectObj.type is 'Prac'\n      dataObj = @pracObject( sectObj.src, sectObj.name )\n    else if sectObj.type is 'Disp' and presKey isnt 'None'\n      dataObj = @dispObject(sectObj.src, 'None', sectObj.name, presKey  )\n    dataObj\n\n  dispObject:( compKey, inovKey, pracKey, dispKey ) ->\n    disp = {}\n    pracs = @inovObject( compKey, inovKey )\n    if pracs[pracKey]?\n      prac = pracs[pracKey]\n      if prac[dispKey]?\n        disp = prac[dispKey]\n      else\n        console.error( 'Mix.dispObject() unknown dispKey', { compKey:compKey, inovKey:inovKey, pracKey:pracKey, dispKey:dispKey } )\n    else\n      console.error( 'Mix.dispObject() unknown pracKey',   { compKey:compKey, inovKey:inovKey, pracKey:pracKey, dispKey:dispKey } )\n    disp\n\n  flavorJson: () ->\n    if Mix.Main.Batch['Flavor']?\n       Mix.Main.Batch['Flavor'].data\n    else\n       console.error( 'Mix.flavorJson Flavor.json has not been import into Batch')\n       {}\n\n  getPrac: ( pracs, row, column, inovKey ) ->\n    for key, prac of pracs\n      return prac if prac.row is row and prac.column is column\n    console.error( 'Mix.getPrac() missing prac for', { inovKey:inovKey, row:row, column:column } )\n    {}\n\n  isPageKeyComp: (pageKey) ->\n    pageKey is 'Info' or pageKey is 'Data' # @app() is 'Muse' and\n\n  removeElem:( elem ) ->\n    while t.isDef(elem) and t.isDef(elem.firstChild)\n      elem.removeChild(elem.firstChild)\n    return\n\n  removeElemNextTick:( elem, nextTick ) ->\n    nextTick( () =>\n      @removeElem(elem) )\n    return\n\n\n# Choice\n  choice: () ->\n    Mix.Main.Batch['Choice'].data\n  choices: (name) ->\n    obj = @choice()[name]\n    if obj?\n      obj.choices\n    else\n      console.error('Mix.choices() bad choice name', {name:name})\n      []\n  choose:( name, choice, checked ) ->\n    obj = @choice()[name]\n    if obj? and checked\n      obj.choices.push( choice )\n    else if obj? and not checked\n      obj.choices = obj.choices.filter( (elem) -> elem isnt choice );\n    else if not obj?\n      console.error('Mix.choose() bad choice', {name: name, choice: choice})\n    return\n  choosen: (name, choice) ->\n    has = @choice()[name]? and @inArray( choice, @choices(name) )\n    # console.log( 'Mix.choosen()', { name:name, choice:choice, has:has, choices:@choices(name) } )\n    has\n  choiceIndex: (name, choice) ->\n    obj = @choice()[name]\n    idx = 0\n    if obj?\n      idx = obj.choices.indexOf(choice)\n      idx = if idx is -1 then 0 else idx\n    else\n      console.error('Mix.choiceIndex() bad choice name', {name: name, idx: idx})\n    # console.log( 'Mix.choiceIndex()', { name:name, choice:choice, idx:idx, obj:obj } )\n    idx\n\n  refreshBtns:( name, btns ) ->\n    for own key,btn of btns\n      btn.checked.value = @choosen( name, btn.name )\n    return\n\n  appendImgsHW:( src, elem ) ->\n    hw  = {}\n    img = new Image();\n    img.onload = () ->\n      hw.iw = this.width\n      hw.ih = this.height\n      hw.ew = elem['clientWidth']\n      hw.eh = elem['clientHeight']\n      hw.r  = Math.min( hw.ew/hw.iw, hw.eh/hw.ih )\n      img.width  = hw.iw * hw.r\n      img.height = hw.ih * hw.r\n      img.alt    = 'alt'\n      # console.log( 'Mix.appendImgsHW()', hw:hw, { w:img.width, h:img.height } )\n      elem.children[0].remove() if elem.children[0]?\n      elem.append( img )\n    img.src = src\n\n  # aspectHW:( )\n\nexport default Mix\n"
  ]
}