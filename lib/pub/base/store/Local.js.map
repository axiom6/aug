{
  "version": 3,
  "file": "Local.js",
  "sourceRoot": "../../../src/base/store",
  "sources": [
    "Local.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import Store  from './Store.js'\n\nclass Local extends Store\n\n  constructor:( stream, dbName ) ->\n    super(      stream, dbName )\n    @memory = {}\n\n  tableId:( table,  id ) ->\n            table + id\n\n  obj:( table, id ) ->\n    str = localStorage.getItem( @tableId(table,id) )\n    if str? then JSON.parse(str) else {}\n\n  addId:( table, id, obj ) ->\n    obj._id = id\n    @openTable( table )     if not ( @tables[table]? and @tables[table][@source]? )\n    @memory[table]     = {} if not @memory[table]?\n    @memory[table][id] = obj\n    return\n\n  delId:( table, id ) ->\n    delete @memory[table][id] if @memory[table]? and @memory[table][id]?\n    return\n\n  add:(     table, id, obj, silent=false  )    ->\n    @addId( table, id, obj )\n    localStorage.setItem( @tableId(table,id), JSON.stringify(obj) )\n    @results( table, 'add', obj ) if not silent\n    return\n\n  get:( table, id, callback=null, op='get', silent=false ) ->\n    obj = @obj( table, id )\n    if obj?\n      if callback?\n         callback( obj )\n      else\n         @results( table, op, obj ) if not silent\n    else\n      @onerror( table, op, { error:\"Local get error\"}, id )\n    return\n\n  put:(     table, id, obj, silent=false  ) ->\n    @addId( table, id, obj )\n    localStorage.setItem( @tableId(table,id), JSON.stringify(obj) )\n    @results( table, 'put', obj ) if not silent\n    return\n\n  del:(     table, id, silent=false  ) ->\n    @delId( table, id )\n    obj = @obj( table, id )\n    localStorage.removeItem( @tableId(table,id) )\n    @results( table, 'del', obj )  if not silent\n    return\n\n  insert:( table, objs ) ->\n    for own key, obj of objs\n      @add( table, key, obj, true )\n    @results( table, 'insert', objs )\n    return\n\n  select:( table, where, callback=null, op='select' ) ->\n    objs =  {}\n    for own id, entry of @memory[table] when @memory[table]?\n      obj      = @obj( table, id )\n      objs[id] = obj if obj? and where(obj)\n    if callback?\n      callback( objs )\n    else\n      @results( table, op, objs )\n    return\n\n  update:( table, objs ) ->\n    for own key, obj of objs\n      @put( table, key, obj, true )\n    @results( table, 'update', objs )\n    return\n\n  remove:( table, where, op='remove'  ) ->\n    objs = {}\n    for own id, entry of @memory[table] when @memory[table]?\n      obj = @obj( table, id )\n      if obj? and where(obj)\n        @del( table, id, true )\n        objs[id] = obj\n    @results( table, op, objs )\n    return\n\n  show:() ->\n    @showTables()\n\n  open:( table ) ->\n    @openTable( table )\n    return\n\n  drop:( table ) ->\n    @dropTable( table )\n    where = (obj) -> true\n    @remove( table, where, 'drop' )\n    return\n\nexport default Local\n\n###\n      # console.log( 'Local.obj()', str )\n\n  version:() ->\n    localStorage.setItem('IndexDbVersion','0')\n    dbVersionStr = localStorage.getItem('IndexDbVersion')\n    dbVersionInt = if dbVersionStr? then parseInt(dbVersionStr)+1 else 1\n    dbVersionStr = dbVersionInt.toString()\n    localStorage.setItem('IndexDbVersion',dbVersionStr)\n    console.log( 'Index() version', dbVersionStr, dbVersionInt )\n    dbVersionInt\n###"
  ]
}