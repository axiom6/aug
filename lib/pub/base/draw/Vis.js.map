{
  "version": 3,
  "file": "Vis.js",
  "sourceRoot": "../../../src/base/draw",
  "sources": [
    "Vis.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Util       from '../../base/util/Util.js'\nimport { tester } from '../../test/tester.js'\nimport FontAwe    from './FontAwe.js'\n\nclass Vis\n\n  Vis.debug = false\n  \n  # --- Color Spaces  ---\n  # RGB - that also works a RGBa with a:1.0 as a default or can be provided in objects or arrays\n  # HSV - recogized as input by Vis.rga(arg) with either rgb or rygb hues\n  # HSL - standalone\n  # LCH - not implemented yet\n  # LAB - not implemented yet\n\n  # @rgb is the conversion work horse that is used by the other functions\n  # Always returns an rgb object like { r:255, b:255, b:255, a:1.0 } rounded to from 0 to 255\n  #   When arg is an object then just return rgb object with a or alpha defaulted or added\n  #   When arg is an array with length === 3 then it is assumed values are hsv with hue in RYGB\n  #     hue 360, saturation 100, v for intensity 100\n  #     with hue as RYGB red=0deg, yellow=90deg green=180deg and blue=270deg\n  #   When arg is an array with length === 4 then it is assumed values are hsv\n  #     with hue as RGB red=0deg, green=120deg and blue=240deg\n  #   When arg is a number the range expressed hex is 0x000000 to 0xFFFFFF\n  @rgb:( arg ) ->\n    rgb = { r:255, g:255, b:255, a:1.0 } # default is white with alpha = 1.0 opaque\n    if tester.isObj(arg)\n      rgb   = arg\n      rgb.a = if arg.a? then arg.a else 1.0\n    else if tester.isArray(arg)\n      isRYGB = arg.length is 3  # 3 implies RYGB hue while 4 implies RGB hue\n      rgb   = Vis.rgbHsv( arg[0], arg[1], arg[2], isRYGB )\n      rgb.a = if arg.length is 4 then arg[3] else 1.0\n      console.log( 'Vis.rgb()', { arg:arg, rgb:rgb, isRYGB:isRYGB } ) if @debug\n    else if tester.isNum(arg)\n      rgb = { r:(arg & 0xFF0000) >> 16,   g:(arg & 0x00FF00) >> 8,  b:arg & 0x0000FF }\n      rgb.a = 1.0\n    Vis.round(rgb)\n\n  # Returns an rgb array with an alpha or full opacity of 1\n  @rgba:( arg ) ->\n    rgb = Vis.rgb( arg )\n    [ rgb.r, rgb.g, rgb.b, rgb.a ]  # Vis.rgb( arg ) always returns an a: or alpha\n\n  # Returns a number that is interpreted as hex like 0xFFFFFF\n  #   Recommended for most libraries like Three.js\n  @hex:( arg ) ->\n    rgb = Vis.rgb( arg )\n    rgb.r * 65536 + rgb.g * 256 + rgb.b # 65536 is 16 to the fourth power and 256 is 16 squared\n\n  # Returns a number in hex format like '0xFFFFFF'. Go for debugging\n  @str:( arg ) ->\n    rgb  = Vis.rgb( arg )\n    str  = '0x'\n    str += if rgb.r is 0 then '00' else Vis.strHex(rgb.r)\n    str += if rgb.g is 0 then '00' else Vis.strHex(rgb.g)\n    str += if rgb.b is 0 then '00' else Vis.strHex(rgb.b)\n    str\n\n  # returns a css string in rgb format\n  @css:( arg  ) ->\n    rgb  = Vis.rgb( arg )\n    \"\"\"rgba(#{rgb.r},#{rgb.g},#{rgb.b},#{rgb.a})\"\"\"\n\n  # Returns hsv when toRYGB=false or ysv when toRYGB=true\n  @cyl:( arg, toRYGB=false ) ->\n    rgb  = Vis.rgb( arg )\n    R = rgb.r\n    G = rgb.g\n    B = rgb.b\n    sum = R + G + B\n    r = R/sum; g = G/sum; b = B/sum\n    v = sum / 3\n    s = if R is G and G is B then 0 else 1 - 3 * Math.min(r,g,b) # Center Grayscale\n    a = Vis.deg( Math.acos( ( r - 0.5*(g+b) ) / Math.sqrt((r-g)*(r-g)+(r-b)*(g-b)) ) )\n    h = if b <= g then a else 360 - a\n    h = 0 if s is 0\n    H = if toRYGB then Vis.rygbHue(h) else h\n    [ H, s*100, v/2.55 ]\n\n  @hsv:( arg ) ->\n    Vis.cyl( arg, false )\n\n  # Returns an  array with hue in rygb coords\n  # RYGB red=0deg, yellow=90deg green=180deg and blue=270deg\n  @ysv:( arg ) ->\n    Vis.cyl( arg, true )\n\n  ###\n  @hcl:( arg ) ->\n    rgb  = Vis.rgb( arg )\n    R = rgb.r\n    G = rgb.g\n    B = rgb.b\n    a   = 3 * ( Math.min(R,G,B) / Math.max(R,G,B) ) / 100\n    q    = Math.exp( a )\n    h180   = Vis.deg( Math.atan2( G - B, R - G ) )\n    H   = if h180 < 0 then 360 + h180 else h180\n    C   = q * ( Math.abs(R−G) + Math.abs(G−B) + Math.abs(B−R) ) / 3\n    L   = q *Math.max(R,G,B) + (1-q) * Math.min(R, G,B)  / 2\n    [ H. C, L ]\n  ###\n\n  # Need to chech output format\n  @sphere:( hue, phi, rad ) ->\n    Vis.rgba( [Vis.rot(hue,90), 100*Vis.sin(phi), 100*rad ] )\n    \n  @strHex:( num ) ->\n    `num.toString(16).toUpperCase()` # Uses ` ` to fake out CoffeeScript code inspector\n\n  # Rounds and scales rgb value to ints between 0 to 255\n  @round:( rgb, scale=1 ) ->\n    rgb.a = if rgb.a? then rgb.a else 1.0\n    { r:Math.round(rgb.r*scale), g:Math.round(rgb.g*scale), b:Math.round(rgb.b*scale), a:rgb.a }\n\n  # Converts hues in 'ysv' RYGB range to 'hsv' and 'hsl' rgb hue\n  #   'rygb' has red=0deg, yellow=90deg green=180deg and blue=270deg\n  #   'rgb'  has red=0deg,              green=120deg and blue=240deg\n  @rgbHue:( rygbHue ) ->\n    rgbHue = 0\n    if        0 <= rygbHue and rygbHue <  90 then rgbHue =        rygbHue      *  60 / 90\n    else if  90 <= rygbHue and rygbHue < 180 then rgbHue =  60 + (rygbHue- 90) *  60 / 90\n    else if 180 <= rygbHue and rygbHue < 270 then rgbHue = 120 + (rygbHue-180) * 120 / 90\n    else if 270 <= rygbHue and rygbHue < 360 then rgbHue = 240 + (rygbHue-270) * 120 / 90\n    rgbHue\n\n  # Converts hues in 'hsv' or 'hsl' RGB hue to 'tsv' RYGB range\n  #   'rgb'  has red=0deg,              green=120deg and blue=240deg\n  #   'rygb' has red=0deg, yellow=90deg green=180deg and blue=270deg\n  @rygbHue:( rgbHue ) ->\n    rygbHue = 0\n    if        0 <= rgbHue and rgbHue < 120 then rygbHue =        rgbHue      *  90 /  60\n    else if 120 <= rgbHue and rgbHue < 240 then rygbHue = 180 + (rgbHue-120) *  90 / 120\n    else if 240 <= rgbHue and rgbHue < 360 then rygbHue = 270 + (rgbHue-240) *  90 / 120\n    rygbHue\n\n  # toRygb=true is 'ysc' while\n  @rgbHsv:( H, S, V, isRYGB ) ->\n    h = if isRYGB then Vis.rgbHue(H) else H\n    d = S * 0.01\n    c = d # 1.0 # Vis.sigmoidal( d, 2, 0.25 )\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    x = 1 - c\n    y = 1 - f * c\n    z = 1 - (1 - f) * c\n    rgb = switch i % 6\n      when 0 then { r:1, g:z, b:x }\n      when 1 then { r:y, g:1, b:x }\n      when 2 then { r:x, g:1, b:z }\n      when 3 then { r:x, g:y, b:1 }\n      when 4 then { r:z, g:x, b:1 }\n      when 5 then { r:1, g:x, b:y }\n    Vis.round( rgb, 255 * V / 100 )\n\n  # Standalone since HSV is not detected by Vis.rgb( arg )\n  @rgbHsl:( H, s, l, isRYGB ) ->\n    h = if isRYGB then Vis.rgbHue(H) else H\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    p = l * (1 - s)\n    q = l * (1 - f * s)\n    t = l * (1 - (1 - f) * s)\n    v = l\n    rgb = switch i % 6\n      when 0 then { r:v, g:t, b:p }\n      when 1 then { r:q, g:v, b:p }\n      when 2 then { r:p, g:v, b:t }\n      when 3 then { r:p, g:q, b:v }\n      when 4 then { r:t, g:p, b:v }\n      when 5 then { r:v, g:p, b:q }\n    Vis.round( rgb, 255 )\n\n  @sigmoidal:( x, k, x0=0.5, L=1 ) ->\n    L / ( 1 + Math.exp(-k*(x-x0)) )\n\n  @interpolateRgb:( rgb1, r1, rgb2, r2 ) ->\n    { r:rgb1.r * r1 + rgb2.r * r2, g:rgb1.g * r1 + rgb2.g * r2, b:rgb1.b * r1 + rgb2.b * r2 }\n\n  # --- Degrees and Radians ---\n  #  The svg functions deal with the svg convention where the y 90 degree axis points down\n\n  @rad:( deg ) -> deg * Math.PI / 180\n  @deg:( rad ) -> rad * 180 / Math.PI\n  @sin:( deg ) -> Math.sin(Vis.rad(deg))\n  @cos:( deg ) -> Math.cos(Vis.rad(deg))\n\n  @rot:( deg, ang ) ->\n    a = deg+ang\n    a = a + 360 if a < 0\n    a\n\n  @svgDeg:( deg ) -> 360-deg\n  @svgRad:( rad ) -> 2*Math.PI-rad\n\n  @radSvg:( deg ) -> Vis.rad(360-deg)\n  @degSvg:( rad ) -> Vis.deg(2*Math.PI-rad)\n  @sinSvg:( deg ) -> Math.sin(Vis.radSvg(deg))\n  @cosSvg:( deg ) -> Math.cos(Vis.radSvg(deg))\n\n  # --- Math Utilities ---\n\n  @floor:( x, dx )          ->  dr = Math.round(dx); Math.floor( x / dr ) * dr\n  @ceil:(  x, dx )          ->  dr = Math.round(dx); Math.ceil(  x / dr ) * dr\n  @within:( beg, deg, end ) -> beg   <= deg and deg <= end # Closed interval with <=\n  @isZero:( v )             -> -0.01 <  v   and v   <  0.01\n  @inStr:( s, e )           -> tester.inStr( s, e )\n  @isChild:( key )          -> tester.isChild( key )\n  @isFunc:(  f   )          -> tester.isFunc( f )\n\n  @toInt:( arg ) ->\n    switch tester.type(arg)\n      when 'number' then Math.floor(arg)\n      when 'string' then  parseInt(arg)\n      else 0\n\n  # Return a number with fixed decimal places\n  @toFixed:( arg, dec=2 ) ->\n    num = switch typeof(arg)\n      when 'number' then arg\n      when 'string' then parseFloat(arg)\n      else 0\n    num.toFixed(dec)\n\n  @noop:( ...args ) ->\n    if args then false\n    return\n\n  @hasGlobal:( global, issue=true ) ->\n    has = window[global]?\n    console.error( \"Vis.hasGlobal() #{global} not present\" )  if not has and issue\n    has\n\n  @getGlobal:( global, issue=true ) ->\n    if Vis.hasGlobal( global, issue ) then window[global] else null\n\n  @ready:( fn ) ->\n    switch fn\n     when  not tester.isFunc( fn )  then return               # Sanity check\n     when  Vis.skipReady            then fn()\n     when  document.readyState is 'complete' then fn() # If document is already loaded, run method\n     else  document.addEventListener( 'DOMContentLoaded', fn, false )\n    return\n\n  @getHtmlId:( name, type='', ext='' ) ->\n    id = name + type + ext + Vis['uniqueIdExt']\n    id.replace( /[ \\.]/g, \"\" )\n\n  @cssNameType:( name, type='' ) -> name + type\n\n  # --- Css Transforms ---  \n\n  @translate:( x0, y0 ) ->\n    Util.checkTypes('number',{x0:x0,y0:y0})\n    \" translate( #{x0}, #{y0} )\"\n\n  @scale:( sx, sy )  ->\n    Util.checkTypes('number',{sx:sx,sy:sy})\n    \" s( #{sx}, #{sy} )\"\n\n  @rotate:( a, x, y ) ->\n    Util.checkTypes('number',{a:a,x:x,y:y})\n    \" rotate(#{a} #{x} #{y} )\"\n\n  @translateScale:( x0, y0, sx, sy ) ->\n    Util.checkTypes('number',{x0:x0,y0:y0})\n    Util.checkTypes('number',{sx:sx,sy:sy})\n    \" translate( #{x0}, #{y0} ) s( #{sx}, #{sy} )\"\n\n  # Font Awesome Unicode lookup\n  @unicode:( icon ) ->\n    uc    = FontAwe.icons[icon]\n    if not uc?\n      console.error( 'Vis.unicode() missing icon in Vis.FontAwesomeUnicodes for', icon )\n      uc = \"\\uf111\" # Circle\n    uc\n\nVis.skipReady     =  false\nVis.time          =  0\nUtil.uniqueIdExt  = ''\n\nexport default Vis\n\n###  HCL\n  a   = 3 * ( Min(R,G,B) / Max(R,G,B) ) / 100\n  q    = Math.exp( a )\n  h180   = Vis.deg( Math.atan2( G − B, R - G ) )\n  H   = if h180 < 0 then 360 + h180 else h180\n  C   = q * ( Math.abs(R−G) + Math.abs(G−B) + Math.abs(B−R) ) / 3\n  L   = q*Math.max(R,G,B) + (1 − q)*Math.mim(R, G,B)  / 2\n\n###\n"
  ]
}