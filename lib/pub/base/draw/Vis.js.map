{
  "version": 3,
  "file": "Vis.js",
  "sourceRoot": "../../../src/base/draw",
  "sources": [
    "Vis.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Util     from '../../base/util/Util.js'\nimport FontAwe  from './FontAwe.js'\n\nclass Vis\n\n  Vis.debug = false\n  \n  # --- Color ---\n\n  # @rgb is the conversion work horse that is used by the other functions\n  # Always returns an rgb object like { r:255, b:255, b:255 } scaled to from 0 to 255\n  #   For type equal to 'rgb' their is conditional scaling\n  #      scale = 255  implies multiply by 255  for nomalized range 0.0 to   1.0\n  #      scale = 2.55 implies multiply by 2,55 for percent   range 0%  to 100%\n  #      scale = 1    implies standard  0 to 255 range\n  #   For type equal to 'ysv' the ranges are always\n  #      hue 360, saturation 100, v for intensity 100\n  #      'ysv' uses rygb color system with red=0deg, yellow=90deg green=180deg and blue=270deg\n  #      'ysv' is the default type because it provides the best color balance \n  #   For type equal to 'hsv' the ranges are always\n  #      hue 360, saturation 100, v for intensity 100\n  #      'hsv' has red=0deg, green=120deg and blue=240deg\n  #   For type equal to 'hsl' the ranges are always\n  #      hue 360, saturation 100, lightness 100\n  #      'hsl' has red=0deg, green=120deg and blue=240deg\n\n  @rgb:( arg, type=\"ysv\", scale=1 ) ->\n    rgb = { r:255, g:255, b:255 } # default is white\n    if Util.isArray(arg)\n      rgb = switch type\n        when 'rgb' then { r:arg[0]*scale, g:arg[1]*scale, b:arg[2]*scale }\n        when 'ysv' then Vis.rgbHsv( arg[0], arg[1], arg[2], 'ysv' )\n        when 'hsv' then Vis.rgbHsv( arg[0], arg[1], arg[2], 'hsv' )\n        when 'hsl' then Vis.rgbHsl( arg[0], arg[1], arg[2]        )\n    else if Util.isObj(arg)\n      rgb = switch type\n        when 'rgb' then { r:arg.r*scale, g:arg.g*scale, b:arg.b*scale }\n        when 'ysv' then Vis.rgbHsv( arg.h, arg.s, arg.v, 'ysv' )\n        when 'hsv' then Vis.rgbHsv( arg.h, arg.s, arg.v, 'hsv' )\n        when 'hsl' then Vis.rgbHsl( arg.h, arg.s, arg.l )\n    else if Util.isNum(arg)\n      rgb = { r:(arg & 0xFF0000) >> 16,   g:(arg & 0x00FF00) >> 8,  b:arg & 0x0000FF }\n    Vis.round(rgb)\n\n  # Returns an rgb array with an alpha 1\n  @rgba:( arg, type=\"ysv\", scale=1 ) ->\n    rgb = Vis.rgb( arg, type, scale )\n    [ rgb.r, rgb.g, rgb.b,1 ]\n\n  # Returns a number that is interpreted as hex like 0xFFFFFF\n  #   Recommended for most libraries like Three.js\n  @hex:( arg, type=\"rgb\", scale=1 ) ->\n    rgb = Vis.rgb( arg, type, scale )\n    rgb.r * 65536 + rgb.g * 256 + rgb.b # 65536 is 16 to the fourth power and 256 is 16 squared\n\n  # Returns a number in hex format like '0xFFFFFF'. Go for debugging\n  @str:( arg, type=\"ysv\", scale=1 ) ->\n    rgb  = Vis.rgb( arg, type, scale )\n    str  = '0x'\n    str += if rgb.r is 0 then '00' else Vis.strHex(rgb.r).toUpperCase()\n    str += if rgb.g is 0 then '00' else Vis.strHex(rgb.g).toUpperCase()\n    str += if rgb.b is 0 then '00' else Vis.strHex(rgb.b).toUpperCase()\n    str\n\n  # Key algorithm from HCI for converting RGB to HCS  h 360 c 100 s 100 a special color system\n  @hsv:( arg, type=\"ysv\", scale=1 ) =>\n    rgb  = Vis.rgb( arg, type, scale )\n    R = rgb.r\n    G = rgb.g\n    B = rgb.b\n    sum = R + G + B\n    r = R/sum; g = G/sum; b = B/sum\n    s = sum / 3\n    c = if R is G and G is B then 0 else 1 - 3 * Math.min(r,g,b) # Center Grayscale\n    a = Vis.deg( Math.acos( ( r - 0.5*(g+b) ) / Math.sqrt((r-g)*(r-g)+(r-b)*(g-b)) ) )\n    h = if b <= g then a else 360 - a\n    h = 0 if c is 0\n    H = if type is 'ysc' then Vis.ysvHue(h) else h\n    [ H, c*100, s/2.55 ]\n\n# returns a css string in rgb format\n  @css:( arg, type=\"ysv\", scale=1  ) ->\n    rgb  = Vis.rgb( arg, type, scale )\n    \"\"\"rgb(#{rgb.r},#{rgb.g},#{rgb.b})\"\"\"\n\n  # Need to chech output format\n  @sphere:( hue, phi, rad ) ->\n    Vis.rgba( [Vis.rot(hue,90), 100*Vis.sin(phi), 100*rad ] )\n    \n  @strHex:( num ) ->\n    `num.toString(16)` # Uses ` ` to fake out CoffeeScript code inspector\n\n  # Rounds and scales rgb value to ints between 0 to 255\n  @round:( rgb, scale=1 ) ->\n    { r:Math.round(rgb.r*scale), g:Math.round(rgb.g*scale), b:Math.round(rgb.b*scale) }\n\n  # Converts hues in 'ysv' RYGB range to 'hsv' and 'hsl' rgb hue\n  #   'ysv'       has red=0deg, yellow=90deg green=180deg and blue=270deg\n  #   'hsv' 'hsl' has red=0deg,              green=120deg and blue=240deg\n  @hsvHue:( ysvHue ) ->\n    hsvHue = 0\n    if        0 <= ysvHue and ysvHue <  90 then hsvHue =        ysvHue      *  60 / 90\n    else if  90 <= ysvHue and ysvHue < 180 then hsvHue =  60 + (ysvHue- 90) *  60 / 90\n    else if 180 <= ysvHue and ysvHue < 270 then hsvHue = 120 + (ysvHue-180) * 120 / 90\n    else if 270 <= ysvHue and ysvHue < 360 then hsvHue = 240 + (ysvHue-270) * 120 / 90\n    hsvHue\n\n  # Converts hues in 'hsv' or 'hsl' RGB hue to 'tsv' RYGB range\n  #   'hsv' 'hsl' has red=0deg,              green=120deg and blue=240deg\n  #   'ysv'       has red=0deg, yellow=90deg green=180deg and blue=270deg\n  @ysvHue:( hueHsv ) ->\n    ysvHue = 0\n    if        0 <= hueHsv and hueHsv < 120 then ysvHue =        hueHsv      * 180 / 120\n    else if 120 <= hueHsv and hueHsv < 240 then ysvHue = 180 + (hueHsv-120) * 180 / 120\n    else if 240 <= hueHsv and hueHsv < 360 then ysvHue = 270 + (hueHsv-240) * 180 / 120\n    ysvHue\n\n# --- Degrees and Radians ---\n  #  The svg functions deal with the svg convention where the y 90 degree axis points down\n\n  @rad:( deg ) -> deg * Math.PI / 180\n  @deg:( rad ) -> rad * 180 / Math.PI\n  @sin:( deg ) -> Math.sin(Vis.rad(deg))\n  @cos:( deg ) -> Math.cos(Vis.rad(deg))\n\n  @rot:( deg, ang ) ->\n    a = deg+ang\n    a = a + 360 if a < 0\n    a\n\n  @svgDeg:( deg ) -> 360-deg\n  @svgRad:( rad ) -> 2*Math.PI-rad\n\n  @radSvg:( deg ) -> Vis.rad(360-deg)\n  @degSvg:( rad ) -> Vis.deg(2*Math.PI-rad)\n  @sinSvg:( deg ) -> Math.sin(Vis.radSvg(deg))\n  @cosSvg:( deg ) -> Math.cos(Vis.radSvg(deg))\n\n  # --- Math Utilities ---\n\n  @floor:( x, dx )          ->  dr = Math.round(dx); Math.floor( x / dr ) * dr\n  @ceil:(  x, dx )          ->  dr = Math.round(dx); Math.ceil(  x / dr ) * dr\n  @within:( beg, deg, end ) -> beg   <= deg and deg <= end # Closed interval with <=\n  @isZero:( v )             -> -0.01 <  v   and v   <  0.01\n\n  # --- Css Transforms ---  \n\n  @translate:( x0, y0 ) ->\n    Util.checkTypes('number',{x0:x0,y0:y0})\n    \" translate( #{x0}, #{y0} )\"\n\n  @scale:( sx, sy )  ->\n    Util.checkTypes('number',{sx:sx,sy:sy})\n    \" s( #{sx}, #{sy} )\"\n\n  @rotate:( a, x, y ) ->\n    Util.checkTypes('number',{a:a,x:x,y:y})\n    \" rotate(#{a} #{x} #{y} )\"\n\n  @translateScale:( x0, y0, sx, sy ) ->\n    Util.checkTypes('number',{x0:x0,y0:y0})\n    Util.checkTypes('number',{sx:sx,sy:sy})\n    \" translate( #{x0}, #{y0} ) s( #{sx}, #{sy} )\"\n\n  # --- Color Utilities ---\n\n  # toRygb=true is 'ysc' while \n  @rgbHsv:( H, C, V, hueSys='ysv' ) ->\n    h = if hueSys is 'ysv' then Vis.hsvHue(H) else H\n    d = C * 0.01\n    c = Vis.sigmoidal( d, 2, 0.25 )\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    x = 1 - c\n    y = 1 - f * c\n    z = 1 - (1 - f) * c\n    rgb = switch i % 6\n      when 0 then { r:1, g:z, b:x }\n      when 1 then { r:y, g:1, b:x }\n      when 2 then { r:x, g:1, b:z }\n      when 3 then { r:x, g:y, b:1 }\n      when 4 then { r:z, g:x, b:1 }\n      when 5 then { r:1, g:x, b:y }\n    console.log( 'Vis.rgbHsv()', { rgb:rgb, hcv:[H,C,V], sys:hueSys } ) if Vis.debug\n    Vis.round( rgb, 255 * V / 100 )\n\n  @rgbHsl:( H, s, l, hueSys='ysc' ) ->\n    h = if hueSys is 'ysv' then Vis.hsvHue(H) else H\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    p = l * (1 - s)\n    q = l * (1 - f * s)\n    t = l * (1 - (1 - f) * s)\n    v = l\n    rgb = switch i % 6\n      when 0 then { r:v, g:t, b:p }\n      when 1 then { r:q, g:v, b:p }\n      when 2 then { r:p, g:v, b:t }\n      when 3 then { r:p, g:q, b:v }\n      when 4 then { r:t, g:p, b:v }\n      when 5 then { r:v, g:p, b:q }\n    Vis.round( rgb, 255 )\n\n  @sigmoidal:( x, k, x0=0.5, L=1 ) ->\n    L / ( 1 + Math.exp(-k*(x-x0)) )\n\n  @interpolateRgb:( rgb1, r1, rgb2, r2 ) ->\n    { r:rgb1.r * r1 + rgb2.r * r2, g:rgb1.g * r1 + rgb2.g * r2, b:rgb1.b * r1 + rgb2.b * r2 }\n\n  # Font Awesome Unicode lookup\n  @unicode:( icon ) ->\n    uc    = FontAwe.icons[icon]\n    if not uc?\n      console.error( 'Vis.unicode() missing icon in Vis.FontAwesomeUnicodes for', icon )\n      uc = \"\\uf111\" # Circle\n    uc\n\nexport default Vis\n"
  ]
}