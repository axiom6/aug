{
  "version": 3,
  "file": "Vis.js",
  "sourceRoot": "../../src/draw",
  "sources": [
    "Vis.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Type     from '../test/Type.js'\nimport FontAwe  from './FontAwe.js'\nimport chroma   from 'chroma-js'\n\nclass Vis extends Type\n\n  constructor:() ->\n    super()\n    @skipReady   = false\n    @time        = 0\n    @uniqueIdExt = ''\n    @chroma      = chroma\n    @debug       = false\n    @smooth      = true\n    @distribution10s = [0, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]\n    @distributionPri = [0,20,30,40,50,54,58,62,65,68,71,74,75,76,82,88,88,91,94,97,100]\n    @distributionSec = [0,20,30,40,50,54,58,62,65,68,71,74,75,76,82,88,88,91,94,97,100]\n  \n  # --- Color Spaces  ---\n  # RGB - that also works a RGBa with a:1.0 as a default or can be provided in objects or arrays\n  # HSV - recogized as input by Vis.rga(arg) with either rgb or rygb hues\n  # HSL - standalone\n  # LCH - not implemented yet\n  # LAB - not implemented yet\n\n  # @rgb is the conversion work horse that is used by the other functions\n  # Always returns an rgb object like { r:255, b:255, b:255, a:1.0 } rounded to from 0 to 255\n  #   When arg is an object then just return rgb object with a or alpha defaulted or added\n  #   When arg is an array with length === 3 then it is assumed values are hsv with hue in RYGB\n  #     hue 360, saturation 100, v for intensity 100\n  #     with hue as RYGB red=0deg, yellow=90deg green=180deg and blue=270deg\n  #   When arg is an array with length === 4 then it is assumed values  are hsv\n  #     with hue as RGB red=0deg, green=120deg and blue=240deg\n  #   When arg is a number the range expressed hex is 0x000000 to 0xFFFFFF\n  # console.log( 'Vis.rgb()', { arg:arg, rgb:rgb, isRYGB:isRYGB } ) if @debug\n  rgb:( arg ) ->\n    rgb = { r:255, g:255, b:255, a:1.0 } # default is white with alpha = 1.0 opaque\n    if @isObject(arg)\n      rgb   = arg\n      rgb.a = if arg.a? then arg.a else 1.0\n    else if @isArray(arg)\n      type  = if arg.length is 4 then arg[3] else \"HSV\"\n      rgb   = @rgbCyl( arg, type )\n      rgb.a = 1\n    else if @isNumber(arg)\n      rgb = { r:(arg & 0xFF0000) >> 16,   g:(arg & 0x00FF00) >> 8,  b:arg & 0x0000FF }\n      rgb.a = 1.0\n    @roundRGB(rgb)\n\n  # Returns an rgb array with an alpha or full opacity of 1\n  rgba:( arg ) ->\n    rgb   = @rgb( arg )\n    rgb.a = 1.0 if not rgb.a?\n    [ rgb.r, rgb.g, rgb.b, rgb.a ]\n\n  # Returns a number that is interpreted as hex like 0xFFFFFF\n  #   Recommended for most libraries like Three.js\n  # 65536 is 16 to the fourth power and 256 is 16 squared\n  # Need to figure out how to generate an actual value not string in hex\n  hex:( arg ) ->\n    rgb = @rgb( arg )\n    rgb.r * 65536 + rgb.g * 256 + rgb.b\n\n  # Returns a number in hex format like '0xFFFFFF'\n  # Good for debugging\n  # Only use for hex strings.\n  # Do not use for hex values in style\n  str:( arg ) ->\n    rgb  = @rgb( arg )\n    str  = '0x'\n    str += @strHex(rgb.r)\n    str += @strHex(rgb.g)\n    str += @strHex(rgb.b)\n    str\n\n  # returns a css string in rgb format\n  # Recommended for all style in Vue and Svg\n  css:( arg  ) ->\n    rgb  = @rgb( arg )\n    \"\"\"rgb(#{rgb.r},#{rgb.g},#{rgb.b})\"\"\"\n\n  # Returns hsv when toRYGB=false or ysv when toRYGB=true\n  cyl:( arg, toRYGB=false ) ->\n    rgb  = @rgb( arg )\n    R = rgb.r\n    G = rgb.g\n    B = rgb.b\n    sum = R + G + B\n    r = R/sum; g = G/sum; b = B/sum\n    v = sum / 3\n    s = if R is G and G is B then 0 else 1 - 3 * Math.min(r,g,b) # Center Grayscale\n    a = @deg( Math.acos( ( r - 0.5*(g+b) ) / Math.sqrt((r-g)*(r-g)+(r-b)*(g-b)) ) )\n    h = if b <= g then a else 360 - a\n    h = 0 if s is 0\n    H = if toRYGB then @rygbHue(h) else h\n    [ H, s*100, v/2.55 ]\n\n  hsv:( arg ) ->\n    @cyl( arg, false )\n\n  # Returns an  array with hue in rygb coords\n  # RYGB red=0deg, yellow=90deg green=180deg and blue=270deg\n  ysv:( arg ) ->\n    @cyl( arg, true )\n\n  # Need to chech output format\n  sphere:( hue, phi, rad ) ->\n    @rgba( [@rot(hue,90), 100*@sin(phi), 100*rad ] )\n\n  # Uses ` ` to fake out CoffeeScript code inspector\n  strHex:( num ) ->\n    str = `num.toString(16).toUpperCase()`\n    switch\n      when num is  0 then '00'\n      when num <  16 then '0' + str\n      else                str\n\n  # Adjust rgb values to stay in range\n  adj:( v ) ->\n    a = Math.round(v)\n    a = if a <   0 then   0 else a\n    a = if a > 255 then 255 else a\n    a\n\n  # Rounds and scales rgb value amd limits ints between 0 to 255\n  roundRGB:( rgb, scale=1, add=0 ) ->\n    rgb.a = if rgb.a? then rgb.a else 1.0\n    { r:@adj((rgb.r+add)*scale), g:@adj((rgb.g+add)*scale), b:@adj((rgb.b+add)*scale), a:rgb.a }\n\n  # Converts hues in 'ysv' RYGB range to 'hsv' and 'hsl' rgb hue\n  #   'rygb' has red=0deg, yellow=90deg green=180deg and blue=270deg\n  #   'rgb'  has red=0deg,              green=120deg and blue=240deg\n  rgbHue:( rygbHue ) ->\n    rgbHue = 0\n    if        0 <= rygbHue and rygbHue <  90 then rgbHue =        rygbHue      *  60 / 90\n    else if  90 <= rygbHue and rygbHue < 180 then rgbHue =  60 + (rygbHue- 90) *  60 / 90\n    else if 180 <= rygbHue and rygbHue < 270 then rgbHue = 120 + (rygbHue-180) * 120 / 90\n    else if 270 <= rygbHue and rygbHue < 360 then rgbHue = 240 + (rygbHue-270) * 120 / 90\n    rgbHue\n\n  # Converts hues in 'hsv' or 'hsl' RGB hue to 'tsv' RYGB range\n  #   'rgb'  has red=0deg,              green=120deg and blue=240deg\n  #   'rygb' has red=0deg, yellow=90deg green=180deg and blue=270deg\n  rygbHue:( rgbHue ) ->\n    rygbHue = 0\n    if        0 <= rgbHue and rgbHue < 120 then rygbHue =        rgbHue      *  90 /  60\n    else if 120 <= rgbHue and rgbHue < 240 then rygbHue = 180 + (rgbHue-120) *  90 / 120\n    else if 240 <= rgbHue and rgbHue < 360 then rygbHue = 270 + (rgbHue-240) *  90 / 120\n    rygbHue\n\n  rgbCyl:( a, type ) ->\n    isRYGB = not ( type.length is 4 and type.charAt(3) is 'R' )\n    h = if isRYGB then @rgbHue(a[0]) else a[0]\n    s = a[1]\n    v = a[2]\n    switch type\n      when 'HSV', 'HSVR' then @rgbHsv( h, s, v )\n      when 'HMI', 'HMIR' then @rgbHmi( h, s, v )\n      when 'HWV', 'HWVR' then @rgbHwv( h, s, v )\n      when 'HSC', 'HSCR' then @rgbHsc( h, s, v ) # HSC means use chroma for HSV\n      when 'HSI', 'HSIR' then @rgbHsi( h, s, v )\n      when 'HCI', 'HCIR' then @rgbHci( h, s, v ) # HCI is a more saturated HSI\n      when 'HSL', 'HSLR' then @rgbHsl( h, s, v )\n      else\n        console.log( \"Vis.rgbCyl() #{type} unknown\" )\n        @rbgHsv( h, s, v )\n\n  rgbHsc:( H, S, V ) ->\n    h = H\n    c = chroma.hsv( h, S*0.01, V*0.01 )\n    a = c._rgb\n    rgb = { r:a[0], g:a[1], b:a[2], a:1 }\n    rgb = @roundRGB( rgb, 1.0 )\n    console.log( \"Vis.rgbHsc()\", rgb, h, S, V ) if @debug\n    rgb\n\n  # toRygb=true is 'ysc' while\n  ###\n    var i = floor$1(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - s * f);\n    var t = v * (1 - s * (1 - f));\n  ###\n  rgbHsv:( H, S, V ) ->\n    h = H\n    d = S * 0.01\n    c = d # @sigmoidal( d, 2, 0.25 )\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    x = 1 - c\n    y = 1 - f * c\n    z = 1 - (1 - f) * c\n    rgb = switch i % 6\n      when 0 then { r:1, g:z, b:x }\n      when 1 then { r:y, g:1, b:x }\n      when 2 then { r:x, g:1, b:z }\n      when 3 then { r:x, g:y, b:1 }\n      when 4 then { r:z, g:x, b:1 }\n      when 5 then { r:1, g:x, b:y }\n    @roundRGB( rgb, 255 * V / 100 )\n\n  rgbHwv:( h, S, V ) ->\n    s = S * 0.01\n    v = V * 0.01\n    f = (n) =>\n      k = ( n + h / 60 ) % 6\n      v = v - v * s * Math.max( 0, Math.min( k, 4-k, 1 ) )\n    rgb = { r:f(5), g:f(3), b:f(1) }\n    rgb = @roundRGB( rgb, 255 )\n    console.log( \"Vis.rgbHwv()\", rgb, h, S, V ) # if @debug\n    rgb\n\n  rgbHmi:( h, S, I ) ->\n    smooth = if @smooth then @hillEq( S ) else S\n    sat    = smooth * 0.01\n    desat  = 1 - sat\n    bright = I * 0.01\n    r = 0\n    g = 0\n    b = 0\n    boost = true\n    pri = ( val, max ) ->\n      if boost then val / max else val\n    sec = ( val, max ) ->\n      if boost then desat + ( sat * val / max ) else desat + sat * val\n    rem = ( q, n ) =>\n      q/n - Math.floor(q/n)\n    fwd = rem(h,120)\n    bak = 1 - fwd\n    if        0 <= h and h <  60  # red   pri green sec\n      r = pri( bak, bak )\n      g = sec( fwd, bak )\n      b = desat\n    else if  60 <= h and h < 120  # green pri red   sec\n      g = pri( fwd, fwd )\n      r = sec( bak, fwd )\n      b = desat\n    else if 120 <= h and h < 180  # green pri blue  sec\n      g = pri( bak, bak )\n      b = sec( fwd, bak )\n      r = desat\n    else if 180 <= h and h < 240  # blue   pri green sec\n      b = pri( fwd, fwd )\n      g = sec( bak, fwd )\n      r = desat\n    else if  240 <= h and h < 300 # blue  pri red   sec\n      b = pri( bak, bak )\n      r = sec( fwd, bak )\n      g = desat\n    else if  300 <= h and h < 360 # red   pri blue  sec\n      r = pri( fwd, fwd )\n      b = sec( bak, fwd )\n      g = desat\n    rgb = @roundRGB( { r:r, g:g, b:b }, 255 * bright )\n    console.log( \"Vis.rgbHmi()\", { rgb:rgb, h:h, S:smooth, I:I } ) if @debug\n    rgb\n\n  # From chroma.js\n  rgbHsi:( Hue, Rad, Val ) ->\n    hue  = Hue\n    h = hue / 360\n    s = Rad * 0.01\n    i = Val * 0.01\n    if h < 1/3\n      b = (1-s)/3\n      r = (1+s*@cos(hue)/@cos(120-hue))/3\n      g = 1 - (b+r)\n    else if h < 2/3\n      h -= 1/3;\n      r = (1-s)/3;\n      g = (1+s*@cos(hue)/@cos(120-hue))/3;\n      b = 1 - (r+g);\n    else\n      h -= 2/3\n      g = (1-s)/3\n      b = (1+s*@cos(hue)/@cos(120-hue))/3\n      r = 1 - (g+b)\n    @roundRGB( { r:r, g:g, b:b }, 255 * i * 3 ) # * 3\n\n  # toRygb=true is 'ysc'\n  # hue is converted to red=0deg, green=120deg and blue=240deg\n  rgbHci:( Hue, Rad, Val ) ->\n    hue  = Hue\n    rad  = 0.01 * Rad\n    val  = 0.01 * Val\n    hq   = Math.floor( hue-1 / 60 )\n    z    = 1 - Math.abs( hq % 2 )\n    c    = ( 3 * val * rad ) / ( 1 + z )\n    x    = c * z\n    add  = val * ( 1 - rad )\n    rgb  = switch hq % 6\n      when 0 then { r:c, g:x, b:0 }  #   0 -  60  red\n      when 1 then { r:x, g:c, b:0 }  #  60 - 120  green\n      when 2 then { r:0, g:c, b:x }  # 120 - 180  green\n      when 3 then { r:0, g:x, b:c }  # 180 - 240  blue\n      when 4 then { r:x, g:0, b:c }  # 240 - 300  blue\n      when 5 then { r:c, g:0, b:x }  # 300 - 360  red\n    @roundRGB( rgb, 100, add )\n\n  # Standalone since HSV is not detected by @rgb( arg )\n  rgbHsl:( H, s, l ) ->\n    h = H\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    p = l * (1 - s)\n    q = l * (1 - f * s)\n    t = l * (1 - (1 - f) * s)\n    v = l\n    rgb = switch i % 6\n      when 0 then { r:v, g:t, b:p }\n      when 1 then { r:q, g:v, b:p }\n      when 2 then { r:p, g:v, b:t }\n      when 3 then { r:p, g:q, b:v }\n      when 4 then { r:t, g:p, b:v }\n      when 5 then { r:v, g:p, b:q }\n    @roundRGB( rgb, 255 )\n\n  interpolateRgb:( rgb1, r1, rgb2, r2 ) ->\n    { r:rgb1.r * r1 + rgb2.r * r2, g:rgb1.g * r1 + rgb2.g * r2, b:rgb1.b * r1 + rgb2.b * r2 }\n\n  hue:( pageKey, isRYGB ) ->\n    toRYGB = ( rygb, rgb ) ->\n      if isRYGB then rygb else rgb\n    switch pageKey\n      when 'Red'     then 0\n      when 'Orange'  then toRYGB(  45,  30 )\n      when 'Yellow'  then toRYGB(  90,  60 )\n      when 'Lime'    then toRYGB( 135,  90 )\n      when 'Green'   then toRYGB( 180, 120 )\n      when 'Teal'    then toRYGB( 203, 150 )\n      when 'Cyan'    then toRYGB( 225, 180 )\n      when 'Blue'    then toRYGB( 270, 240 )\n      when 'Magenta' then toRYGB( 315, 300 )\n      else\n        console.log( 'Vis.hue() unknown pageKey', pageKey )\n        0\n        \n  lookUpSat:( sat ) =>\n    len = @distribution10s.length\n    idx = @distribution10s.indexOf(sat)\n    val = if 0 <= idx and idx < len then @distributionPri[idx] else 100\n    console.log( \"Vis.lookUpSat(sat)\", { sat:sat, idx:idx, val:val } ) if @debug\n    val\n\n  sigmoidal:( x, k, x0=0.5, L=1 ) ->\n    L / ( 1 + Math.exp(-k*(x-x0)) )\n\n  sigmoidalUni:( x ) ->\n    1 / ( 1 + Math.exp(-x) )\n\n  # Hill Equation\n  hillEq:( x, vmax=120.0, vmid=50.0, n=1.2 ) ->\n    xn = Math.pow( x, n )\n    vmax * xn / ( vmid + xn )\n\n  smoothSat:( sat ) ->\n    sat * @sigmoidalUni( sat )\n\n  even:( val ) =>\n    val\n\n# Create a distributed array of values\n  #  by default it returns [0,10,20,30,40,50,60,70,80,90,100] a closed range of 11 values\n  distribution:( func=@even, interval=10, min=0, max=100 ) =>\n    array = []\n    array.push( func(val) ) for val in [min..max] by interval\n    array\n\n  # --- Degrees and Radians ---\n  #  The svg functions deal with the svg convention where the y 90 degree axis points down\n\n  rad:( deg )      -> deg * Math.PI / 180\n  deg:( rad )      -> rad * 180 / Math.PI\n\n  sin:( deg )      -> @toZero(Math.sin(@rad(deg)))\n  cos:( deg )      -> @toZero(Math.cos(@rad(deg)))\n  tan:( deg )      -> Math.tan(@rad(deg))\n  asin:( y )       -> @deg360(Math.asin(y))     # Returns 270 to  90\n  acos:( x )       -> @deg360(Math.acos(x))     # Returns 0   to 180\n  sqrt:( val )     -> Math.sqrt(val)\n  hypoth:(x,y)     -> @sqrt(x*x+y*y)\n  abs:(  val )     -> Math.abs( val  )\n  max:(  args... ) -> Math.max( args )    # May not want args...\n  min:(  args... ) -> Math.min( args )    # May not want args...\n  round:( val )    -> Math.round( val )\n\n  deg360:(rad)     -> if rad < 0 then 360 + @deg(rad) else @deg(rad)\n  atan2:(y,x)      -> @deg360(Math.atan2(y,x))\n  hueZX:(z,x)      -> @round(@deg360(Math.atan2(-z,x)))\n\n  rot:( deg, ang ) ->\n    a = deg+ang\n    a = a + 360 if a < 0\n    a\n\n  svgDeg:( deg ) -> 360-deg\n  svgRad:( rad ) -> 2*Math.PI-rad\n\n  radSvg:( deg ) -> @rad(360-deg)\n  degSvg:( rad ) -> @deg(2*Math.PI-rad)\n  sinSvg:( deg ) -> Math.sin(@radSvg(deg))\n  cosSvg:( deg ) -> Math.cos(@radSvg(deg))\n\n  # --- Math Utilities ---\n\n  floor:( x, dx )          ->  dr = Math.round(dx); Math.floor( x / dr ) * dr\n  ceil:(  x, dx )          ->  dr = Math.round(dx); Math.ceil(  x / dr ) * dr\n  isZero:( v )             ->  -0.01 < v and v <   0.01\n  toZero:( v )             -> if @isZero(v) then 0.0 else v\n  isEqual:( x, y )         -> x-0.01 < y and y < x+0.01\n  isCoord:(x1,x2,y1,y2,z1,z2) -> @isEqual(x1,x2) and @isEqual(y1,y2) and @isEqual(z1,z2)\n  within:(min,val,max)     -> min   <= val  and val <= max  # Closed interval with <=\n\n  hasGlobal:( global, issue=true ) ->\n    has = window[global]?\n    console.error( \"Vis.hasGlobal() #{global} not present\" )  if not has and issue\n    has\n\n  getGlobal:( global, issue=true ) ->\n    if @hasGlobal( global, issue ) then window[global] else null\n\n  ready:( fn ) ->\n    switch fn\n     when  not @isFunction( fn )  then return               # Sanity check\n     when  @skipReady            then fn()\n     when  document.readyState is 'complete' then fn() # If document is already loaded, run method\n     else  document.addEventListener( 'DOMContentLoaded', fn, false )\n    return\n\n  getHtmlId:( name, type='', ext='' ) ->\n    id = name + type + ext + @uniqueIdExt\n    id.replace( /[ \\.]/g, \"\" )\n\n  cssNameType:( name, type='' ) -> name + type\n\n  # --- Css Transforms ---  \n\n  translate:( x0, y0 ) ->\n    if @isInTypeKeyArgs('number',x0,y0)\n      \" translate( #{x0}, #{y0} )\"\n    else\n      # toWarn(...)\n      \" translate( #{0}, #{0} )\"\n\n  scale:( sx, sy )  ->\n    if @isInTypeKeyArgs('number',sx, sy)\n      \" s( #{sx}, #{sy} )\"\n    else\n      # toWarn(...)\n      \" s( #{1}, #{1} )\"\n\n  rotate:( a, x, y ) ->\n    if @isInTypeKeyArgs('number',a, x, y )\n      \" rotate(#{a} #{x} #{y} )\"\n    else\n      # toWarn(...)\n      \" rotate(#{0} #{0} #{0} )\"\n\n  translateScale:( x0, y0, sx, sy ) ->\n    if @isInTypeKeyArgs('number',x0, y0, sx, sy)\n      \" translate( #{x0}, #{y0} ) s( #{sx}, #{sy} )\"\n    else\n      # toWarn(...)\n      \" translate( #{0}, #{0} ) s( #{1}, #{1} )\"\n\n  # Font Awesome Unicode lookup\n  unicode:( icon ) ->\n    uc    = FontAwe.icons[icon]\n    if not uc?\n      console.error( 'Vis.unicode() missing icon in Vis.FontAwesomeUnicodes for', icon )\n      uc = \"\\uf111\" # Circle\n    uc\n\nexport vis = new Vis()\n\n"
  ]
}