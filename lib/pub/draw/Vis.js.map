{
  "version": 3,
  "file": "Vis.js",
  "sourceRoot": "../../src/draw",
  "sources": [
    "Vis.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport Type     from '../test/Type.js'\nimport FontAwe  from './FontAwe.js'\n\nclass Vis extends Type\n\n  constructor:() ->\n    super()\n    @skipReady   = false\n    @time        = 0\n    @uniqueIdExt = ''\n  \n  # --- Color Spaces  ---\n  # RGB - that also works a RGBa with a:1.0 as a default or can be provided in objects or arrays\n  # HSV - recogized as input by Vis.rga(arg) with either rgb or rygb hues\n  # HSL - standalone\n  # LCH - not implemented yet\n  # LAB - not implemented yet\n\n  # @rgb is the conversion work horse that is used by the other functions\n  # Always returns an rgb object like { r:255, b:255, b:255, a:1.0 } rounded to from 0 to 255\n  #   When arg is an object then just return rgb object with a or alpha defaulted or added\n  #   When arg is an array with length === 3 then it is assumed values are hsv with hue in RYGB\n  #     hue 360, saturation 100, v for intensity 100\n  #     with hue as RYGB red=0deg, yellow=90deg green=180deg and blue=270deg\n  #   When arg is an array with length === 4 then it is assumed values  are hsv\n  #     with hue as RGB red=0deg, green=120deg and blue=240deg\n  #   When arg is a number the range expressed hex is 0x000000 to 0xFFFFFF\n  rgb:( arg ) ->\n    rgb = { r:255, g:255, b:255, a:1.0 } # default is white with alpha = 1.0 opaque\n    if @isObject(arg)\n      rgb   = arg\n      rgb.a = if arg.a? then arg.a else 1.0\n    else if @isArray(arg)\n      isRYGB = arg.length is 3  # 3 implies RYGB hue while 4 implies RGB hue\n      rgb    = @rgbHsv( arg[0], arg[1], arg[2], isRYGB ) \n      rgb.a  = arg[3] if arg.length is 4\n      console.log( 'Vis.rgb()', { arg:arg, rgb:rgb, isRYGB:isRYGB } ) if @debug\n    else if @isNumber(arg)\n      rgb = { r:(arg & 0xFF0000) >> 16,   g:(arg & 0x00FF00) >> 8,  b:arg & 0x0000FF }\n      rgb.a = 1.0\n    @round(rgb)\n\n  # Returns an rgb array with an alpha or full opacity of 1\n  rgba:( arg ) ->\n    rgb   = @rgb( arg )\n    rgb.a = 1.0 if not rgb.a?\n    [ rgb.r, rgb.g, rgb.b, rgb.a ]\n\n  # Returns a number that is interpreted as hex like 0xFFFFFF\n  #   Recommended for most libraries like Three.js\n  # 65536 is 16 to the fourth power and 256 is 16 squared\n  # Need to figure out how to generate an actual value not string in hex\n  hex:( arg ) ->\n    rgb = @rgb( arg )\n    rgb.r * 65536 + rgb.g * 256 + rgb.b\n\n  # Returns a number in hex format like '0xFFFFFF'\n  # Good for debugging\n  # Only use for hex strings.\n  # Do not use for hex values in style\n  str:( arg ) ->\n    rgb  = @rgb( arg )\n    str  = '0x'\n    str += @strHex(rgb.r)\n    str += @strHex(rgb.g)\n    str += @strHex(rgb.b)\n    str\n\n  # returns a css string in rgb format\n  # Recommended for all style in Vue and Svg\n  css:( arg  ) ->\n    rgb  = @rgb( arg )\n    \"\"\"rgb(#{rgb.r},#{rgb.g},#{rgb.b})\"\"\"\n\n  # Returns hsv when toRYGB=false or ysv when toRYGB=true\n  cyl:( arg, toRYGB=false ) ->\n    rgb  = @rgb( arg )\n    R = rgb.r\n    G = rgb.g\n    B = rgb.b\n    sum = R + G + B\n    r = R/sum; g = G/sum; b = B/sum\n    v = sum / 3\n    s = if R is G and G is B then 0 else 1 - 3 * Math.min(r,g,b) # Center Grayscale\n    a = @deg( Math.acos( ( r - 0.5*(g+b) ) / Math.sqrt((r-g)*(r-g)+(r-b)*(g-b)) ) )\n    h = if b <= g then a else 360 - a\n    h = 0 if s is 0\n    H = if toRYGB then @rygbHue(h) else h\n    [ H, s*100, v/2.55 ]\n\n  hsv:( arg ) ->\n    @cyl( arg, false )\n\n  # Returns an  array with hue in rygb coords\n  # RYGB red=0deg, yellow=90deg green=180deg and blue=270deg\n  ysv:( arg ) ->\n    @cyl( arg, true )\n\n  ###\n  hcl:( arg ) ->\n    rgb  = @rgb( arg )\n    R = rgb.r\n    G = rgb.g\n    B = rgb.b\n    a   = 3 * ( Math.min(R,G,B) / Math.max(R,G,B) ) / 100\n    q    = Math.exp( a )\n    h180   = @deg( Math.atan2( G - B, R - G ) )\n    H   = if h180 < 0 then 360 + h180 else h180\n    C   = q * ( Math.abs(R−G) + Math.abs(G−B) + Math.abs(B−R) ) / 3\n    L   = q *Math.max(R,G,B) + (1-q) * Math.min(R, G,B)  / 2\n    [ H. C, L ]\n  ###\n\n  # Need to chech output format\n  sphere:( hue, phi, rad ) ->\n    @rgba( [@rot(hue,90), 100*@sin(phi), 100*rad ] )\n\n  # Uses ` ` to fake out CoffeeScript code inspector\n  strHex:( num ) ->\n    str = `num.toString(16).toUpperCase()`\n    switch\n      when num is  0 then '00'\n      when num <  16 then '0' + str\n      else                str\n\n  # Rounds and scales rgb value to ints between 0 to 255\n  round:( rgb, scale=1 ) ->\n    rgb.a = if rgb.a? then rgb.a else 1.0\n    { r:Math.round(rgb.r*scale), g:Math.round(rgb.g*scale), b:Math.round(rgb.b*scale), a:rgb.a }\n\n  # Converts hues in 'ysv' RYGB range to 'hsv' and 'hsl' rgb hue\n  #   'rygb' has red=0deg, yellow=90deg green=180deg and blue=270deg\n  #   'rgb'  has red=0deg,              green=120deg and blue=240deg\n  rgbHue:( rygbHue ) ->\n    rgbHue = 0\n    if        0 <= rygbHue and rygbHue <  90 then rgbHue =        rygbHue      *  60 / 90\n    else if  90 <= rygbHue and rygbHue < 180 then rgbHue =  60 + (rygbHue- 90) *  60 / 90\n    else if 180 <= rygbHue and rygbHue < 270 then rgbHue = 120 + (rygbHue-180) * 120 / 90\n    else if 270 <= rygbHue and rygbHue < 360 then rgbHue = 240 + (rygbHue-270) * 120 / 90\n    rgbHue\n\n  # Converts hues in 'hsv' or 'hsl' RGB hue to 'tsv' RYGB range\n  #   'rgb'  has red=0deg,              green=120deg and blue=240deg\n  #   'rygb' has red=0deg, yellow=90deg green=180deg and blue=270deg\n  rygbHue:( rgbHue ) ->\n    rygbHue = 0\n    if        0 <= rgbHue and rgbHue < 120 then rygbHue =        rgbHue      *  90 /  60\n    else if 120 <= rgbHue and rgbHue < 240 then rygbHue = 180 + (rgbHue-120) *  90 / 120\n    else if 240 <= rgbHue and rgbHue < 360 then rygbHue = 270 + (rgbHue-240) *  90 / 120\n    rygbHue\n\n  # toRygb=true is 'ysc'\n  # hue is red=0deg, green=120deg and blue=240deg\n  rgbHsv:( Hue, Sat, Val, isRYGB ) ->\n    hue   = if isRYGB then @rgbHue(Hue) else Hue\n    sat   = 0.01 * Sat\n    val   = 2.55 * Val\n    rad   = sat  * val\n    cos60 = @cos(60)\n    sin60 = @sin(60)\n    x     = rad * Math.abs(@cos(hue))\n    y     = rad * Math.abs(@sin(hue))\n    z     = rad * Math.sqrt( x*x*cos60 + y*y*sin60 )\n    i     = Math.floor( hue / 60 )\n    switch i % 6\n      when 0 then { r:x,   g:0, b:0 }  #   0 -  60  red\n      when 1 then { r:x,   g:z, b:0 }  #  60 - 120  green\n      when 2 then { r:0,   g:z, b:z }  # 120 - 180  green\n      when 3 then { r:0,   g:z, b:z }  # 180 - 240  blue\n      when 4 then { r:x,   g:z, b:z }  # 240 - 300  blue\n      when 5 then { r:x,   g:0, b:y }  # 300 - 360  red\n\n  # toRygb=true is 'ysc'\n  # hue is red=0deg, green=120deg and blue=240deg\n  rgbHsv1:( Hue, Sat, Val, isRYGB ) ->\n    hue   = if isRYGB then @rgbHue(Hue) else Hue\n    sat   = 0.01 * Sat\n    val   = 2.55 * Val\n    prj   = (ang) =>\n      cos = Math.abs(@cos(hue)*@cos(ang))\n      sin = Math.abs(@sin(hue)*@sin(ang))\n      Math.sqrt( cos*cos + sin*sin ) * sat * val  # ???\n    if Sat = 0\n      { r:val, g:val, b:val }\n    else\n      { r:prj(  0), g:prj(120), b:prj(240) }\n\n  # toRygb=true is 'ysc' while\n  rgbHsv2:( H, S, V, isRYGB ) ->\n    h = if isRYGB then @rgbHue(H) else H\n    d = S * 0.01\n    c = @sigmoidal( d, 2, 0.25 ) # d\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    x = 1 - c\n    y = 1 - f * c\n    z = 1 - (1 - f) * c\n    rgb = switch i % 6\n      when 0 then { r:1, g:z, b:x }\n      when 1 then { r:y, g:1, b:x }\n      when 2 then { r:x, g:1, b:z }\n      when 3 then { r:x, g:y, b:1 }\n      when 4 then { r:z, g:x, b:1 }\n      when 5 then { r:1, g:x, b:y }\n    @round( rgb, 255 * V / 100 )\n\n  # Standalone since HSV is not detected by @rgb( arg )\n  rgbHsl:( H, s, l, isRYGB ) ->\n    h = if isRYGB then @rgbHue(H) else H\n    i = Math.floor( h / 60 )\n    f = h / 60 - i\n    p = l * (1 - s)\n    q = l * (1 - f * s)\n    t = l * (1 - (1 - f) * s)\n    v = l\n    rgb = switch i % 6\n      when 0 then { r:v, g:t, b:p }\n      when 1 then { r:q, g:v, b:p }\n      when 2 then { r:p, g:v, b:t }\n      when 3 then { r:p, g:q, b:v }\n      when 4 then { r:t, g:p, b:v }\n      when 5 then { r:v, g:p, b:q }\n    @round( rgb, 255 )\n\n  sigmoidal:( x, k, x0=0.5, L=1 ) ->\n    L / ( 1 + Math.exp(-k*(x-x0)) )\n\n  interpolateRgb:( rgb1, r1, rgb2, r2 ) ->\n    { r:rgb1.r * r1 + rgb2.r * r2, g:rgb1.g * r1 + rgb2.g * r2, b:rgb1.b * r1 + rgb2.b * r2 }\n\n  hue:( pageKey ) ->\n    switch pageKey\n      when 'Red'     then   0\n      when 'Orange'  then  45\n      when 'Yellow'  then  90\n      when 'Lime'    then 135\n      when 'Green'   then 180\n      when 'Cyan'    then 225\n      when 'Blue'    then 270\n      when 'Magenta' then 315\n      else\n        console.log( 'Vis.hue() unknown pageKey', pageKey )\n        0\n\n  # --- Degrees and Radians ---\n  #  The svg functions deal with the svg convention where the y 90 degree axis points down\n\n  rad:( deg ) -> deg * Math.PI / 180\n  deg:( rad ) -> rad * 180 / Math.PI\n  sin:( deg ) -> Math.sin(@rad(deg))\n  cos:( deg ) -> Math.cos(@rad(deg))\n\n  rot:( deg, ang ) ->\n    a = deg+ang\n    a = a + 360 if a < 0\n    a\n\n  svgDeg:( deg ) -> 360-deg\n  svgRad:( rad ) -> 2*Math.PI-rad\n\n  radSvg:( deg ) -> @rad(360-deg)\n  degSvg:( rad ) -> @deg(2*Math.PI-rad)\n  sinSvg:( deg ) -> Math.sin(@radSvg(deg))\n  cosSvg:( deg ) -> Math.cos(@radSvg(deg))\n\n  # --- Math Utilities ---\n\n  floor:( x, dx )          ->  dr = Math.round(dx); Math.floor( x / dr ) * dr\n  ceil:(  x, dx )          ->  dr = Math.round(dx); Math.ceil(  x / dr ) * dr\n  isZero:( v )             -> -0.01 <  v    and v  <  0.01\n  within:(min,val,max)     -> min   <= val  and val <= max  # Closed interval with <=\n\n  hasGlobal:( global, issue=true ) ->\n    has = window[global]?\n    console.error( \"Vis.hasGlobal() #{global} not present\" )  if not has and issue\n    has\n\n  getGlobal:( global, issue=true ) ->\n    if @hasGlobal( global, issue ) then window[global] else null\n\n  ready:( fn ) ->\n    switch fn\n     when  not @isFunction( fn )  then return               # Sanity check\n     when  @skipReady            then fn()\n     when  document.readyState is 'complete' then fn() # If document is already loaded, run method\n     else  document.addEventListener( 'DOMContentLoaded', fn, false )\n    return\n\n  getHtmlId:( name, type='', ext='' ) ->\n    id = name + type + ext + @uniqueIdExt\n    id.replace( /[ \\.]/g, \"\" )\n\n  cssNameType:( name, type='' ) -> name + type\n\n  # --- Css Transforms ---  \n\n  translate:( x0, y0 ) ->\n    if @isInTypeKeyArgs('number',x0,y0)\n      \" translate( #{x0}, #{y0} )\"\n    else\n      # toWarn(...)\n      \" translate( #{0}, #{0} )\"\n\n  scale:( sx, sy )  ->\n    if @isInTypeKeyArgs('number',sx, sy)\n      \" s( #{sx}, #{sy} )\"\n    else\n      # toWarn(...)\n      \" s( #{1}, #{1} )\"\n\n  rotate:( a, x, y ) ->\n    if @isInTypeKeyArgs('number',a, x, y )\n      \" rotate(#{a} #{x} #{y} )\"\n    else\n      # toWarn(...)\n      \" rotate(#{0} #{0} #{0} )\"\n\n  translateScale:( x0, y0, sx, sy ) ->\n    if @isInTypeKeyArgs('number',x0, y0, sx, sy)\n      \" translate( #{x0}, #{y0} ) s( #{sx}, #{sy} )\"\n    else\n      # toWarn(...)\n      \" translate( #{0}, #{0} ) s( #{1}, #{1} )\"\n\n  # Font Awesome Unicode lookup\n  unicode:( icon ) ->\n    uc    = FontAwe.icons[icon]\n    if not uc?\n      console.error( 'Vis.unicode() missing icon in Vis.FontAwesomeUnicodes for', icon )\n      uc = \"\\uf111\" # Circle\n    uc\n\nexport vis = new Vis()\n\n###  HCL\n  a   = 3 * ( Min(R,G,B) / Max(R,G,B) ) / 100\n  q    = Math.exp( a )\n  h180   = @deg( Math.atan2( G − B, R - G ) )\n  H   = if h180 < 0 then 360 + h180 else h180\n  C   = q * ( Math.abs(R−G) + Math.abs(G−B) + Math.abs(B−R) ) / 3\n  L   = q*Math.max(R,G,B) + (1 − q)*Math.mim(R, G,B)  / 2\n\n###\n"
  ]
}