{
  "version": 3,
  "file": "Worker.js",
  "sourceRoot": "lib/src/util",
  "sources": [
    "Worker.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n###\n  Lifecycle\n  1, Registered by Cache\n  2. Install\n     a. Open a cache.\n     b. Cache our files.\n     c. Confirm whether all the required assets are cached or not.\n  3. Fetch\n     a. Add a callback to .then() on the fetch request.\n     b.Once we get a response, we perform the following checks:\n       - Ensure the response is valid.\n       - Check the status is 200 on the response.\n       - Make sure the response type is basic,\n         - which indicates that it's a request from our origin.\n         - This means that requests to third party assets aren't cached as well.\n      c. Clone response\n###\n\nclass Worker\n\n  constructor:(  @cacheName,   @cacheObjs, @logPub ) ->\n    @cacheUrls = @toCacheUrls( @cacheObjs )                              #    1200 = 20 min\n    @cacheOpts = { headers:{ 'Cache-Control': 'public, max-age=1200' } } # 2592000 = 30 days\n    # @log( 'Worker this', @  )\n    @addEventListeners()\n\n  addEventListeners:() ->\n    self.addEventListener('install',  @onInstall  )\n    self.addEventListener('fetch',    @onFetch    )\n    self.addEventListener('activate', @onActivate )\n    return\n  \n  onInstall:( event ) =>\n    event.waitUntil(\n      caches.open( @cacheName )\n        .then( (cache) =>\n          @log( 'Install', '------ Open ------' )\n          for own key, obj of @cacheObjs\n            fetch( obj.url,   @cacheOpts )\n              .then( (response) =>\n                @log( '  Install', response.url )\n                return cache.put( response.url, response ) )\n          return )\n        .catch( (error) =>\n          @onCatch( 'Install', 'Error', error ); return ) )\n    return\n\n  onFetch:( event ) =>\n    url = event.request.url\n    console.log( 'Worker.onFetch()', url )\n    return if event.request.cache is 'only-if-cached' and event.request.mode isnt 'same-origin'\n    return if url  is 'http://localhost:3000/index.html?source=pwa'\n    event.respondWith(\n      caches.open( Worker.cacheName )\n        .then( (cache) =>\n          return cache.match( event.request, {ignoreSearch:true} ).then( (response) =>\n            return response or fetch( event.request,  @cacheOpts ).then( (response) =>\n              cache.put( event.request, response.clone() )\n              @log( 'Fetch', url )\n              #  @cacheUrls = [] if not @cacheUrls?\n              @cacheUrls.push( url ) if not @cacheUrls.includes(url)\n              return response ) ) )\n        .catch( (error) =>\n          @onCatch( 'Fetch', event.request.url, error  ) ) )\n    return\n  \n  onActivate:( event ) =>\n    event.waitUntil(\n      caches.keys()\n        .then( ( @cacheUrls ) =>\n          return @cacheUrls.filter( (cacheUrl) => @cacheUrlNeedsUpdate(cacheUrl) ) )\n        .then( (cachesToDelete) =>\n          return Promise.all(cachesToDelete.map( (cacheToDelete) =>\n            return caches.delete(cacheToDelete) ) ) )\n        .then(() =>\n           self.clients.claim()\n           @log( 'Activate', 'Called' ) )\n        .catch( (error) =>\n          @onCatch( 'Activate', 'Error', error )\n          return ) )\n    return\n\n  toCacheUrls:( objs ) ->\n    urls = []\n    urls.push( obj.url ) for own key, obj of objs\n    urls\n\n  log:( name, status, obj=null ) ->\n    if @logPub\n      if obj?\n        console.log( name, status, obj )\n      else\n        console.log( name, status )\n    return\n\n  onCatch:(        name, status, error ) =>\n    console.error( name, status, error )\n    return\n\n  cacheUrlNeedsUpdate:( cacheUrl ) ->\n     true\n\nWorker.version     = \"2.1\"          # Incrementing this should cause PWAs to updated\nWorker.cacheName   = 'Axiom'\nWorker.cacheObjs   = {}\n\nWorker.create = (      cacheName, cacheObjs, logPub ) ->\n  worker = new Worker( cacheName, cacheObjs, logPub )\n  if worker is false then {}\n  worker.log( \"Worker.create()\", cacheName )\n  return\n\nWorker.create( Worker.cacheName, Worker.cacheObjs, false )\n\n"
  ]
}