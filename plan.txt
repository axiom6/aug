
Debug
  1. Hexagon.coffee
     a. Get animation working
     b. On/Off
     b. Oscillate with val sin function
  2. Fix and the generalize coordinate system and Orthographic camera
     a. Get OrthoXYZ and OrthoISO working with projectionMatrix()
     b Grids yaxis scale off too short by 50%
  3, Implement troika text
  4. Organize Main.json and Main.coffee
  5. Fully move Cube in Aug to Visu
     a. Consider having Cube initialized by Main
  6. Reorganize Visu menus
  7. Visu side bar for Opts.json and Animate
  
Clean Up
  1. Vis
     a. Cleanup
     b. Vis.str hex output wrong
     c. Fix padded and move for and text color
  2. Clean up zzz

Features One
  1. Test
     a. Functional Test
     b. Push buttons in Replay to Test swithes to filter Test output
     c. Ability to run a complete CI test suite
     d. Archiving
        a. Test Mongo.coffee
     e. Test types
  2. Doc
  3. Consider a Main Base class for Augm Muse Visu Jitt Data

Debug Two
  0. elem undefined from mix.removeElem(...) called in Flavor.vue
  1. Create Trip.vue with Trip.coffee
  2, Remove some of the junk added to Vis
  3. Look into cicular JSON bug in Tester.reviewsLocal()
  4. Look into preventing Type.toStr() to Type.toStrObject() infinite recursions
  5. toStr(bigint)

Warnings
  1. [Violation] Added non-passive event listener to a scroll-blocking 'wheel' event.
     Consider marking event handler as 'passive' to make the page more responsive.
     See https://www.chromestatus.com/feature/5745543795965952
  2. [Violation] 'requestAnimationFrame' handler took 60ms
  3. [Violation] 'click' handler took 1090ms

Docs
  1. In progress

Tester unique capabilies:
  Setup Spec Type Schema Closures Unit Apply Switches Publish
  1. Setup:    Dirt simple setup a single function test() with import { test } from "./Tester.js"
  2. Spec:     For asserting 'enums' 'range' and 'regexp' matching
  3. Type:     Assertions with Type.js inherited by the Tester class
  4. Schema:   Ability to write "file-schema.json" schemas file for validation "file.json"
  5. Closures: Optional closure = (t) => t.eq( result, expect )  good for setup and tear down
  6. Unit:     Simple setup for ...-unit.js module with glob("/src/**/*-unit.js") or pathnames
  7. Apply:    Acuraracy with apply() i.e. result = func.apply( object, args )
     a. func(function)         a method or function
     b, obj(object)            an 'object' 'this' pointer
     c. [arguments.., expect]  calling argument array
  8. Switches: On off switches at multiple avoids need to comment out tests
     a. test().alwaysOn = true for CI( Continuous Integration )
     b. test().testing  = false for production
     c. describe.on(false) to turn off a block of tests
     d.   module.on(false) to turn off a test module
  9. Publish:  Test status and text to UI

Features Two
  1. Get Touch working again
  2. Work on Directions
  3. Scroll Tocs   on Mobile
  4. Refine orient on Mobile
  5. Sect.vue and Talk.vue out of date

JsonLD
  1. Standardize Schema
  2. MetroFoot JsonLD
  3. Get URL to specify routes?

DnD
  1. Deal with duplicate mounts
  2. Persist container status
  3. Transfer data
  4. Design for Muse Disp Prac and Comp
  5. Wide deployment

Augm Modules
  1. Replace MathBox
  2. Replace Ganja
  3. Three.js plot interface
  4. Three.js geom interface
  5. d3 interface
  6. Slim down Roboto font css

